   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"pprz_orientation_conversion.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	__aeabi_fmul
  19              		.global	__aeabi_f2iz
  20              		.global	__aeabi_i2d
  21              		.global	__aeabi_dadd
  22              		.global	__aeabi_d2iz
  23              		.section	.text.orientationCalcQuat_i,"ax",%progbits
  24              		.align	1
  25              		.global	orientationCalcQuat_i
  26              		.thumb
  27              		.thumb_func
  29              	orientationCalcQuat_i:
  30              	.LFB15:
  31              		.file 1 "math/pprz_orientation_conversion.c"
   1:math/pprz_orientation_conversion.c **** /*
   2:math/pprz_orientation_conversion.c ****  * Copyright (C) 2011-2012 The Paparazzi Team
   3:math/pprz_orientation_conversion.c ****  *
   4:math/pprz_orientation_conversion.c ****  * This file is part of paparazzi.
   5:math/pprz_orientation_conversion.c ****  *
   6:math/pprz_orientation_conversion.c ****  * paparazzi is free software; you can redistribute it and/or modify
   7:math/pprz_orientation_conversion.c ****  * it under the terms of the GNU General Public License as published by
   8:math/pprz_orientation_conversion.c ****  * the Free Software Foundation; either version 2, or (at your option)
   9:math/pprz_orientation_conversion.c ****  * any later version.
  10:math/pprz_orientation_conversion.c ****  *
  11:math/pprz_orientation_conversion.c ****  * paparazzi is distributed in the hope that it will be useful,
  12:math/pprz_orientation_conversion.c ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:math/pprz_orientation_conversion.c ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:math/pprz_orientation_conversion.c ****  * GNU General Public License for more details.
  15:math/pprz_orientation_conversion.c ****  *
  16:math/pprz_orientation_conversion.c ****  * You should have received a copy of the GNU General Public License
  17:math/pprz_orientation_conversion.c ****  * along with paparazzi; see the file COPYING.  If not, write to
  18:math/pprz_orientation_conversion.c ****  * the Free Software Foundation, 59 Temple Place - Suite 330,
  19:math/pprz_orientation_conversion.c ****  * Boston, MA 02111-1307, USA.
  20:math/pprz_orientation_conversion.c ****  */
  21:math/pprz_orientation_conversion.c **** 
  22:math/pprz_orientation_conversion.c **** /**
  23:math/pprz_orientation_conversion.c ****  * @file math/pprz_orientation_conversion.h
  24:math/pprz_orientation_conversion.c ****  *
  25:math/pprz_orientation_conversion.c ****  * Generic orientation representation and conversion.
  26:math/pprz_orientation_conversion.c ****  *
  27:math/pprz_orientation_conversion.c ****  * This is for example used in the @ref state_interface "state interface".
  28:math/pprz_orientation_conversion.c ****  *
  29:math/pprz_orientation_conversion.c ****  * @author Felix Ruess <felix.ruess@gmail.com>
  30:math/pprz_orientation_conversion.c ****  */
  31:math/pprz_orientation_conversion.c **** 
  32:math/pprz_orientation_conversion.c **** /**
  33:math/pprz_orientation_conversion.c ****  * @addtogroup math
  34:math/pprz_orientation_conversion.c ****  * @{
  35:math/pprz_orientation_conversion.c ****  */
  36:math/pprz_orientation_conversion.c **** /**
  37:math/pprz_orientation_conversion.c ****  * @addtogroup math_orientation_representation Generic Orientation Representations
  38:math/pprz_orientation_conversion.c ****  * @{
  39:math/pprz_orientation_conversion.c ****  */
  40:math/pprz_orientation_conversion.c **** #include "pprz_orientation_conversion.h"
  41:math/pprz_orientation_conversion.c **** 
  42:math/pprz_orientation_conversion.c **** 
  43:math/pprz_orientation_conversion.c **** /******************************************************************************
  44:math/pprz_orientation_conversion.c ****  *                                                                            *
  45:math/pprz_orientation_conversion.c ****  * Transformation functions for the ORIENTATION representations               *
  46:math/pprz_orientation_conversion.c ****  *                                                                            *
  47:math/pprz_orientation_conversion.c ****  *****************************************************************************/
  48:math/pprz_orientation_conversion.c **** 
  49:math/pprz_orientation_conversion.c **** void orientationCalcQuat_i(struct OrientationReps* orientation) {
  32              		.loc 1 49 0
  33              		.cfi_startproc
  34              		@ args = 0, pretend = 0, frame = 8
  35              		@ frame_needed = 0, uses_anonymous_args = 0
  36              	.LVL0:
  37 0000 2DE9F74F 		push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
  38              	.LCFI0:
  39              		.cfi_def_cfa_offset 48
  40              		.cfi_offset 0, -48
  41              		.cfi_offset 1, -44
  42              		.cfi_offset 2, -40
  43              		.cfi_offset 4, -36
  44              		.cfi_offset 5, -32
  45              		.cfi_offset 6, -28
  46              		.cfi_offset 7, -24
  47              		.cfi_offset 8, -20
  48              		.cfi_offset 9, -16
  49              		.cfi_offset 10, -12
  50              		.cfi_offset 11, -8
  51              		.cfi_offset 14, -4
  50:math/pprz_orientation_conversion.c ****   if (bit_is_set(orientation->status, ORREP_QUAT_I))
  52              		.loc 1 50 0
  53 0004 0578     		ldrb	r5, [r0, #0]	@ zero_extendqisi2
  49:math/pprz_orientation_conversion.c **** void orientationCalcQuat_i(struct OrientationReps* orientation) {
  54              		.loc 1 49 0
  55 0006 0446     		mov	r4, r0
  56              		.loc 1 50 0
  57 0008 EA07     		lsls	r2, r5, #31
  58 000a 00F1F884 		bmi	.L1
  51:math/pprz_orientation_conversion.c ****     return;
  52:math/pprz_orientation_conversion.c **** 
  53:math/pprz_orientation_conversion.c ****   if (bit_is_set(orientation->status, ORREP_QUAT_F)) {
  59              		.loc 1 53 0
  60 000e 2B07     		lsls	r3, r5, #28
  61 0010 1FD5     		bpl	.L3
  54:math/pprz_orientation_conversion.c ****     QUAT_BFP_OF_REAL(orientation->quat_i, orientation->quat_f);
  62              		.loc 1 54 0
  63 0012 4FF08E41 		mov	r1, #1191182336
  64 0016 406C     		ldr	r0, [r0, #68]	@ float
  65              	.LVL1:
  66 0018 FFF7FEFF 		bl	__aeabi_fmul
  67              	.LVL2:
  68 001c FFF7FEFF 		bl	__aeabi_f2iz
  69              	.LVL3:
  70 0020 4FF08E41 		mov	r1, #1191182336
  71 0024 6060     		str	r0, [r4, #4]
  72 0026 A06C     		ldr	r0, [r4, #72]	@ float
  73 0028 FFF7FEFF 		bl	__aeabi_fmul
  74              	.LVL4:
  75 002c FFF7FEFF 		bl	__aeabi_f2iz
  76              	.LVL5:
  77 0030 4FF08E41 		mov	r1, #1191182336
  78 0034 A060     		str	r0, [r4, #8]
  79 0036 E06C     		ldr	r0, [r4, #76]	@ float
  80 0038 FFF7FEFF 		bl	__aeabi_fmul
  81              	.LVL6:
  82 003c FFF7FEFF 		bl	__aeabi_f2iz
  83              	.LVL7:
  84 0040 4FF08E41 		mov	r1, #1191182336
  85 0044 E060     		str	r0, [r4, #12]
  86 0046 206D     		ldr	r0, [r4, #80]	@ float
  87 0048 FFF7FEFF 		bl	__aeabi_fmul
  88              	.LVL8:
  89 004c FFF7FEFF 		bl	__aeabi_f2iz
  90              	.LVL9:
  91 0050 33E3     		b	.L185
  92              	.LVL10:
  93              	.L3:
  55:math/pprz_orientation_conversion.c ****   }
  56:math/pprz_orientation_conversion.c ****   else if (bit_is_set(orientation->status, ORREP_RMAT_I)) {
  94              		.loc 1 56 0
  95 0052 6807     		lsls	r0, r5, #29
  96              	.LVL11:
  97 0054 40F1DD80 		bpl	.L5
  98              	.LBB2:
  57:math/pprz_orientation_conversion.c ****     INT32_QUAT_OF_RMAT(orientation->quat_i, orientation->rmat_i);
  99              		.loc 1 57 0
 100 0058 226A     		ldr	r2, [r4, #32]
 101 005a 236B     		ldr	r3, [r4, #48]
 102 005c 216C     		ldr	r1, [r4, #64]
 103 005e D018     		adds	r0, r2, r3
 104 0060 4018     		adds	r0, r0, r1
 105              	.LVL12:
 106 0062 0028     		cmp	r0, #0
 107 0064 31DD     		ble	.L6
 108              	.LVL13:
 109              	.LBB3:
 110              		.loc 1 57 0 is_stmt 0 discriminator 1
 111 0066 FFF7FEFF 		bl	__aeabi_i2d
 112              	.LVL14:
 113 006a 0022     		movs	r2, #0
 114 006c BD4B     		ldr	r3, .L202
 115 006e FFF7FEFF 		bl	__aeabi_dadd
 116              	.LVL15:
 117 0072 FFF7FEFF 		bl	__aeabi_d2iz
 118              	.LVL16:
 119 0076 8003     		lsls	r0, r0, #14
 120 0078 10D0     		beq	.L7
 121              	.LVL17:
 122              	.LBB4:
 123              		.loc 1 57 0 discriminator 4
 124 007a 0346     		mov	r3, r0
 125 007c 2821     		movs	r1, #40
 126              	.LVL18:
 127              	.L9:
 128              		.loc 1 57 0 discriminator 5
 129 007e B0FBF3F2 		udiv	r2, r0, r3
 130              	.LVL19:
 131 0082 D218     		adds	r2, r2, r3
 132              	.LVL20:
 133 0084 5208     		lsrs	r2, r2, #1
 134              	.LVL21:
 135 0086 9B1A     		subs	r3, r3, r2
 136              	.LVL22:
 137 0088 012B     		cmp	r3, #1
 138 008a 01D8     		bhi	.L8
 139              	.L10:
 140              		.loc 1 57 0
 141 008c 1046     		mov	r0, r2
 142              	.LVL23:
 143 008e 05E0     		b	.L7
 144              	.LVL24:
 145              	.L8:
 146 0090 0139     		subs	r1, r1, #1
 147              		.loc 1 57 0 discriminator 6
 148 0092 11F0FF01 		ands	r1, r1, #255
 149 0096 1346     		mov	r3, r2
 150 0098 F1D1     		bne	.L9
 151 009a F7E7     		b	.L10
 152              	.LVL25:
 153              	.L7:
 154              	.LBE4:
 155              		.loc 1 57 0 discriminator 8
 156 009c 4100     		lsls	r1, r0, #1
 157              	.LVL26:
 158 009e 0220     		movs	r0, #2
 159 00a0 91FBF0F2 		sdiv	r2, r1, r0
 160 00a4 E36B     		ldr	r3, [r4, #60]
 161 00a6 606B     		ldr	r0, [r4, #52]
 162 00a8 6260     		str	r2, [r4, #4]
 163 00aa C21A     		subs	r2, r0, r3
 164 00ac D003     		lsls	r0, r2, #15
 165 00ae 90FBF1F3 		sdiv	r3, r0, r1
 166 00b2 A26B     		ldr	r2, [r4, #56]
 167 00b4 A06A     		ldr	r0, [r4, #40]
 168 00b6 A360     		str	r3, [r4, #8]
 169 00b8 131A     		subs	r3, r2, r0
 170 00ba DA03     		lsls	r2, r3, #15
 171 00bc 92FBF1F0 		sdiv	r0, r2, r1
 172 00c0 E36A     		ldr	r3, [r4, #44]
 173 00c2 626A     		ldr	r2, [r4, #36]
 174 00c4 E060     		str	r0, [r4, #12]
 175 00c6 D21A     		subs	r2, r2, r3
 176 00c8 36E0     		b	.L186
 177              	.LVL27:
 178              	.L6:
 179              	.LBE3:
 180              		.loc 1 57 0 discriminator 2
 181 00ca 9A42     		cmp	r2, r3
 182 00cc 38DD     		ble	.L11
 183              		.loc 1 57 0 discriminator 9
 184 00ce 8A42     		cmp	r2, r1
 185 00d0 36DD     		ble	.L11
 186              	.LVL28:
 187              	.LBB5:
 188              		.loc 1 57 0 discriminator 11
 189 00d2 D01A     		subs	r0, r2, r3
 190              	.LVL29:
 191 00d4 401A     		subs	r0, r0, r1
 192 00d6 FFF7FEFF 		bl	__aeabi_i2d
 193              	.LVL30:
 194 00da 0022     		movs	r2, #0
 195 00dc A14B     		ldr	r3, .L202
 196 00de FFF7FEFF 		bl	__aeabi_dadd
 197              	.LVL31:
 198 00e2 FFF7FEFF 		bl	__aeabi_d2iz
 199              	.LVL32:
 200 00e6 8003     		lsls	r0, r0, #14
 201 00e8 10D0     		beq	.L12
 202              	.LVL33:
 203              	.LBB6:
 204              		.loc 1 57 0 discriminator 13
 205 00ea 0346     		mov	r3, r0
 206 00ec 2821     		movs	r1, #40
 207              	.LVL34:
 208              	.L14:
 209              		.loc 1 57 0 discriminator 14
 210 00ee B0FBF3F2 		udiv	r2, r0, r3
 211              	.LVL35:
 212 00f2 D218     		adds	r2, r2, r3
 213              	.LVL36:
 214 00f4 5208     		lsrs	r2, r2, #1
 215              	.LVL37:
 216 00f6 9B1A     		subs	r3, r3, r2
 217              	.LVL38:
 218 00f8 012B     		cmp	r3, #1
 219 00fa 01D8     		bhi	.L13
 220              	.L15:
 221              		.loc 1 57 0
 222 00fc 1046     		mov	r0, r2
 223              	.LVL39:
 224 00fe 05E0     		b	.L12
 225              	.LVL40:
 226              	.L13:
 227 0100 0139     		subs	r1, r1, #1
 228              		.loc 1 57 0 discriminator 15
 229 0102 11F0FF01 		ands	r1, r1, #255
 230 0106 1346     		mov	r3, r2
 231 0108 F1D1     		bne	.L14
 232 010a F7E7     		b	.L15
 233              	.LVL41:
 234              	.L12:
 235              	.LBE6:
 236              		.loc 1 57 0 discriminator 17
 237 010c 626B     		ldr	r2, [r4, #52]
 238 010e E36B     		ldr	r3, [r4, #60]
 239 0110 4100     		lsls	r1, r0, #1
 240              	.LVL42:
 241 0112 D01A     		subs	r0, r2, r3
 242 0114 C203     		lsls	r2, r0, #15
 243 0116 92FBF1F3 		sdiv	r3, r2, r1
 244 011a 0220     		movs	r0, #2
 245 011c 91FBF0F2 		sdiv	r2, r1, r0
 246 0120 6360     		str	r3, [r4, #4]
 247 0122 606A     		ldr	r0, [r4, #36]
 248 0124 E36A     		ldr	r3, [r4, #44]
 249 0126 A260     		str	r2, [r4, #8]
 250 0128 C218     		adds	r2, r0, r3
 251 012a D003     		lsls	r0, r2, #15
 252 012c 90FBF1F3 		sdiv	r3, r0, r1
 253 0130 E360     		str	r3, [r4, #12]
 254 0132 A26B     		ldr	r2, [r4, #56]
 255 0134 A36A     		ldr	r3, [r4, #40]
 256              	.LVL43:
 257              	.L188:
 258 0136 D218     		adds	r2, r2, r3
 259              	.L186:
 260 0138 D003     		lsls	r0, r2, #15
 261 013a 90FBF1F0 		sdiv	r0, r0, r1
 262 013e BCE2     		b	.L185
 263              	.LVL44:
 264              	.L11:
 265              	.LBE5:
 266              		.loc 1 57 0 discriminator 10
 267 0140 8B42     		cmp	r3, r1
 268 0142 32DD     		ble	.L16
 269              	.LVL45:
 270              	.LBB7:
 271              		.loc 1 57 0 discriminator 18
 272 0144 981A     		subs	r0, r3, r2
 273              	.LVL46:
 274 0146 401A     		subs	r0, r0, r1
 275 0148 FFF7FEFF 		bl	__aeabi_i2d
 276              	.LVL47:
 277 014c 0022     		movs	r2, #0
 278 014e 854B     		ldr	r3, .L202
 279 0150 FFF7FEFF 		bl	__aeabi_dadd
 280              	.LVL48:
 281 0154 FFF7FEFF 		bl	__aeabi_d2iz
 282              	.LVL49:
 283 0158 8003     		lsls	r0, r0, #14
 284 015a 10D0     		beq	.L17
 285              	.LVL50:
 286              	.LBB8:
 287              		.loc 1 57 0 discriminator 21
 288 015c 0346     		mov	r3, r0
 289 015e 2821     		movs	r1, #40
 290              	.LVL51:
 291              	.L19:
 292              		.loc 1 57 0 discriminator 22
 293 0160 B0FBF3F2 		udiv	r2, r0, r3
 294              	.LVL52:
 295 0164 D218     		adds	r2, r2, r3
 296              	.LVL53:
 297 0166 5208     		lsrs	r2, r2, #1
 298              	.LVL54:
 299 0168 9B1A     		subs	r3, r3, r2
 300              	.LVL55:
 301 016a 012B     		cmp	r3, #1
 302 016c 01D8     		bhi	.L18
 303              	.L20:
 304              		.loc 1 57 0
 305 016e 1046     		mov	r0, r2
 306              	.LVL56:
 307 0170 05E0     		b	.L17
 308              	.LVL57:
 309              	.L18:
 310 0172 0139     		subs	r1, r1, #1
 311              		.loc 1 57 0 discriminator 23
 312 0174 11F0FF01 		ands	r1, r1, #255
 313 0178 1346     		mov	r3, r2
 314 017a F1D1     		bne	.L19
 315 017c F7E7     		b	.L20
 316              	.LVL58:
 317              	.L17:
 318              	.LBE8:
 319              		.loc 1 57 0 discriminator 25
 320 017e A26B     		ldr	r2, [r4, #56]
 321 0180 A36A     		ldr	r3, [r4, #40]
 322 0182 4100     		lsls	r1, r0, #1
 323              	.LVL59:
 324 0184 D01A     		subs	r0, r2, r3
 325 0186 C203     		lsls	r2, r0, #15
 326 0188 92FBF1F3 		sdiv	r3, r2, r1
 327 018c 606A     		ldr	r0, [r4, #36]
 328 018e E26A     		ldr	r2, [r4, #44]
 329 0190 6360     		str	r3, [r4, #4]
 330 0192 8318     		adds	r3, r0, r2
 331 0194 D803     		lsls	r0, r3, #15
 332 0196 0223     		movs	r3, #2
 333 0198 90FBF1F2 		sdiv	r2, r0, r1
 334 019c 91FBF3F0 		sdiv	r0, r1, r3
 335 01a0 A260     		str	r2, [r4, #8]
 336 01a2 E060     		str	r0, [r4, #12]
 337 01a4 626B     		ldr	r2, [r4, #52]
 338 01a6 E36B     		ldr	r3, [r4, #60]
 339 01a8 C5E7     		b	.L188
 340              	.LVL60:
 341              	.L16:
 342              	.LBE7:
 343              	.LBB9:
 344              		.loc 1 57 0 discriminator 19
 345 01aa 8A1A     		subs	r2, r1, r2
 346              	.LVL61:
 347 01ac D01A     		subs	r0, r2, r3
 348              	.LVL62:
 349 01ae FFF7FEFF 		bl	__aeabi_i2d
 350              	.LVL63:
 351 01b2 0022     		movs	r2, #0
 352 01b4 6B4B     		ldr	r3, .L202
 353 01b6 FFF7FEFF 		bl	__aeabi_dadd
 354              	.LVL64:
 355 01ba FFF7FEFF 		bl	__aeabi_d2iz
 356              	.LVL65:
 357 01be 8003     		lsls	r0, r0, #14
 358 01c0 10D0     		beq	.L21
 359              	.LVL66:
 360              	.LBB10:
 361              		.loc 1 57 0 discriminator 27
 362 01c2 0346     		mov	r3, r0
 363 01c4 2821     		movs	r1, #40
 364              	.LVL67:
 365              	.L23:
 366              		.loc 1 57 0 discriminator 28
 367 01c6 B0FBF3F2 		udiv	r2, r0, r3
 368              	.LVL68:
 369 01ca D218     		adds	r2, r2, r3
 370              	.LVL69:
 371 01cc 5208     		lsrs	r2, r2, #1
 372              	.LVL70:
 373 01ce 9B1A     		subs	r3, r3, r2
 374              	.LVL71:
 375 01d0 012B     		cmp	r3, #1
 376 01d2 01D8     		bhi	.L22
 377              	.L24:
 378              		.loc 1 57 0
 379 01d4 1046     		mov	r0, r2
 380              	.LVL72:
 381 01d6 05E0     		b	.L21
 382              	.LVL73:
 383              	.L22:
 384 01d8 0139     		subs	r1, r1, #1
 385              		.loc 1 57 0 discriminator 29
 386 01da 11F0FF01 		ands	r1, r1, #255
 387 01de 1346     		mov	r3, r2
 388 01e0 F1D1     		bne	.L23
 389 01e2 F7E7     		b	.L24
 390              	.LVL74:
 391              	.L21:
 392              	.LBE10:
 393              		.loc 1 57 0 discriminator 31
 394 01e4 626A     		ldr	r2, [r4, #36]
 395 01e6 E36A     		ldr	r3, [r4, #44]
 396 01e8 4100     		lsls	r1, r0, #1
 397              	.LVL75:
 398 01ea D01A     		subs	r0, r2, r3
 399 01ec C203     		lsls	r2, r0, #15
 400 01ee 92FBF1F3 		sdiv	r3, r2, r1
 401 01f2 A06B     		ldr	r0, [r4, #56]
 402 01f4 A26A     		ldr	r2, [r4, #40]
 403 01f6 6360     		str	r3, [r4, #4]
 404 01f8 8318     		adds	r3, r0, r2
 405 01fa D803     		lsls	r0, r3, #15
 406 01fc 90FBF1F2 		sdiv	r2, r0, r1
 407 0200 E36B     		ldr	r3, [r4, #60]
 408 0202 606B     		ldr	r0, [r4, #52]
 409 0204 A260     		str	r2, [r4, #8]
 410 0206 C218     		adds	r2, r0, r3
 411 0208 D003     		lsls	r0, r2, #15
 412 020a 90FBF1F3 		sdiv	r3, r0, r1
 413 020e E360     		str	r3, [r4, #12]
 414 0210 84E2     		b	.L187
 415              	.LVL76:
 416              	.L5:
 417              	.LBE9:
 418              	.LBE2:
  58:math/pprz_orientation_conversion.c ****   }
  59:math/pprz_orientation_conversion.c ****   else if (bit_is_set(orientation->status, ORREP_EULER_I)) {
 419              		.loc 1 59 0 is_stmt 1
 420 0212 A907     		lsls	r1, r5, #30
 421 0214 40F14D81 		bpl	.L25
 422              	.LBB11:
  60:math/pprz_orientation_conversion.c ****     INT32_QUAT_OF_EULERS(orientation->quat_i, orientation->eulers_i);
 423              		.loc 1 60 0
 424 0218 6569     		ldr	r5, [r4, #20]
 425 021a 0227     		movs	r7, #2
 426 021c A269     		ldr	r2, [r4, #24]
 427 021e E669     		ldr	r6, [r4, #28]
 428 0220 95FBF7F1 		sdiv	r1, r5, r7
 429              	.LVL77:
 430 0224 92FBF7F2 		sdiv	r2, r2, r7
 431              	.LVL78:
 432 0228 96FBF7F3 		sdiv	r3, r6, r7
 433              	.LVL79:
 434              	.LBB12:
 435 022c 0846     		mov	r0, r1
 436              	.LVL80:
 437              	.L26:
 438              		.loc 1 60 0 is_stmt 0 discriminator 1
 439 022e 43F24325 		movw	r5, #12867
 440 0232 A842     		cmp	r0, r5
 441 0234 03DD     		ble	.L173
 442              	.L27:
 443              		.loc 1 60 0 discriminator 2
 444 0236 A0F5C947 		sub	r7, r0, #25728
 445 023a F81F     		subs	r0, r7, #7
 446              	.LVL81:
 447 023c F7E7     		b	.L26
 448              	.LVL82:
 449              	.L173:
 450              		.loc 1 60 0 discriminator 4
 451 023e 4A4F     		ldr	r7, .L202+4
 452 0240 B842     		cmp	r0, r7
 453 0242 03DA     		bge	.L190
 454              	.L29:
 455              		.loc 1 60 0 discriminator 5
 456 0244 00F5C940 		add	r0, r0, #25728
 457              	.LVL83:
 458 0248 0730     		adds	r0, r0, #7
 459              	.LVL84:
 460 024a F8E7     		b	.L173
 461              	.LVL85:
 462              	.L190:
 463              		.loc 1 60 0 discriminator 6
 464 024c 41F62116 		movw	r6, #6433
 465 0250 B042     		cmp	r0, r6
 466 0252 464D     		ldr	r5, .L202+8
 467 0254 03DD     		ble	.L30
 468              		.loc 1 60 0 discriminator 7
 469 0256 C0F54956 		rsb	r6, r0, #12864
 470 025a F01C     		adds	r0, r6, #3
 471              	.LVL86:
 472 025c 0CE0     		b	.L31
 473              	.L30:
 474              		.loc 1 60 0 discriminator 8
 475 025e 6FF4C957 		mvn	r7, #6432
 476 0262 B842     		cmp	r0, r7
 477 0264 06DA     		bge	.L32
 478              		.loc 1 60 0 discriminator 9
 479 0266 C0F17F40 		rsb	r0, r0, #-16777216
 480              	.LVL87:
 481 026a 00F57F06 		add	r6, r0, #16711680
 482 026e 06F54D40 		add	r0, r6, #52480
 483 0272 BD30     		adds	r0, r0, #189
 484              	.LVL88:
 485              	.L32:
 486              		.loc 1 60 0 discriminator 10
 487 0274 0028     		cmp	r0, #0
 488 0276 02DB     		blt	.L33
 489              	.L31:
 490              		.loc 1 60 0 discriminator 11
 491 0278 35F91000 		ldrsh	r0, [r5, r0, lsl #1]
 492              	.LVL89:
 493 027c 03E0     		b	.L34
 494              	.LVL90:
 495              	.L33:
 496              		.loc 1 60 0 discriminator 12
 497 027e 4742     		negs	r7, r0
 498 0280 35F91750 		ldrsh	r5, [r5, r7, lsl #1]
 499 0284 6842     		negs	r0, r5
 500              	.LVL91:
 501              	.L34:
 502              	.LBE12:
 503              	.LBB13:
 504              		.loc 1 60 0 discriminator 13
 505 0286 01F5C951 		add	r1, r1, #6432
 506              	.LVL92:
 507 028a 0131     		adds	r1, r1, #1
 508              	.LVL93:
 509              	.L35:
 510              		.loc 1 60 0 discriminator 14
 511 028c 43F24327 		movw	r7, #12867
 512 0290 B942     		cmp	r1, r7
 513 0292 03DD     		ble	.L174
 514              	.L36:
 515              		.loc 1 60 0 discriminator 15
 516 0294 A1F5C946 		sub	r6, r1, #25728
 517 0298 F11F     		subs	r1, r6, #7
 518              	.LVL94:
 519 029a F7E7     		b	.L35
 520              	.LVL95:
 521              	.L174:
 522              		.loc 1 60 0 discriminator 17
 523 029c 324D     		ldr	r5, .L202+4
 524 029e A942     		cmp	r1, r5
 525 02a0 03DA     		bge	.L191
 526              	.L38:
 527              		.loc 1 60 0 discriminator 18
 528 02a2 01F5C945 		add	r5, r1, #25728
 529 02a6 E91D     		adds	r1, r5, #7
 530              	.LVL96:
 531 02a8 F8E7     		b	.L174
 532              	.LVL97:
 533              	.L191:
 534              		.loc 1 60 0 discriminator 19
 535 02aa 41F62116 		movw	r6, #6433
 536 02ae B142     		cmp	r1, r6
 537 02b0 2E4F     		ldr	r7, .L202+8
 538 02b2 03DD     		ble	.L39
 539              		.loc 1 60 0 discriminator 20
 540 02b4 C1F54956 		rsb	r6, r1, #12864
 541 02b8 F11C     		adds	r1, r6, #3
 542              	.LVL98:
 543 02ba 0CE0     		b	.L40
 544              	.L39:
 545              		.loc 1 60 0 discriminator 21
 546 02bc 6FF4C955 		mvn	r5, #6432
 547 02c0 A942     		cmp	r1, r5
 548 02c2 06DA     		bge	.L41
 549              		.loc 1 60 0 discriminator 22
 550 02c4 C1F17F41 		rsb	r1, r1, #-16777216
 551              	.LVL99:
 552 02c8 01F57F06 		add	r6, r1, #16711680
 553 02cc 06F54D41 		add	r1, r6, #52480
 554 02d0 BD31     		adds	r1, r1, #189
 555              	.LVL100:
 556              	.L41:
 557              		.loc 1 60 0 discriminator 23
 558 02d2 0029     		cmp	r1, #0
 559 02d4 02DB     		blt	.L42
 560              	.L40:
 561              		.loc 1 60 0 discriminator 24
 562 02d6 37F91150 		ldrsh	r5, [r7, r1, lsl #1]
 563              	.LVL101:
 564 02da 03E0     		b	.L43
 565              	.LVL102:
 566              	.L42:
 567              		.loc 1 60 0 discriminator 25
 568 02dc 4D42     		negs	r5, r1
 569 02de 37F91570 		ldrsh	r7, [r7, r5, lsl #1]
 570 02e2 7D42     		negs	r5, r7
 571              	.LVL103:
 572              	.L43:
 573              	.LBE13:
 574              	.LBB14:
 575              		.loc 1 60 0 discriminator 26
 576 02e4 1146     		mov	r1, r2
 577              	.LVL104:
 578              	.L44:
 579              		.loc 1 60 0 discriminator 27
 580 02e6 43F24327 		movw	r7, #12867
 581 02ea B942     		cmp	r1, r7
 582 02ec 03DD     		ble	.L175
 583              	.L45:
 584              		.loc 1 60 0 discriminator 28
 585 02ee A1F5C947 		sub	r7, r1, #25728
 586 02f2 F91F     		subs	r1, r7, #7
 587              	.LVL105:
 588 02f4 F7E7     		b	.L44
 589              	.LVL106:
 590              	.L175:
 591              		.loc 1 60 0 discriminator 30
 592 02f6 1C4E     		ldr	r6, .L202+4
 593 02f8 B142     		cmp	r1, r6
 594 02fa 03DA     		bge	.L192
 595              	.L47:
 596              		.loc 1 60 0 discriminator 31
 597 02fc 01F5C941 		add	r1, r1, #25728
 598              	.LVL107:
 599 0300 0731     		adds	r1, r1, #7
 600              	.LVL108:
 601 0302 F8E7     		b	.L175
 602              	.LVL109:
 603              	.L192:
 604              		.loc 1 60 0 discriminator 32
 605 0304 41F62117 		movw	r7, #6433
 606 0308 B942     		cmp	r1, r7
 607 030a 184E     		ldr	r6, .L202+8
 608 030c 03DD     		ble	.L48
 609              		.loc 1 60 0 discriminator 33
 610 030e C1F54951 		rsb	r1, r1, #12864
 611              	.LVL110:
 612 0312 0331     		adds	r1, r1, #3
 613              	.LVL111:
 614 0314 0CE0     		b	.L49
 615              	.L48:
 616              		.loc 1 60 0 discriminator 34
 617 0316 6FF4C957 		mvn	r7, #6432
 618 031a B942     		cmp	r1, r7
 619 031c 06DA     		bge	.L50
 620              		.loc 1 60 0 discriminator 35
 621 031e C1F17F41 		rsb	r1, r1, #-16777216
 622              	.LVL112:
 623 0322 01F57F07 		add	r7, r1, #16711680
 624 0326 07F54D41 		add	r1, r7, #52480
 625 032a BD31     		adds	r1, r1, #189
 626              	.LVL113:
 627              	.L50:
 628              		.loc 1 60 0 discriminator 36
 629 032c 0029     		cmp	r1, #0
 630 032e 02DB     		blt	.L51
 631              	.L49:
 632              		.loc 1 60 0 discriminator 37
 633 0330 36F91110 		ldrsh	r1, [r6, r1, lsl #1]
 634              	.LVL114:
 635 0334 03E0     		b	.L52
 636              	.LVL115:
 637              	.L51:
 638              		.loc 1 60 0 discriminator 38
 639 0336 4F42     		negs	r7, r1
 640 0338 36F91760 		ldrsh	r6, [r6, r7, lsl #1]
 641 033c 7142     		negs	r1, r6
 642              	.LVL116:
 643              	.L52:
 644              	.LBE14:
 645              	.LBB15:
 646              		.loc 1 60 0 discriminator 39
 647 033e 02F5C952 		add	r2, r2, #6432
 648              	.LVL117:
 649 0342 0132     		adds	r2, r2, #1
 650              	.LVL118:
 651              	.L53:
 652              		.loc 1 60 0 discriminator 40
 653 0344 43F24327 		movw	r7, #12867
 654 0348 BA42     		cmp	r2, r7
 655 034a 03DD     		ble	.L176
 656              	.L54:
 657              		.loc 1 60 0 discriminator 41
 658 034c A2F5C942 		sub	r2, r2, #25728
 659              	.LVL119:
 660 0350 073A     		subs	r2, r2, #7
 661              	.LVL120:
 662 0352 F7E7     		b	.L53
 663              	.LVL121:
 664              	.L176:
 665              		.loc 1 60 0 discriminator 43
 666 0354 044E     		ldr	r6, .L202+4
 667 0356 B242     		cmp	r2, r6
 668 0358 0ADA     		bge	.L193
 669              	.L56:
 670              		.loc 1 60 0 discriminator 44
 671 035a 02F5C946 		add	r6, r2, #25728
 672 035e F21D     		adds	r2, r6, #7
 673              	.LVL122:
 674 0360 F8E7     		b	.L176
 675              	.L203:
 676 0362 00BF     		.align	2
 677              	.L202:
 678 0364 0000D040 		.word	1087373312
 679 0368 BDCDFFFF 		.word	-12867
 680 036c 00000000 		.word	pprz_trig_int
 681              	.LVL123:
 682              	.L193:
 683              		.loc 1 60 0 discriminator 45
 684 0370 41F62117 		movw	r7, #6433
 685 0374 BA42     		cmp	r2, r7
 686 0376 C34E     		ldr	r6, .L204
 687 0378 03DD     		ble	.L57
 688              		.loc 1 60 0 discriminator 46
 689 037a C2F54952 		rsb	r2, r2, #12864
 690              	.LVL124:
 691 037e 0332     		adds	r2, r2, #3
 692              	.LVL125:
 693 0380 0CE0     		b	.L58
 694              	.L57:
 695              		.loc 1 60 0 discriminator 47
 696 0382 6FF4C957 		mvn	r7, #6432
 697 0386 BA42     		cmp	r2, r7
 698 0388 06DA     		bge	.L59
 699              		.loc 1 60 0 discriminator 48
 700 038a C2F17F42 		rsb	r2, r2, #-16777216
 701              	.LVL126:
 702 038e 02F57F07 		add	r7, r2, #16711680
 703 0392 07F54D42 		add	r2, r7, #52480
 704 0396 BD32     		adds	r2, r2, #189
 705              	.LVL127:
 706              	.L59:
 707              		.loc 1 60 0 discriminator 49
 708 0398 002A     		cmp	r2, #0
 709 039a 02DB     		blt	.L60
 710              	.L58:
 711              		.loc 1 60 0 discriminator 50
 712 039c 36F91260 		ldrsh	r6, [r6, r2, lsl #1]
 713              	.LVL128:
 714 03a0 03E0     		b	.L61
 715              	.LVL129:
 716              	.L60:
 717              		.loc 1 60 0 discriminator 51
 718 03a2 5742     		negs	r7, r2
 719 03a4 36F91760 		ldrsh	r6, [r6, r7, lsl #1]
 720 03a8 7642     		negs	r6, r6
 721              	.LVL130:
 722              	.L61:
 723              	.LBE15:
 724              	.LBB16:
 725              		.loc 1 60 0 discriminator 52
 726 03aa 1A46     		mov	r2, r3
 727              	.LVL131:
 728              	.L62:
 729              		.loc 1 60 0 discriminator 53
 730 03ac 43F24327 		movw	r7, #12867
 731 03b0 BA42     		cmp	r2, r7
 732 03b2 03DD     		ble	.L177
 733              	.L63:
 734              		.loc 1 60 0 discriminator 54
 735 03b4 A2F5C947 		sub	r7, r2, #25728
 736 03b8 FA1F     		subs	r2, r7, #7
 737              	.LVL132:
 738 03ba F7E7     		b	.L62
 739              	.LVL133:
 740              	.L177:
 741              		.loc 1 60 0 discriminator 56
 742 03bc B24F     		ldr	r7, .L204+4
 743 03be BA42     		cmp	r2, r7
 744 03c0 03DA     		bge	.L194
 745              	.L65:
 746              		.loc 1 60 0 discriminator 57
 747 03c2 02F5C942 		add	r2, r2, #25728
 748              	.LVL134:
 749 03c6 0732     		adds	r2, r2, #7
 750              	.LVL135:
 751 03c8 F8E7     		b	.L177
 752              	.LVL136:
 753              	.L194:
 754              		.loc 1 60 0 discriminator 58
 755 03ca 41F62117 		movw	r7, #6433
 756 03ce BA42     		cmp	r2, r7
 757 03d0 AC4F     		ldr	r7, .L204
 758 03d2 03DD     		ble	.L66
 759              		.loc 1 60 0 discriminator 59
 760 03d4 C2F54952 		rsb	r2, r2, #12864
 761              	.LVL137:
 762 03d8 0332     		adds	r2, r2, #3
 763              	.LVL138:
 764 03da 0CE0     		b	.L67
 765              	.L66:
 766              		.loc 1 60 0 discriminator 60
 767 03dc 6FF4C95C 		mvn	ip, #6432
 768 03e0 6245     		cmp	r2, ip
 769 03e2 06DA     		bge	.L68
 770              		.loc 1 60 0 discriminator 61
 771 03e4 C2F17F42 		rsb	r2, r2, #-16777216
 772              	.LVL139:
 773 03e8 02F57F02 		add	r2, r2, #16711680
 774 03ec 02F54D42 		add	r2, r2, #52480
 775 03f0 BD32     		adds	r2, r2, #189
 776              	.LVL140:
 777              	.L68:
 778              		.loc 1 60 0 discriminator 62
 779 03f2 002A     		cmp	r2, #0
 780 03f4 02DB     		blt	.L69
 781              	.L67:
 782              		.loc 1 60 0 discriminator 63
 783 03f6 37F91220 		ldrsh	r2, [r7, r2, lsl #1]
 784              	.LVL141:
 785 03fa 03E0     		b	.L70
 786              	.LVL142:
 787              	.L69:
 788              		.loc 1 60 0 discriminator 64
 789 03fc 5242     		negs	r2, r2
 790              	.LVL143:
 791 03fe 37F91270 		ldrsh	r7, [r7, r2, lsl #1]
 792 0402 7A42     		negs	r2, r7
 793              	.LVL144:
 794              	.L70:
 795              	.LBE16:
 796              	.LBB17:
 797              		.loc 1 60 0 discriminator 65
 798 0404 03F5C953 		add	r3, r3, #6432
 799              	.LVL145:
 800 0408 0133     		adds	r3, r3, #1
 801              	.LVL146:
 802              	.L71:
 803              		.loc 1 60 0 discriminator 66
 804 040a 43F24327 		movw	r7, #12867
 805 040e BB42     		cmp	r3, r7
 806 0410 03DD     		ble	.L178
 807              	.L72:
 808              		.loc 1 60 0 discriminator 67
 809 0412 A3F5C943 		sub	r3, r3, #25728
 810              	.LVL147:
 811 0416 073B     		subs	r3, r3, #7
 812              	.LVL148:
 813 0418 F7E7     		b	.L71
 814              	.LVL149:
 815              	.L178:
 816              		.loc 1 60 0 discriminator 69
 817 041a 9B4F     		ldr	r7, .L204+4
 818 041c BB42     		cmp	r3, r7
 819 041e 03DA     		bge	.L195
 820              	.L74:
 821              		.loc 1 60 0 discriminator 70
 822 0420 03F5C947 		add	r7, r3, #25728
 823 0424 FB1D     		adds	r3, r7, #7
 824              	.LVL150:
 825 0426 F8E7     		b	.L178
 826              	.LVL151:
 827              	.L195:
 828              		.loc 1 60 0 discriminator 71
 829 0428 41F62117 		movw	r7, #6433
 830 042c BB42     		cmp	r3, r7
 831 042e 954F     		ldr	r7, .L204
 832 0430 03DD     		ble	.L75
 833              		.loc 1 60 0 discriminator 72
 834 0432 C3F54953 		rsb	r3, r3, #12864
 835              	.LVL152:
 836 0436 0333     		adds	r3, r3, #3
 837              	.LVL153:
 838 0438 0CE0     		b	.L76
 839              	.L75:
 840              		.loc 1 60 0 discriminator 73
 841 043a 6FF4C95C 		mvn	ip, #6432
 842 043e 6345     		cmp	r3, ip
 843 0440 06DA     		bge	.L77
 844              		.loc 1 60 0 discriminator 74
 845 0442 C3F17F43 		rsb	r3, r3, #-16777216
 846              	.LVL154:
 847 0446 03F57F03 		add	r3, r3, #16711680
 848 044a 03F54D43 		add	r3, r3, #52480
 849 044e BD33     		adds	r3, r3, #189
 850              	.LVL155:
 851              	.L77:
 852              		.loc 1 60 0 discriminator 75
 853 0450 002B     		cmp	r3, #0
 854 0452 02DB     		blt	.L78
 855              	.L76:
 856              		.loc 1 60 0 discriminator 76
 857 0454 37F91330 		ldrsh	r3, [r7, r3, lsl #1]
 858              	.LVL156:
 859 0458 03E0     		b	.L79
 860              	.LVL157:
 861              	.L78:
 862              		.loc 1 60 0 discriminator 77
 863 045a 5B42     		negs	r3, r3
 864              	.LVL158:
 865 045c 37F91370 		ldrsh	r7, [r7, r3, lsl #1]
 866 0460 7B42     		negs	r3, r7
 867              	.LVL159:
 868              	.L79:
 869              	.LBE17:
 870              		.loc 1 60 0 discriminator 78
 871 0462 03FB06F7 		mul	r7, r3, r6
 872 0466 5643     		muls	r6, r2, r6
 873              	.LVL160:
 874 0468 4A43     		muls	r2, r1, r2
 875              	.LVL161:
 876 046a 9213     		asrs	r2, r2, #14
 877 046c BF13     		asrs	r7, r7, #14
 878              	.LVL162:
 879 046e 4B43     		muls	r3, r1, r3
 880              	.LVL163:
 881 0470 02FB00F1 		mul	r1, r2, r0
 882              	.LVL164:
 883 0474 07FB05FC 		mul	ip, r7, r5
 884 0478 4913     		asrs	r1, r1, #13
 885 047a 01EB6C31 		add	r1, r1, ip, asr #13
 886 047e 4743     		muls	r7, r0, r7
 887              	.LVL165:
 888 0480 6160     		str	r1, [r4, #4]
 889 0482 6942     		negs	r1, r5
 890 0484 4A43     		muls	r2, r1, r2
 891 0486 7F13     		asrs	r7, r7, #13
 892 0488 B613     		asrs	r6, r6, #14
 893              	.LVL166:
 894 048a 07EB6232 		add	r2, r7, r2, asr #13
 895 048e 9B13     		asrs	r3, r3, #14
 896              	.LVL167:
 897 0490 A260     		str	r2, [r4, #8]
 898 0492 06FB00F2 		mul	r2, r6, r0
 899 0496 4042     		negs	r0, r0
 900              	.LVL168:
 901 0498 03FB05F1 		mul	r1, r3, r5
 902 049c 4343     		muls	r3, r0, r3
 903              	.LVL169:
 904 049e 6E43     		muls	r6, r5, r6
 905              	.LVL170:
 906 04a0 5213     		asrs	r2, r2, #13
 907 04a2 5B13     		asrs	r3, r3, #13
 908 04a4 02EB6131 		add	r1, r2, r1, asr #13
 909 04a8 03EB6636 		add	r6, r3, r6, asr #13
 910 04ac E160     		str	r1, [r4, #12]
 911 04ae 2661     		str	r6, [r4, #16]
 912 04b0 A1E2     		b	.L4
 913              	.LVL171:
 914              	.L25:
 915              	.LBE11:
  61:math/pprz_orientation_conversion.c ****   }
  62:math/pprz_orientation_conversion.c ****   else if (bit_is_set(orientation->status, ORREP_RMAT_F)) {
 916              		.loc 1 62 0 is_stmt 1
 917 04b2 AA06     		lsls	r2, r5, #26
 918 04b4 40F13681 		bpl	.L80
  63:math/pprz_orientation_conversion.c ****     RMAT_BFP_OF_REAL(orientation->rmat_i, orientation->rmat_f);
 919              		.loc 1 63 0
 920 04b8 4FF08D41 		mov	r1, #1182793728
 921 04bc 206E     		ldr	r0, [r4, #96]	@ float
 922 04be FFF7FEFF 		bl	__aeabi_fmul
 923              	.LVL172:
 924 04c2 FFF7FEFF 		bl	__aeabi_f2iz
 925              	.LVL173:
 926 04c6 4FF08D41 		mov	r1, #1182793728
 927 04ca 0646     		mov	r6, r0
 928 04cc 2062     		str	r0, [r4, #32]
 929 04ce 606E     		ldr	r0, [r4, #100]	@ float
 930 04d0 0096     		str	r6, [sp, #0]
 931 04d2 FFF7FEFF 		bl	__aeabi_fmul
 932              	.LVL174:
 933 04d6 FFF7FEFF 		bl	__aeabi_f2iz
 934              	.LVL175:
 935 04da 4FF08D41 		mov	r1, #1182793728
 936 04de 6062     		str	r0, [r4, #36]
 937 04e0 8346     		mov	fp, r0
 938 04e2 A06E     		ldr	r0, [r4, #104]	@ float
 939 04e4 FFF7FEFF 		bl	__aeabi_fmul
 940              	.LVL176:
 941 04e8 FFF7FEFF 		bl	__aeabi_f2iz
 942              	.LVL177:
 943 04ec 4FF08D41 		mov	r1, #1182793728
 944 04f0 A062     		str	r0, [r4, #40]
 945 04f2 8046     		mov	r8, r0
 946 04f4 E06E     		ldr	r0, [r4, #108]	@ float
 947 04f6 FFF7FEFF 		bl	__aeabi_fmul
 948              	.LVL178:
 949 04fa FFF7FEFF 		bl	__aeabi_f2iz
 950              	.LVL179:
 951 04fe 4FF08D41 		mov	r1, #1182793728
 952 0502 E062     		str	r0, [r4, #44]
 953 0504 8246     		mov	sl, r0
 954 0506 206F     		ldr	r0, [r4, #112]	@ float
 955 0508 FFF7FEFF 		bl	__aeabi_fmul
 956              	.LVL180:
 957 050c FFF7FEFF 		bl	__aeabi_f2iz
 958              	.LVL181:
 959 0510 4FF08D41 		mov	r1, #1182793728
 960 0514 0346     		mov	r3, r0
 961 0516 2063     		str	r0, [r4, #48]
 962 0518 606F     		ldr	r0, [r4, #116]	@ float
 963 051a 0193     		str	r3, [sp, #4]
 964 051c FFF7FEFF 		bl	__aeabi_fmul
 965              	.LVL182:
 966 0520 FFF7FEFF 		bl	__aeabi_f2iz
 967              	.LVL183:
 968 0524 4FF08D41 		mov	r1, #1182793728
 969 0528 6063     		str	r0, [r4, #52]
 970 052a 0746     		mov	r7, r0
 971 052c A06F     		ldr	r0, [r4, #120]	@ float
 972 052e FFF7FEFF 		bl	__aeabi_fmul
 973              	.LVL184:
 974 0532 FFF7FEFF 		bl	__aeabi_f2iz
 975              	.LVL185:
 976 0536 4FF08D41 		mov	r1, #1182793728
 977 053a A063     		str	r0, [r4, #56]
 978 053c 8146     		mov	r9, r0
 979 053e E06F     		ldr	r0, [r4, #124]	@ float
 980 0540 FFF7FEFF 		bl	__aeabi_fmul
 981              	.LVL186:
 982 0544 FFF7FEFF 		bl	__aeabi_f2iz
 983              	.LVL187:
 984 0548 4FF08D41 		mov	r1, #1182793728
 985 054c E063     		str	r0, [r4, #60]
 986 054e 0646     		mov	r6, r0
 987 0550 D4F88000 		ldr	r0, [r4, #128]	@ float
 988 0554 FFF7FEFF 		bl	__aeabi_fmul
 989              	.LVL188:
 990 0558 FFF7FEFF 		bl	__aeabi_f2iz
 991              	.LVL189:
 992              	.LBB18:
  64:math/pprz_orientation_conversion.c ****     SetBit(orientation->status, ORREP_RMAT_I);
  65:math/pprz_orientation_conversion.c ****     INT32_QUAT_OF_RMAT(orientation->quat_i, orientation->rmat_i);
 993              		.loc 1 65 0
 994 055c 9DE80C00 		ldmia	sp, {r2, r3}
 995              	.LBE18:
  63:math/pprz_orientation_conversion.c ****     RMAT_BFP_OF_REAL(orientation->rmat_i, orientation->rmat_f);
 996              		.loc 1 63 0
 997 0560 0146     		mov	r1, r0
 998 0562 2064     		str	r0, [r4, #64]
 999              	.LBB27:
 1000              		.loc 1 65 0
 1001 0564 D018     		adds	r0, r2, r3
 1002 0566 4018     		adds	r0, r0, r1
 1003              	.LVL190:
 1004              	.LBE27:
  64:math/pprz_orientation_conversion.c ****     SetBit(orientation->status, ORREP_RMAT_I);
 1005              		.loc 1 64 0
 1006 0568 45F00405 		orr	r5, r5, #4
 1007              	.LBB28:
 1008              		.loc 1 65 0
 1009 056c 0028     		cmp	r0, #0
 1010              	.LBE28:
  64:math/pprz_orientation_conversion.c ****     SetBit(orientation->status, ORREP_RMAT_I);
 1011              		.loc 1 64 0
 1012 056e 2570     		strb	r5, [r4, #0]
 1013              	.LBB29:
 1014              		.loc 1 65 0
 1015 0570 31DD     		ble	.L81
 1016              	.LVL191:
 1017              	.LBB19:
 1018              		.loc 1 65 0 is_stmt 0 discriminator 1
 1019 0572 FFF7FEFF 		bl	__aeabi_i2d
 1020              	.LVL192:
 1021 0576 0022     		movs	r2, #0
 1022 0578 444B     		ldr	r3, .L204+8
 1023 057a FFF7FEFF 		bl	__aeabi_dadd
 1024              	.LVL193:
 1025 057e FFF7FEFF 		bl	__aeabi_d2iz
 1026              	.LVL194:
 1027 0582 8003     		lsls	r0, r0, #14
 1028 0584 10D0     		beq	.L82
 1029              	.LVL195:
 1030              	.LBB20:
 1031              		.loc 1 65 0 discriminator 4
 1032 0586 0346     		mov	r3, r0
 1033 0588 2821     		movs	r1, #40
 1034              	.LVL196:
 1035              	.L84:
 1036              		.loc 1 65 0 discriminator 5
 1037 058a B0FBF3F2 		udiv	r2, r0, r3
 1038              	.LVL197:
 1039 058e D218     		adds	r2, r2, r3
 1040              	.LVL198:
 1041 0590 5208     		lsrs	r2, r2, #1
 1042              	.LVL199:
 1043 0592 9B1A     		subs	r3, r3, r2
 1044              	.LVL200:
 1045 0594 012B     		cmp	r3, #1
 1046 0596 01D8     		bhi	.L83
 1047              	.L85:
 1048              		.loc 1 65 0
 1049 0598 1046     		mov	r0, r2
 1050              	.LVL201:
 1051 059a 05E0     		b	.L82
 1052              	.LVL202:
 1053              	.L83:
 1054 059c 0139     		subs	r1, r1, #1
 1055              		.loc 1 65 0 discriminator 6
 1056 059e 11F0FF01 		ands	r1, r1, #255
 1057 05a2 1346     		mov	r3, r2
 1058 05a4 F1D1     		bne	.L84
 1059 05a6 F7E7     		b	.L85
 1060              	.LVL203:
 1061              	.L82:
 1062              	.LBE20:
 1063              		.loc 1 65 0 discriminator 8
 1064 05a8 4200     		lsls	r2, r0, #1
 1065              	.LVL204:
 1066 05aa 0223     		movs	r3, #2
 1067 05ac 92FBF3F1 		sdiv	r1, r2, r3
 1068 05b0 BE1B     		subs	r6, r7, r6
 1069 05b2 C8EB0903 		rsb	r3, r8, r9
 1070 05b6 F003     		lsls	r0, r6, #15
 1071 05b8 6160     		str	r1, [r4, #4]
 1072 05ba CAEB0B0A 		rsb	sl, sl, fp
 1073 05be D903     		lsls	r1, r3, #15
 1074 05c0 90FBF2F6 		sdiv	r6, r0, r2
 1075 05c4 4FEACA3A 		lsl	sl, sl, #15
 1076 05c8 91FBF2F0 		sdiv	r0, r1, r2
 1077 05cc E060     		str	r0, [r4, #12]
 1078 05ce A660     		str	r6, [r4, #8]
 1079 05d0 9AFBF2F0 		sdiv	r0, sl, r2
 1080 05d4 71E0     		b	.L185
 1081              	.LVL205:
 1082              	.L81:
 1083              	.LBE19:
 1084              		.loc 1 65 0 discriminator 2
 1085 05d6 9A42     		cmp	r2, r3
 1086 05d8 34DD     		ble	.L86
 1087              		.loc 1 65 0 discriminator 9
 1088 05da 8A42     		cmp	r2, r1
 1089 05dc 32DD     		ble	.L86
 1090              	.LVL206:
 1091              	.LBB21:
 1092              		.loc 1 65 0 discriminator 11
 1093 05de D21A     		subs	r2, r2, r3
 1094              	.LVL207:
 1095 05e0 501A     		subs	r0, r2, r1
 1096              	.LVL208:
 1097 05e2 FFF7FEFF 		bl	__aeabi_i2d
 1098              	.LVL209:
 1099 05e6 0022     		movs	r2, #0
 1100 05e8 284B     		ldr	r3, .L204+8
 1101 05ea FFF7FEFF 		bl	__aeabi_dadd
 1102              	.LVL210:
 1103 05ee FFF7FEFF 		bl	__aeabi_d2iz
 1104              	.LVL211:
 1105 05f2 8003     		lsls	r0, r0, #14
 1106 05f4 10D0     		beq	.L87
 1107              	.LVL212:
 1108              	.LBB22:
 1109              		.loc 1 65 0 discriminator 13
 1110 05f6 0346     		mov	r3, r0
 1111 05f8 2821     		movs	r1, #40
 1112              	.LVL213:
 1113              	.L89:
 1114              		.loc 1 65 0 discriminator 14
 1115 05fa B0FBF3F2 		udiv	r2, r0, r3
 1116              	.LVL214:
 1117 05fe D218     		adds	r2, r2, r3
 1118              	.LVL215:
 1119 0600 5208     		lsrs	r2, r2, #1
 1120              	.LVL216:
 1121 0602 9B1A     		subs	r3, r3, r2
 1122              	.LVL217:
 1123 0604 012B     		cmp	r3, #1
 1124 0606 01D8     		bhi	.L88
 1125              	.L90:
 1126              		.loc 1 65 0
 1127 0608 1046     		mov	r0, r2
 1128              	.LVL218:
 1129 060a 05E0     		b	.L87
 1130              	.LVL219:
 1131              	.L88:
 1132 060c 0139     		subs	r1, r1, #1
 1133              		.loc 1 65 0 discriminator 15
 1134 060e 11F0FF01 		ands	r1, r1, #255
 1135 0612 1346     		mov	r3, r2
 1136 0614 F1D1     		bne	.L89
 1137 0616 F7E7     		b	.L90
 1138              	.LVL220:
 1139              	.L87:
 1140              	.LBE22:
 1141              		.loc 1 65 0 discriminator 17
 1142 0618 BE1B     		subs	r6, r7, r6
 1143 061a 4200     		lsls	r2, r0, #1
 1144              	.LVL221:
 1145 061c F303     		lsls	r3, r6, #15
 1146 061e 93FBF2F6 		sdiv	r6, r3, r2
 1147 0622 0221     		movs	r1, #2
 1148 0624 0BEB0A03 		add	r3, fp, sl
 1149 0628 92FBF1F0 		sdiv	r0, r2, r1
 1150 062c C844     		add	r8, r9, r8
 1151 062e D903     		lsls	r1, r3, #15
 1152 0630 A060     		str	r0, [r4, #8]
 1153 0632 4FEAC838 		lsl	r8, r8, #15
 1154 0636 91FBF2F0 		sdiv	r0, r1, r2
 1155 063a E060     		str	r0, [r4, #12]
 1156 063c 6660     		str	r6, [r4, #4]
 1157 063e 98FBF2F0 		sdiv	r0, r8, r2
 1158 0642 3AE0     		b	.L185
 1159              	.LVL222:
 1160              	.L86:
 1161              	.LBE21:
 1162              		.loc 1 65 0 discriminator 10
 1163 0644 8B42     		cmp	r3, r1
 1164 0646 3ADD     		ble	.L91
 1165              	.LVL223:
 1166              	.LBB23:
 1167              		.loc 1 65 0 discriminator 18
 1168 0648 9B1A     		subs	r3, r3, r2
 1169              	.LVL224:
 1170 064a 581A     		subs	r0, r3, r1
 1171              	.LVL225:
 1172 064c FFF7FEFF 		bl	__aeabi_i2d
 1173              	.LVL226:
 1174 0650 0022     		movs	r2, #0
 1175 0652 0E4B     		ldr	r3, .L204+8
 1176 0654 FFF7FEFF 		bl	__aeabi_dadd
 1177              	.LVL227:
 1178 0658 FFF7FEFF 		bl	__aeabi_d2iz
 1179              	.LVL228:
 1180 065c 8003     		lsls	r0, r0, #14
 1181 065e 17D0     		beq	.L92
 1182              	.LVL229:
 1183              	.LBB24:
 1184              		.loc 1 65 0 discriminator 21
 1185 0660 0346     		mov	r3, r0
 1186 0662 2821     		movs	r1, #40
 1187              	.LVL230:
 1188              	.L94:
 1189              		.loc 1 65 0 discriminator 22
 1190 0664 B0FBF3F2 		udiv	r2, r0, r3
 1191              	.LVL231:
 1192 0668 D218     		adds	r2, r2, r3
 1193              	.LVL232:
 1194 066a 5208     		lsrs	r2, r2, #1
 1195              	.LVL233:
 1196 066c 9B1A     		subs	r3, r3, r2
 1197              	.LVL234:
 1198 066e 012B     		cmp	r3, #1
 1199 0670 01D8     		bhi	.L93
 1200              	.L95:
 1201              		.loc 1 65 0
 1202 0672 1046     		mov	r0, r2
 1203              	.LVL235:
 1204 0674 0CE0     		b	.L92
 1205              	.LVL236:
 1206              	.L93:
 1207 0676 0139     		subs	r1, r1, #1
 1208              		.loc 1 65 0 discriminator 23
 1209 0678 11F0FF01 		ands	r1, r1, #255
 1210 067c 1346     		mov	r3, r2
 1211 067e F1D1     		bne	.L94
 1212 0680 F7E7     		b	.L95
 1213              	.L205:
 1214 0682 00BF     		.align	2
 1215              	.L204:
 1216 0684 00000000 		.word	pprz_trig_int
 1217 0688 BDCDFFFF 		.word	-12867
 1218 068c 0000D040 		.word	1087373312
 1219              	.LVL237:
 1220              	.L92:
 1221              	.LBE24:
 1222              		.loc 1 65 0 discriminator 25
 1223 0690 C8EB0903 		rsb	r3, r8, r9
 1224 0694 4200     		lsls	r2, r0, #1
 1225              	.LVL238:
 1226 0696 D903     		lsls	r1, r3, #15
 1227 0698 0BEB0A03 		add	r3, fp, sl
 1228 069c 91FBF2F0 		sdiv	r0, r1, r2
 1229 06a0 BE19     		adds	r6, r7, r6
 1230 06a2 D903     		lsls	r1, r3, #15
 1231 06a4 0223     		movs	r3, #2
 1232 06a6 6060     		str	r0, [r4, #4]
 1233 06a8 F603     		lsls	r6, r6, #15
 1234 06aa 91FBF2F0 		sdiv	r0, r1, r2
 1235 06ae 92FBF3F1 		sdiv	r1, r2, r3
 1236 06b2 A060     		str	r0, [r4, #8]
 1237 06b4 E160     		str	r1, [r4, #12]
 1238 06b6 96FBF2F0 		sdiv	r0, r6, r2
 1239              	.LVL239:
 1240              	.L185:
 1241 06ba 2061     		str	r0, [r4, #16]
 1242 06bc 9BE1     		b	.L4
 1243              	.LVL240:
 1244              	.L91:
 1245              	.LBE23:
 1246              	.LBB25:
 1247              		.loc 1 65 0 discriminator 19
 1248 06be 8A1A     		subs	r2, r1, r2
 1249              	.LVL241:
 1250 06c0 D01A     		subs	r0, r2, r3
 1251              	.LVL242:
 1252 06c2 FFF7FEFF 		bl	__aeabi_i2d
 1253              	.LVL243:
 1254 06c6 0022     		movs	r2, #0
 1255 06c8 B24B     		ldr	r3, .L206
 1256 06ca FFF7FEFF 		bl	__aeabi_dadd
 1257              	.LVL244:
 1258 06ce FFF7FEFF 		bl	__aeabi_d2iz
 1259              	.LVL245:
 1260 06d2 8003     		lsls	r0, r0, #14
 1261 06d4 10D0     		beq	.L96
 1262              	.LVL246:
 1263              	.LBB26:
 1264              		.loc 1 65 0 discriminator 27
 1265 06d6 0346     		mov	r3, r0
 1266 06d8 2821     		movs	r1, #40
 1267              	.LVL247:
 1268              	.L98:
 1269              		.loc 1 65 0 discriminator 28
 1270 06da B0FBF3F2 		udiv	r2, r0, r3
 1271              	.LVL248:
 1272 06de D218     		adds	r2, r2, r3
 1273              	.LVL249:
 1274 06e0 5208     		lsrs	r2, r2, #1
 1275              	.LVL250:
 1276 06e2 9B1A     		subs	r3, r3, r2
 1277              	.LVL251:
 1278 06e4 012B     		cmp	r3, #1
 1279 06e6 01D8     		bhi	.L97
 1280              	.L99:
 1281              		.loc 1 65 0
 1282 06e8 1046     		mov	r0, r2
 1283              	.LVL252:
 1284 06ea 05E0     		b	.L96
 1285              	.LVL253:
 1286              	.L97:
 1287 06ec 0139     		subs	r1, r1, #1
 1288              		.loc 1 65 0 discriminator 29
 1289 06ee 11F0FF01 		ands	r1, r1, #255
 1290 06f2 1346     		mov	r3, r2
 1291 06f4 F1D1     		bne	.L98
 1292 06f6 F7E7     		b	.L99
 1293              	.LVL254:
 1294              	.L96:
 1295              	.LBE26:
 1296              		.loc 1 65 0 discriminator 31
 1297 06f8 CAEB0B02 		rsb	r2, sl, fp
 1298 06fc 4100     		lsls	r1, r0, #1
 1299              	.LVL255:
 1300 06fe D303     		lsls	r3, r2, #15
 1301 0700 BE19     		adds	r6, r7, r6
 1302 0702 09EB0802 		add	r2, r9, r8
 1303 0706 93FBF1F0 		sdiv	r0, r3, r1
 1304 070a D303     		lsls	r3, r2, #15
 1305 070c F203     		lsls	r2, r6, #15
 1306 070e 6060     		str	r0, [r4, #4]
 1307 0710 92FBF1F6 		sdiv	r6, r2, r1
 1308 0714 93FBF1F0 		sdiv	r0, r3, r1
 1309 0718 A060     		str	r0, [r4, #8]
 1310 071a E660     		str	r6, [r4, #12]
 1311              	.LVL256:
 1312              	.L187:
 1313 071c 0222     		movs	r2, #2
 1314 071e 91FBF2F0 		sdiv	r0, r1, r2
 1315 0722 CAE7     		b	.L185
 1316              	.L80:
 1317              	.LBE25:
 1318              	.LBE29:
  66:math/pprz_orientation_conversion.c ****   }
  67:math/pprz_orientation_conversion.c ****   else if (bit_is_set(orientation->status, ORREP_EULER_F)) {
 1319              		.loc 1 67 0 is_stmt 1
 1320 0724 EB06     		lsls	r3, r5, #27
 1321 0726 40F16681 		bpl	.L4
  68:math/pprz_orientation_conversion.c ****     EULERS_BFP_OF_REAL(orientation->eulers_i, orientation->eulers_f);
 1322              		.loc 1 68 0
 1323 072a 4FF08B41 		mov	r1, #1166016512
 1324 072e 606D     		ldr	r0, [r4, #84]	@ float
 1325 0730 FFF7FEFF 		bl	__aeabi_fmul
 1326              	.LVL257:
 1327 0734 FFF7FEFF 		bl	__aeabi_f2iz
 1328              	.LVL258:
 1329 0738 4FF08B41 		mov	r1, #1166016512
 1330 073c 0746     		mov	r7, r0
 1331 073e 6061     		str	r0, [r4, #20]
 1332 0740 A06D     		ldr	r0, [r4, #88]	@ float
 1333 0742 FFF7FEFF 		bl	__aeabi_fmul
 1334              	.LVL259:
 1335 0746 FFF7FEFF 		bl	__aeabi_f2iz
 1336              	.LVL260:
 1337 074a 4FF08B41 		mov	r1, #1166016512
 1338 074e 0646     		mov	r6, r0
 1339 0750 A061     		str	r0, [r4, #24]
 1340 0752 E06D     		ldr	r0, [r4, #92]	@ float
 1341 0754 FFF7FEFF 		bl	__aeabi_fmul
 1342              	.LVL261:
 1343 0758 FFF7FEFF 		bl	__aeabi_f2iz
 1344              	.LVL262:
 1345              	.LBB30:
  69:math/pprz_orientation_conversion.c ****     SetBit(orientation->status, ORREP_EULER_I);
  70:math/pprz_orientation_conversion.c ****     INT32_QUAT_OF_EULERS(orientation->quat_i, orientation->eulers_i);
 1346              		.loc 1 70 0
 1347 075c 0221     		movs	r1, #2
 1348              	.LBE30:
  69:math/pprz_orientation_conversion.c ****     SetBit(orientation->status, ORREP_EULER_I);
 1349              		.loc 1 69 0
 1350 075e 45F00205 		orr	r5, r5, #2
 1351              	.LBB37:
 1352              		.loc 1 70 0
 1353 0762 97FBF1F7 		sdiv	r7, r7, r1
 1354              	.LVL263:
 1355              	.LBE37:
  68:math/pprz_orientation_conversion.c ****     EULERS_BFP_OF_REAL(orientation->eulers_i, orientation->eulers_f);
 1356              		.loc 1 68 0
 1357 0766 E061     		str	r0, [r4, #28]
 1358              	.LBB38:
 1359              		.loc 1 70 0
 1360 0768 96FBF1F6 		sdiv	r6, r6, r1
 1361              	.LVL264:
 1362 076c 90FBF1F0 		sdiv	r0, r0, r1
 1363              	.LVL265:
 1364              	.LBE38:
  69:math/pprz_orientation_conversion.c ****     SetBit(orientation->status, ORREP_EULER_I);
 1365              		.loc 1 69 0
 1366 0770 2570     		strb	r5, [r4, #0]
 1367              	.LBB39:
 1368              	.LBB31:
 1369              		.loc 1 70 0
 1370 0772 3946     		mov	r1, r7
 1371              	.LVL266:
 1372              	.L100:
 1373              		.loc 1 70 0 is_stmt 0 discriminator 1
 1374 0774 43F24323 		movw	r3, #12867
 1375 0778 9942     		cmp	r1, r3
 1376 077a 03DD     		ble	.L179
 1377              	.L101:
 1378              		.loc 1 70 0 discriminator 2
 1379 077c A1F5C942 		sub	r2, r1, #25728
 1380 0780 D11F     		subs	r1, r2, #7
 1381              	.LVL267:
 1382 0782 F7E7     		b	.L100
 1383              	.LVL268:
 1384              	.L179:
 1385              		.loc 1 70 0 discriminator 4
 1386 0784 844A     		ldr	r2, .L206+4
 1387 0786 9142     		cmp	r1, r2
 1388 0788 03DA     		bge	.L196
 1389              	.L103:
 1390              		.loc 1 70 0 discriminator 5
 1391 078a 01F5C941 		add	r1, r1, #25728
 1392              	.LVL269:
 1393 078e 0731     		adds	r1, r1, #7
 1394              	.LVL270:
 1395 0790 F8E7     		b	.L179
 1396              	.LVL271:
 1397              	.L196:
 1398              		.loc 1 70 0 discriminator 6
 1399 0792 41F62115 		movw	r5, #6433
 1400 0796 A942     		cmp	r1, r5
 1401 0798 804B     		ldr	r3, .L206+8
 1402 079a 03DD     		ble	.L104
 1403              		.loc 1 70 0 discriminator 7
 1404 079c C1F54955 		rsb	r5, r1, #12864
 1405 07a0 E91C     		adds	r1, r5, #3
 1406              	.LVL272:
 1407 07a2 0CE0     		b	.L105
 1408              	.L104:
 1409              		.loc 1 70 0 discriminator 8
 1410 07a4 6FF4C952 		mvn	r2, #6432
 1411 07a8 9142     		cmp	r1, r2
 1412 07aa 06DA     		bge	.L106
 1413              		.loc 1 70 0 discriminator 9
 1414 07ac C1F17F41 		rsb	r1, r1, #-16777216
 1415              	.LVL273:
 1416 07b0 01F57F05 		add	r5, r1, #16711680
 1417 07b4 05F54D41 		add	r1, r5, #52480
 1418 07b8 BD31     		adds	r1, r1, #189
 1419              	.LVL274:
 1420              	.L106:
 1421              		.loc 1 70 0 discriminator 10
 1422 07ba 0029     		cmp	r1, #0
 1423 07bc 02DB     		blt	.L107
 1424              	.L105:
 1425              		.loc 1 70 0 discriminator 11
 1426 07be 33F91110 		ldrsh	r1, [r3, r1, lsl #1]
 1427              	.LVL275:
 1428 07c2 03E0     		b	.L108
 1429              	.LVL276:
 1430              	.L107:
 1431              		.loc 1 70 0 discriminator 12
 1432 07c4 4A42     		negs	r2, r1
 1433 07c6 33F91230 		ldrsh	r3, [r3, r2, lsl #1]
 1434 07ca 5942     		negs	r1, r3
 1435              	.LVL277:
 1436              	.L108:
 1437              	.LBE31:
 1438              	.LBB32:
 1439              		.loc 1 70 0 discriminator 13
 1440 07cc 07F5C957 		add	r7, r7, #6432
 1441              	.LVL278:
 1442 07d0 7A1C     		adds	r2, r7, #1
 1443              	.LVL279:
 1444              	.L109:
 1445              		.loc 1 70 0 discriminator 14
 1446 07d2 43F24323 		movw	r3, #12867
 1447 07d6 9A42     		cmp	r2, r3
 1448 07d8 03DD     		ble	.L180
 1449              	.L110:
 1450              		.loc 1 70 0 discriminator 15
 1451 07da A2F5C947 		sub	r7, r2, #25728
 1452 07de FA1F     		subs	r2, r7, #7
 1453              	.LVL280:
 1454 07e0 F7E7     		b	.L109
 1455              	.LVL281:
 1456              	.L180:
 1457              		.loc 1 70 0 discriminator 17
 1458 07e2 6D4D     		ldr	r5, .L206+4
 1459 07e4 AA42     		cmp	r2, r5
 1460 07e6 03DA     		bge	.L197
 1461              	.L112:
 1462              		.loc 1 70 0 discriminator 18
 1463 07e8 02F5C945 		add	r5, r2, #25728
 1464 07ec EA1D     		adds	r2, r5, #7
 1465              	.LVL282:
 1466 07ee F8E7     		b	.L180
 1467              	.LVL283:
 1468              	.L197:
 1469              		.loc 1 70 0 discriminator 19
 1470 07f0 41F62117 		movw	r7, #6433
 1471 07f4 BA42     		cmp	r2, r7
 1472 07f6 694B     		ldr	r3, .L206+8
 1473 07f8 03DD     		ble	.L113
 1474              		.loc 1 70 0 discriminator 20
 1475 07fa C2F54957 		rsb	r7, r2, #12864
 1476 07fe FA1C     		adds	r2, r7, #3
 1477              	.LVL284:
 1478 0800 0CE0     		b	.L114
 1479              	.L113:
 1480              		.loc 1 70 0 discriminator 21
 1481 0802 6FF4C955 		mvn	r5, #6432
 1482 0806 AA42     		cmp	r2, r5
 1483 0808 06DA     		bge	.L115
 1484              		.loc 1 70 0 discriminator 22
 1485 080a C2F17F42 		rsb	r2, r2, #-16777216
 1486              	.LVL285:
 1487 080e 02F57F07 		add	r7, r2, #16711680
 1488 0812 07F54D42 		add	r2, r7, #52480
 1489 0816 BD32     		adds	r2, r2, #189
 1490              	.LVL286:
 1491              	.L115:
 1492              		.loc 1 70 0 discriminator 23
 1493 0818 002A     		cmp	r2, #0
 1494 081a 02DB     		blt	.L116
 1495              	.L114:
 1496              		.loc 1 70 0 discriminator 24
 1497 081c 33F91250 		ldrsh	r5, [r3, r2, lsl #1]
 1498              	.LVL287:
 1499 0820 03E0     		b	.L117
 1500              	.LVL288:
 1501              	.L116:
 1502              		.loc 1 70 0 discriminator 25
 1503 0822 5542     		negs	r5, r2
 1504 0824 33F91530 		ldrsh	r3, [r3, r5, lsl #1]
 1505 0828 5D42     		negs	r5, r3
 1506              	.LVL289:
 1507              	.L117:
 1508              	.LBE32:
 1509              	.LBB33:
 1510              		.loc 1 70 0 discriminator 26
 1511 082a 3246     		mov	r2, r6
 1512              	.LVL290:
 1513              	.L118:
 1514              		.loc 1 70 0 discriminator 27
 1515 082c 43F24323 		movw	r3, #12867
 1516 0830 9A42     		cmp	r2, r3
 1517 0832 03DD     		ble	.L181
 1518              	.L119:
 1519              		.loc 1 70 0 discriminator 28
 1520 0834 A2F5C943 		sub	r3, r2, #25728
 1521 0838 DA1F     		subs	r2, r3, #7
 1522              	.LVL291:
 1523 083a F7E7     		b	.L118
 1524              	.LVL292:
 1525              	.L181:
 1526              		.loc 1 70 0 discriminator 30
 1527 083c 564F     		ldr	r7, .L206+4
 1528 083e BA42     		cmp	r2, r7
 1529 0840 03DA     		bge	.L198
 1530              	.L121:
 1531              		.loc 1 70 0 discriminator 31
 1532 0842 02F5C942 		add	r2, r2, #25728
 1533              	.LVL293:
 1534 0846 0732     		adds	r2, r2, #7
 1535              	.LVL294:
 1536 0848 F8E7     		b	.L181
 1537              	.LVL295:
 1538              	.L198:
 1539              		.loc 1 70 0 discriminator 32
 1540 084a 41F62113 		movw	r3, #6433
 1541 084e 9A42     		cmp	r2, r3
 1542 0850 524B     		ldr	r3, .L206+8
 1543 0852 03DD     		ble	.L122
 1544              		.loc 1 70 0 discriminator 33
 1545 0854 C2F54952 		rsb	r2, r2, #12864
 1546              	.LVL296:
 1547 0858 0332     		adds	r2, r2, #3
 1548              	.LVL297:
 1549 085a 0CE0     		b	.L123
 1550              	.L122:
 1551              		.loc 1 70 0 discriminator 34
 1552 085c 6FF4C957 		mvn	r7, #6432
 1553 0860 BA42     		cmp	r2, r7
 1554 0862 06DA     		bge	.L124
 1555              		.loc 1 70 0 discriminator 35
 1556 0864 C2F17F42 		rsb	r2, r2, #-16777216
 1557              	.LVL298:
 1558 0868 02F57F07 		add	r7, r2, #16711680
 1559 086c 07F54D42 		add	r2, r7, #52480
 1560 0870 BD32     		adds	r2, r2, #189
 1561              	.LVL299:
 1562              	.L124:
 1563              		.loc 1 70 0 discriminator 36
 1564 0872 002A     		cmp	r2, #0
 1565 0874 02DB     		blt	.L125
 1566              	.L123:
 1567              		.loc 1 70 0 discriminator 37
 1568 0876 33F91220 		ldrsh	r2, [r3, r2, lsl #1]
 1569              	.LVL300:
 1570 087a 03E0     		b	.L126
 1571              	.LVL301:
 1572              	.L125:
 1573              		.loc 1 70 0 discriminator 38
 1574 087c 5742     		negs	r7, r2
 1575 087e 33F91730 		ldrsh	r3, [r3, r7, lsl #1]
 1576 0882 5A42     		negs	r2, r3
 1577              	.LVL302:
 1578              	.L126:
 1579              	.LBE33:
 1580              	.LBB34:
 1581              		.loc 1 70 0 discriminator 39
 1582 0884 06F5C956 		add	r6, r6, #6432
 1583              	.LVL303:
 1584 0888 731C     		adds	r3, r6, #1
 1585              	.LVL304:
 1586              	.L127:
 1587              		.loc 1 70 0 discriminator 40
 1588 088a 43F24327 		movw	r7, #12867
 1589 088e BB42     		cmp	r3, r7
 1590 0890 03DD     		ble	.L182
 1591              	.L128:
 1592              		.loc 1 70 0 discriminator 41
 1593 0892 A3F5C946 		sub	r6, r3, #25728
 1594 0896 F31F     		subs	r3, r6, #7
 1595              	.LVL305:
 1596 0898 F7E7     		b	.L127
 1597              	.LVL306:
 1598              	.L182:
 1599              		.loc 1 70 0 discriminator 43
 1600 089a 3F4E     		ldr	r6, .L206+4
 1601 089c B342     		cmp	r3, r6
 1602 089e 03DA     		bge	.L199
 1603              	.L130:
 1604              		.loc 1 70 0 discriminator 44
 1605 08a0 03F5C947 		add	r7, r3, #25728
 1606 08a4 FB1D     		adds	r3, r7, #7
 1607              	.LVL307:
 1608 08a6 F8E7     		b	.L182
 1609              	.LVL308:
 1610              	.L199:
 1611              		.loc 1 70 0 discriminator 45
 1612 08a8 41F62117 		movw	r7, #6433
 1613 08ac BB42     		cmp	r3, r7
 1614 08ae 3B4E     		ldr	r6, .L206+8
 1615 08b0 03DD     		ble	.L131
 1616              		.loc 1 70 0 discriminator 46
 1617 08b2 C3F54953 		rsb	r3, r3, #12864
 1618              	.LVL309:
 1619 08b6 0333     		adds	r3, r3, #3
 1620              	.LVL310:
 1621 08b8 0CE0     		b	.L132
 1622              	.L131:
 1623              		.loc 1 70 0 discriminator 47
 1624 08ba 6FF4C957 		mvn	r7, #6432
 1625 08be BB42     		cmp	r3, r7
 1626 08c0 06DA     		bge	.L133
 1627              		.loc 1 70 0 discriminator 48
 1628 08c2 C3F17F43 		rsb	r3, r3, #-16777216
 1629              	.LVL311:
 1630 08c6 03F57F07 		add	r7, r3, #16711680
 1631 08ca 07F54D43 		add	r3, r7, #52480
 1632 08ce BD33     		adds	r3, r3, #189
 1633              	.LVL312:
 1634              	.L133:
 1635              		.loc 1 70 0 discriminator 49
 1636 08d0 002B     		cmp	r3, #0
 1637 08d2 02DB     		blt	.L134
 1638              	.L132:
 1639              		.loc 1 70 0 discriminator 50
 1640 08d4 36F91370 		ldrsh	r7, [r6, r3, lsl #1]
 1641              	.LVL313:
 1642 08d8 03E0     		b	.L135
 1643              	.LVL314:
 1644              	.L134:
 1645              		.loc 1 70 0 discriminator 51
 1646 08da 5F42     		negs	r7, r3
 1647 08dc 36F91760 		ldrsh	r6, [r6, r7, lsl #1]
 1648 08e0 7742     		negs	r7, r6
 1649              	.LVL315:
 1650              	.L135:
 1651              	.LBE34:
 1652              	.LBB35:
 1653              		.loc 1 70 0 discriminator 52
 1654 08e2 0346     		mov	r3, r0
 1655              	.LVL316:
 1656              	.L136:
 1657              		.loc 1 70 0 discriminator 53
 1658 08e4 43F24326 		movw	r6, #12867
 1659 08e8 B342     		cmp	r3, r6
 1660 08ea 03DD     		ble	.L183
 1661              	.L137:
 1662              		.loc 1 70 0 discriminator 54
 1663 08ec A3F5C943 		sub	r3, r3, #25728
 1664              	.LVL317:
 1665 08f0 073B     		subs	r3, r3, #7
 1666              	.LVL318:
 1667 08f2 F7E7     		b	.L136
 1668              	.LVL319:
 1669              	.L183:
 1670              		.loc 1 70 0 discriminator 56
 1671 08f4 284E     		ldr	r6, .L206+4
 1672 08f6 B342     		cmp	r3, r6
 1673 08f8 03DA     		bge	.L200
 1674              	.L139:
 1675              		.loc 1 70 0 discriminator 57
 1676 08fa 03F5C946 		add	r6, r3, #25728
 1677 08fe F31D     		adds	r3, r6, #7
 1678              	.LVL320:
 1679 0900 F8E7     		b	.L183
 1680              	.LVL321:
 1681              	.L200:
 1682              		.loc 1 70 0 discriminator 58
 1683 0902 41F62116 		movw	r6, #6433
 1684 0906 B342     		cmp	r3, r6
 1685 0908 244E     		ldr	r6, .L206+8
 1686 090a 03DD     		ble	.L140
 1687              		.loc 1 70 0 discriminator 59
 1688 090c C3F54953 		rsb	r3, r3, #12864
 1689              	.LVL322:
 1690 0910 0333     		adds	r3, r3, #3
 1691              	.LVL323:
 1692 0912 0CE0     		b	.L141
 1693              	.L140:
 1694              		.loc 1 70 0 discriminator 60
 1695 0914 6FF4C95C 		mvn	ip, #6432
 1696 0918 6345     		cmp	r3, ip
 1697 091a 06DA     		bge	.L142
 1698              		.loc 1 70 0 discriminator 61
 1699 091c C3F17F43 		rsb	r3, r3, #-16777216
 1700              	.LVL324:
 1701 0920 03F57F03 		add	r3, r3, #16711680
 1702 0924 03F54D43 		add	r3, r3, #52480
 1703 0928 BD33     		adds	r3, r3, #189
 1704              	.LVL325:
 1705              	.L142:
 1706              		.loc 1 70 0 discriminator 62
 1707 092a 002B     		cmp	r3, #0
 1708 092c 02DB     		blt	.L143
 1709              	.L141:
 1710              		.loc 1 70 0 discriminator 63
 1711 092e 36F91360 		ldrsh	r6, [r6, r3, lsl #1]
 1712              	.LVL326:
 1713 0932 03E0     		b	.L144
 1714              	.LVL327:
 1715              	.L143:
 1716              		.loc 1 70 0 discriminator 64
 1717 0934 5B42     		negs	r3, r3
 1718              	.LVL328:
 1719 0936 36F91360 		ldrsh	r6, [r6, r3, lsl #1]
 1720 093a 7642     		negs	r6, r6
 1721              	.LVL329:
 1722              	.L144:
 1723              	.LBE35:
 1724              	.LBB36:
 1725              		.loc 1 70 0 discriminator 65
 1726 093c 00F5C950 		add	r0, r0, #6432
 1727              	.LVL330:
 1728 0940 0130     		adds	r0, r0, #1
 1729              	.LVL331:
 1730              	.L145:
 1731              		.loc 1 70 0 discriminator 66
 1732 0942 43F24323 		movw	r3, #12867
 1733 0946 9842     		cmp	r0, r3
 1734 0948 03DD     		ble	.L184
 1735              	.L146:
 1736              		.loc 1 70 0 discriminator 67
 1737 094a A0F5C943 		sub	r3, r0, #25728
 1738 094e D81F     		subs	r0, r3, #7
 1739              	.LVL332:
 1740 0950 F7E7     		b	.L145
 1741              	.LVL333:
 1742              	.L184:
 1743              		.loc 1 70 0 discriminator 69
 1744 0952 114B     		ldr	r3, .L206+4
 1745 0954 9842     		cmp	r0, r3
 1746 0956 03DA     		bge	.L201
 1747              	.L148:
 1748              		.loc 1 70 0 discriminator 70
 1749 0958 00F5C940 		add	r0, r0, #25728
 1750              	.LVL334:
 1751 095c 0730     		adds	r0, r0, #7
 1752              	.LVL335:
 1753 095e F8E7     		b	.L184
 1754              	.LVL336:
 1755              	.L201:
 1756              		.loc 1 70 0 discriminator 71
 1757 0960 41F62113 		movw	r3, #6433
 1758 0964 9842     		cmp	r0, r3
 1759 0966 0D4B     		ldr	r3, .L206+8
 1760 0968 03DD     		ble	.L149
 1761              		.loc 1 70 0 discriminator 72
 1762 096a C0F54950 		rsb	r0, r0, #12864
 1763              	.LVL337:
 1764 096e 0330     		adds	r0, r0, #3
 1765              	.LVL338:
 1766 0970 0CE0     		b	.L150
 1767              	.L149:
 1768              		.loc 1 70 0 discriminator 73
 1769 0972 6FF4C95E 		mvn	lr, #6432
 1770 0976 7045     		cmp	r0, lr
 1771 0978 06DA     		bge	.L151
 1772              		.loc 1 70 0 discriminator 74
 1773 097a C0F17F40 		rsb	r0, r0, #-16777216
 1774              	.LVL339:
 1775 097e 00F57F00 		add	r0, r0, #16711680
 1776 0982 00F54D40 		add	r0, r0, #52480
 1777 0986 BD30     		adds	r0, r0, #189
 1778              	.LVL340:
 1779              	.L151:
 1780              		.loc 1 70 0 discriminator 75
 1781 0988 0028     		cmp	r0, #0
 1782 098a 09DB     		blt	.L152
 1783              	.L150:
 1784              		.loc 1 70 0 discriminator 76
 1785 098c 33F91030 		ldrsh	r3, [r3, r0, lsl #1]
 1786              	.LVL341:
 1787 0990 0AE0     		b	.L153
 1788              	.L207:
 1789 0992 00BF     		.align	2
 1790              	.L206:
 1791 0994 0000D040 		.word	1087373312
 1792 0998 BDCDFFFF 		.word	-12867
 1793 099c 00000000 		.word	pprz_trig_int
 1794              	.LVL342:
 1795              	.L152:
 1796              		.loc 1 70 0 discriminator 77
 1797 09a0 4042     		negs	r0, r0
 1798              	.LVL343:
 1799 09a2 33F91030 		ldrsh	r3, [r3, r0, lsl #1]
 1800 09a6 5B42     		negs	r3, r3
 1801              	.LVL344:
 1802              	.L153:
 1803              	.LBE36:
 1804              		.loc 1 70 0 discriminator 78
 1805 09a8 03FB07F0 		mul	r0, r3, r7
 1806 09ac 7743     		muls	r7, r6, r7
 1807              	.LVL345:
 1808 09ae 5643     		muls	r6, r2, r6
 1809              	.LVL346:
 1810 09b0 B613     		asrs	r6, r6, #14
 1811 09b2 8013     		asrs	r0, r0, #14
 1812              	.LVL347:
 1813 09b4 5343     		muls	r3, r2, r3
 1814              	.LVL348:
 1815 09b6 06FB01F2 		mul	r2, r6, r1
 1816              	.LVL349:
 1817 09ba 00FB05FC 		mul	ip, r0, r5
 1818 09be 5213     		asrs	r2, r2, #13
 1819 09c0 02EB6C32 		add	r2, r2, ip, asr #13
 1820 09c4 4843     		muls	r0, r1, r0
 1821              	.LVL350:
 1822 09c6 6260     		str	r2, [r4, #4]
 1823 09c8 6A42     		negs	r2, r5
 1824 09ca 5643     		muls	r6, r2, r6
 1825 09cc BF13     		asrs	r7, r7, #14
 1826              	.LVL351:
 1827 09ce 07FB01F2 		mul	r2, r7, r1
 1828 09d2 9B13     		asrs	r3, r3, #14
 1829              	.LVL352:
 1830 09d4 4013     		asrs	r0, r0, #13
 1831 09d6 4942     		negs	r1, r1
 1832              	.LVL353:
 1833 09d8 00EB6636 		add	r6, r0, r6, asr #13
 1834 09dc 03FB05F0 		mul	r0, r3, r5
 1835 09e0 4B43     		muls	r3, r1, r3
 1836              	.LVL354:
 1837 09e2 6F43     		muls	r7, r5, r7
 1838              	.LVL355:
 1839 09e4 5213     		asrs	r2, r2, #13
 1840 09e6 5B13     		asrs	r3, r3, #13
 1841 09e8 02EB6030 		add	r0, r2, r0, asr #13
 1842 09ec 03EB6737 		add	r7, r3, r7, asr #13
 1843 09f0 A660     		str	r6, [r4, #8]
 1844 09f2 E060     		str	r0, [r4, #12]
 1845 09f4 2761     		str	r7, [r4, #16]
 1846              	.LVL356:
 1847              	.L4:
 1848              	.LBE39:
  71:math/pprz_orientation_conversion.c ****   }
  72:math/pprz_orientation_conversion.c ****   /* set bit to indicate this representation is computed */
  73:math/pprz_orientation_conversion.c ****   SetBit(orientation->status, ORREP_QUAT_I);
 1849              		.loc 1 73 0 is_stmt 1
 1850 09f6 2178     		ldrb	r1, [r4, #0]	@ zero_extendqisi2
 1851 09f8 41F00102 		orr	r2, r1, #1
 1852 09fc 2270     		strb	r2, [r4, #0]
 1853              	.L1:
  74:math/pprz_orientation_conversion.c **** }
 1854              		.loc 1 74 0
 1855 09fe BDE8FE8F 		pop	{r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 1856              		.cfi_endproc
 1857              	.LFE15:
 1859 0a02 00BF     		.section	.text.orientationCalcRMat_i,"ax",%progbits
 1860              		.align	1
 1861              		.global	orientationCalcRMat_i
 1862              		.thumb
 1863              		.thumb_func
 1865              	orientationCalcRMat_i:
 1866              	.LFB16:
  75:math/pprz_orientation_conversion.c **** 
  76:math/pprz_orientation_conversion.c **** void orientationCalcRMat_i(struct OrientationReps* orientation) {
 1867              		.loc 1 76 0
 1868              		.cfi_startproc
 1869              		@ args = 0, pretend = 0, frame = 0
 1870              		@ frame_needed = 0, uses_anonymous_args = 0
 1871              	.LVL357:
 1872 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 1873              	.LCFI1:
 1874              		.cfi_def_cfa_offset 32
 1875              		.cfi_offset 3, -32
 1876              		.cfi_offset 4, -28
 1877              		.cfi_offset 5, -24
 1878              		.cfi_offset 6, -20
 1879              		.cfi_offset 7, -16
 1880              		.cfi_offset 8, -12
 1881              		.cfi_offset 9, -8
 1882              		.cfi_offset 14, -4
  77:math/pprz_orientation_conversion.c ****   if (bit_is_set(orientation->status, ORREP_RMAT_I))
 1883              		.loc 1 77 0
 1884 0004 0578     		ldrb	r5, [r0, #0]	@ zero_extendqisi2
  76:math/pprz_orientation_conversion.c **** void orientationCalcRMat_i(struct OrientationReps* orientation) {
 1885              		.loc 1 76 0
 1886 0006 0446     		mov	r4, r0
 1887              		.loc 1 77 0
 1888 0008 6807     		lsls	r0, r5, #29
 1889              	.LVL358:
 1890 000a 00F1B183 		bmi	.L208
  78:math/pprz_orientation_conversion.c ****     return;
  79:math/pprz_orientation_conversion.c **** 
  80:math/pprz_orientation_conversion.c ****   if (bit_is_set(orientation->status, ORREP_RMAT_F)) {
 1891              		.loc 1 80 0
 1892 000e A906     		lsls	r1, r5, #26
 1893 0010 49D5     		bpl	.L210
  81:math/pprz_orientation_conversion.c ****     RMAT_BFP_OF_REAL(orientation->rmat_i, orientation->rmat_f);
 1894              		.loc 1 81 0
 1895 0012 4FF08D41 		mov	r1, #1182793728
 1896 0016 206E     		ldr	r0, [r4, #96]	@ float
 1897 0018 FFF7FEFF 		bl	__aeabi_fmul
 1898              	.LVL359:
 1899 001c FFF7FEFF 		bl	__aeabi_f2iz
 1900              	.LVL360:
 1901 0020 4FF08D41 		mov	r1, #1182793728
 1902 0024 2062     		str	r0, [r4, #32]
 1903 0026 606E     		ldr	r0, [r4, #100]	@ float
 1904 0028 FFF7FEFF 		bl	__aeabi_fmul
 1905              	.LVL361:
 1906 002c FFF7FEFF 		bl	__aeabi_f2iz
 1907              	.LVL362:
 1908 0030 4FF08D41 		mov	r1, #1182793728
 1909 0034 6062     		str	r0, [r4, #36]
 1910 0036 A06E     		ldr	r0, [r4, #104]	@ float
 1911 0038 FFF7FEFF 		bl	__aeabi_fmul
 1912              	.LVL363:
 1913 003c FFF7FEFF 		bl	__aeabi_f2iz
 1914              	.LVL364:
 1915 0040 4FF08D41 		mov	r1, #1182793728
 1916 0044 A062     		str	r0, [r4, #40]
 1917 0046 E06E     		ldr	r0, [r4, #108]	@ float
 1918 0048 FFF7FEFF 		bl	__aeabi_fmul
 1919              	.LVL365:
 1920 004c FFF7FEFF 		bl	__aeabi_f2iz
 1921              	.LVL366:
 1922 0050 4FF08D41 		mov	r1, #1182793728
 1923 0054 E062     		str	r0, [r4, #44]
 1924 0056 206F     		ldr	r0, [r4, #112]	@ float
 1925 0058 FFF7FEFF 		bl	__aeabi_fmul
 1926              	.LVL367:
 1927 005c FFF7FEFF 		bl	__aeabi_f2iz
 1928              	.LVL368:
 1929 0060 4FF08D41 		mov	r1, #1182793728
 1930 0064 2063     		str	r0, [r4, #48]
 1931 0066 606F     		ldr	r0, [r4, #116]	@ float
 1932 0068 FFF7FEFF 		bl	__aeabi_fmul
 1933              	.LVL369:
 1934 006c FFF7FEFF 		bl	__aeabi_f2iz
 1935              	.LVL370:
 1936 0070 4FF08D41 		mov	r1, #1182793728
 1937 0074 6063     		str	r0, [r4, #52]
 1938 0076 A06F     		ldr	r0, [r4, #120]	@ float
 1939 0078 FFF7FEFF 		bl	__aeabi_fmul
 1940              	.LVL371:
 1941 007c FFF7FEFF 		bl	__aeabi_f2iz
 1942              	.LVL372:
 1943 0080 4FF08D41 		mov	r1, #1182793728
 1944 0084 A063     		str	r0, [r4, #56]
 1945 0086 E06F     		ldr	r0, [r4, #124]	@ float
 1946 0088 FFF7FEFF 		bl	__aeabi_fmul
 1947              	.LVL373:
 1948 008c FFF7FEFF 		bl	__aeabi_f2iz
 1949              	.LVL374:
 1950 0090 4FF08D41 		mov	r1, #1182793728
 1951 0094 E063     		str	r0, [r4, #60]
 1952 0096 D4F88000 		ldr	r0, [r4, #128]	@ float
 1953 009a FFF7FEFF 		bl	__aeabi_fmul
 1954              	.LVL375:
 1955 009e FFF7FEFF 		bl	__aeabi_f2iz
 1956              	.LVL376:
 1957 00a2 2064     		str	r0, [r4, #64]
 1958 00a4 60E3     		b	.L211
 1959              	.L210:
  82:math/pprz_orientation_conversion.c ****   }
  83:math/pprz_orientation_conversion.c ****   else if (bit_is_set(orientation->status, ORREP_QUAT_I)) {
 1960              		.loc 1 83 0
 1961 00a6 EA07     		lsls	r2, r5, #31
 1962 00a8 38D5     		bpl	.L212
 1963              	.LBB40:
  84:math/pprz_orientation_conversion.c ****     INT32_RMAT_OF_QUAT(orientation->rmat_i, orientation->quat_i);
 1964              		.loc 1 84 0
 1965 00aa 6768     		ldr	r7, [r4, #4]
 1966 00ac 04F10801 		add	r1, r4, #8
 1967 00b0 07FB07F6 		mul	r6, r7, r7
 1968 00b4 F213     		asrs	r2, r6, #15
 1969 00b6 A2F58045 		sub	r5, r2, #16384
 1970              	.LVL377:
 1971 00ba 0EC9     		ldmia	r1, {r1, r2, r3}
 1972 00bc 01FB07F0 		mul	r0, r1, r7
 1973 00c0 02FB07F9 		mul	r9, r2, r7
 1974 00c4 5F43     		muls	r7, r3, r7
 1975 00c6 C613     		asrs	r6, r0, #15
 1976              	.LVL378:
 1977 00c8 F813     		asrs	r0, r7, #15
 1978 00ca 02FB01F7 		mul	r7, r2, r1
 1979 00ce 03FB01F8 		mul	r8, r3, r1
 1980 00d2 4943     		muls	r1, r1, r1
 1981 00d4 4FEAE93C 		asr	ip, r9, #15
 1982              	.LVL379:
 1983 00d8 4FEAE739 		asr	r9, r7, #15
 1984 00dc 03FB02F7 		mul	r7, r3, r2
 1985 00e0 05EBE131 		add	r1, r5, r1, asr #15
 1986 00e4 5243     		muls	r2, r2, r2
 1987 00e6 5B43     		muls	r3, r3, r3
 1988 00e8 4FEAE838 		asr	r8, r8, #15
 1989 00ec 2162     		str	r1, [r4, #32]
 1990 00ee C0EB0901 		rsb	r1, r0, r9
 1991 00f2 FF13     		asrs	r7, r7, #15
 1992 00f4 E162     		str	r1, [r4, #44]
 1993 00f6 08EB0C01 		add	r1, r8, ip
 1994 00fa A163     		str	r1, [r4, #56]
 1995 00fc B91B     		subs	r1, r7, r6
 1996 00fe 05EBE232 		add	r2, r5, r2, asr #15
 1997 0102 E163     		str	r1, [r4, #60]
 1998 0104 4844     		add	r0, r9, r0
 1999              	.LVL380:
 2000 0106 CCEB0801 		rsb	r1, ip, r8
 2001 010a BE19     		adds	r6, r7, r6
 2002              	.LVL381:
 2003 010c 05EBE335 		add	r5, r5, r3, asr #15
 2004              	.LVL382:
 2005 0110 2263     		str	r2, [r4, #48]
 2006 0112 6062     		str	r0, [r4, #36]
 2007 0114 A162     		str	r1, [r4, #40]
 2008 0116 6663     		str	r6, [r4, #52]
 2009 0118 2564     		str	r5, [r4, #64]
 2010 011a 25E3     		b	.L211
 2011              	.LVL383:
 2012              	.L212:
 2013              	.LBE40:
  85:math/pprz_orientation_conversion.c ****   }
  86:math/pprz_orientation_conversion.c ****   else if (bit_is_set(orientation->status, ORREP_EULER_I)) {
 2014              		.loc 1 86 0
 2015 011c AB07     		lsls	r3, r5, #30
 2016 011e 40F15581 		bpl	.L213
 2017              	.LBB41:
 2018              	.LBB42:
  87:math/pprz_orientation_conversion.c ****     INT32_RMAT_OF_EULERS(orientation->rmat_i, orientation->eulers_i);
 2019              		.loc 1 87 0
 2020 0122 6369     		ldr	r3, [r4, #20]
 2021              	.LVL384:
 2022 0124 1A46     		mov	r2, r3
 2023              	.LVL385:
 2024              	.L214:
 2025              		.loc 1 87 0 is_stmt 0 discriminator 1
 2026 0126 43F24325 		movw	r5, #12867
 2027 012a AA42     		cmp	r2, r5
 2028 012c 03DD     		ble	.L326
 2029              	.L215:
 2030              		.loc 1 87 0 discriminator 2
 2031 012e A2F5C940 		sub	r0, r2, #25728
 2032 0132 C21F     		subs	r2, r0, #7
 2033              	.LVL386:
 2034 0134 F7E7     		b	.L214
 2035              	.LVL387:
 2036              	.L326:
 2037              		.loc 1 87 0 discriminator 4
 2038 0136 A349     		ldr	r1, .L351
 2039 0138 8A42     		cmp	r2, r1
 2040 013a 03DA     		bge	.L339
 2041              	.L217:
 2042              		.loc 1 87 0 discriminator 5
 2043 013c 02F5C945 		add	r5, r2, #25728
 2044 0140 EA1D     		adds	r2, r5, #7
 2045              	.LVL388:
 2046 0142 F8E7     		b	.L326
 2047              	.LVL389:
 2048              	.L339:
 2049              		.loc 1 87 0 discriminator 6
 2050 0144 41F62117 		movw	r7, #6433
 2051 0148 BA42     		cmp	r2, r7
 2052 014a 9F4E     		ldr	r6, .L351+4
 2053 014c 03DD     		ble	.L218
 2054              		.loc 1 87 0 discriminator 7
 2055 014e C2F54950 		rsb	r0, r2, #12864
 2056 0152 C21C     		adds	r2, r0, #3
 2057              	.LVL390:
 2058 0154 0CE0     		b	.L219
 2059              	.L218:
 2060              		.loc 1 87 0 discriminator 8
 2061 0156 6FF4C950 		mvn	r0, #6432
 2062 015a 8242     		cmp	r2, r0
 2063 015c 06DA     		bge	.L220
 2064              		.loc 1 87 0 discriminator 9
 2065 015e C2F17F42 		rsb	r2, r2, #-16777216
 2066              	.LVL391:
 2067 0162 02F57F05 		add	r5, r2, #16711680
 2068 0166 05F54D42 		add	r2, r5, #52480
 2069 016a BD32     		adds	r2, r2, #189
 2070              	.LVL392:
 2071              	.L220:
 2072              		.loc 1 87 0 discriminator 10
 2073 016c 002A     		cmp	r2, #0
 2074 016e 02DB     		blt	.L221
 2075              	.L219:
 2076              		.loc 1 87 0 discriminator 11
 2077 0170 36F91250 		ldrsh	r5, [r6, r2, lsl #1]
 2078              	.LVL393:
 2079 0174 03E0     		b	.L222
 2080              	.LVL394:
 2081              	.L221:
 2082              		.loc 1 87 0 discriminator 12
 2083 0176 5142     		negs	r1, r2
 2084 0178 36F91170 		ldrsh	r7, [r6, r1, lsl #1]
 2085 017c 7D42     		negs	r5, r7
 2086              	.LVL395:
 2087              	.L222:
 2088              	.LBE42:
 2089              	.LBB43:
 2090              		.loc 1 87 0 discriminator 13
 2091 017e 03F5C953 		add	r3, r3, #6432
 2092 0182 0133     		adds	r3, r3, #1
 2093              	.LVL396:
 2094              	.L223:
 2095              		.loc 1 87 0 discriminator 14
 2096 0184 43F24326 		movw	r6, #12867
 2097 0188 B342     		cmp	r3, r6
 2098 018a 03DD     		ble	.L327
 2099              	.L224:
 2100              		.loc 1 87 0 discriminator 15
 2101 018c A3F5C947 		sub	r7, r3, #25728
 2102 0190 FB1F     		subs	r3, r7, #7
 2103              	.LVL397:
 2104 0192 F7E7     		b	.L223
 2105              	.LVL398:
 2106              	.L327:
 2107              		.loc 1 87 0 discriminator 17
 2108 0194 8B4A     		ldr	r2, .L351
 2109 0196 9342     		cmp	r3, r2
 2110 0198 03DA     		bge	.L340
 2111              	.L226:
 2112              		.loc 1 87 0 discriminator 18
 2113 019a 03F5C941 		add	r1, r3, #25728
 2114 019e CB1D     		adds	r3, r1, #7
 2115              	.LVL399:
 2116 01a0 F8E7     		b	.L327
 2117              	.LVL400:
 2118              	.L340:
 2119              		.loc 1 87 0 discriminator 19
 2120 01a2 41F62111 		movw	r1, #6433
 2121 01a6 8B42     		cmp	r3, r1
 2122 01a8 874F     		ldr	r7, .L351+4
 2123 01aa 03DD     		ble	.L227
 2124              		.loc 1 87 0 discriminator 20
 2125 01ac C3F54950 		rsb	r0, r3, #12864
 2126 01b0 C31C     		adds	r3, r0, #3
 2127              	.LVL401:
 2128 01b2 0CE0     		b	.L228
 2129              	.L227:
 2130              		.loc 1 87 0 discriminator 21
 2131 01b4 6FF4C950 		mvn	r0, #6432
 2132 01b8 8342     		cmp	r3, r0
 2133 01ba 06DA     		bge	.L229
 2134              		.loc 1 87 0 discriminator 22
 2135 01bc C3F17F43 		rsb	r3, r3, #-16777216
 2136              	.LVL402:
 2137 01c0 03F57F06 		add	r6, r3, #16711680
 2138 01c4 06F54D43 		add	r3, r6, #52480
 2139 01c8 BD33     		adds	r3, r3, #189
 2140              	.LVL403:
 2141              	.L229:
 2142              		.loc 1 87 0 discriminator 23
 2143 01ca 002B     		cmp	r3, #0
 2144 01cc 02DB     		blt	.L230
 2145              	.L228:
 2146              		.loc 1 87 0 discriminator 24
 2147 01ce 37F91310 		ldrsh	r1, [r7, r3, lsl #1]
 2148              	.LVL404:
 2149 01d2 03E0     		b	.L231
 2150              	.LVL405:
 2151              	.L230:
 2152              		.loc 1 87 0 discriminator 25
 2153 01d4 5A42     		negs	r2, r3
 2154 01d6 37F91210 		ldrsh	r1, [r7, r2, lsl #1]
 2155 01da 4942     		negs	r1, r1
 2156              	.LVL406:
 2157              	.L231:
 2158              	.LBE43:
 2159              	.LBB44:
 2160              		.loc 1 87 0 discriminator 26
 2161 01dc A369     		ldr	r3, [r4, #24]
 2162              	.LVL407:
 2163 01de 1A46     		mov	r2, r3
 2164              	.LVL408:
 2165              	.L232:
 2166              		.loc 1 87 0 discriminator 27
 2167 01e0 43F24327 		movw	r7, #12867
 2168 01e4 BA42     		cmp	r2, r7
 2169 01e6 03DD     		ble	.L328
 2170              	.L233:
 2171              		.loc 1 87 0 discriminator 28
 2172 01e8 A2F5C942 		sub	r2, r2, #25728
 2173              	.LVL409:
 2174 01ec 073A     		subs	r2, r2, #7
 2175              	.LVL410:
 2176 01ee F7E7     		b	.L232
 2177              	.LVL411:
 2178              	.L328:
 2179              		.loc 1 87 0 discriminator 30
 2180 01f0 744E     		ldr	r6, .L351
 2181 01f2 B242     		cmp	r2, r6
 2182 01f4 03DA     		bge	.L341
 2183              	.L235:
 2184              		.loc 1 87 0 discriminator 31
 2185 01f6 02F5C946 		add	r6, r2, #25728
 2186 01fa F21D     		adds	r2, r6, #7
 2187              	.LVL412:
 2188 01fc F8E7     		b	.L328
 2189              	.LVL413:
 2190              	.L341:
 2191              		.loc 1 87 0 discriminator 32
 2192 01fe 41F62110 		movw	r0, #6433
 2193 0202 8242     		cmp	r2, r0
 2194 0204 704F     		ldr	r7, .L351+4
 2195 0206 03DD     		ble	.L236
 2196              		.loc 1 87 0 discriminator 33
 2197 0208 C2F54950 		rsb	r0, r2, #12864
 2198 020c C21C     		adds	r2, r0, #3
 2199              	.LVL414:
 2200 020e 0CE0     		b	.L237
 2201              	.L236:
 2202              		.loc 1 87 0 discriminator 34
 2203 0210 6FF4C956 		mvn	r6, #6432
 2204 0214 B242     		cmp	r2, r6
 2205 0216 06DA     		bge	.L238
 2206              		.loc 1 87 0 discriminator 35
 2207 0218 C2F17F42 		rsb	r2, r2, #-16777216
 2208              	.LVL415:
 2209 021c 02F57F00 		add	r0, r2, #16711680
 2210 0220 00F54D42 		add	r2, r0, #52480
 2211 0224 BD32     		adds	r2, r2, #189
 2212              	.LVL416:
 2213              	.L238:
 2214              		.loc 1 87 0 discriminator 36
 2215 0226 002A     		cmp	r2, #0
 2216 0228 02DB     		blt	.L239
 2217              	.L237:
 2218              		.loc 1 87 0 discriminator 37
 2219 022a 37F91260 		ldrsh	r6, [r7, r2, lsl #1]
 2220              	.LVL417:
 2221 022e 03E0     		b	.L240
 2222              	.LVL418:
 2223              	.L239:
 2224              		.loc 1 87 0 discriminator 38
 2225 0230 5642     		negs	r6, r2
 2226 0232 37F91670 		ldrsh	r7, [r7, r6, lsl #1]
 2227 0236 7E42     		negs	r6, r7
 2228              	.LVL419:
 2229              	.L240:
 2230              	.LBE44:
 2231              	.LBB45:
 2232              		.loc 1 87 0 discriminator 39
 2233 0238 03F5C953 		add	r3, r3, #6432
 2234 023c 0133     		adds	r3, r3, #1
 2235              	.LVL420:
 2236              	.L241:
 2237              		.loc 1 87 0 discriminator 40
 2238 023e 43F24322 		movw	r2, #12867
 2239 0242 9342     		cmp	r3, r2
 2240 0244 03DD     		ble	.L329
 2241              	.L242:
 2242              		.loc 1 87 0 discriminator 41
 2243 0246 A3F5C943 		sub	r3, r3, #25728
 2244              	.LVL421:
 2245 024a 073B     		subs	r3, r3, #7
 2246              	.LVL422:
 2247 024c F7E7     		b	.L241
 2248              	.LVL423:
 2249              	.L329:
 2250              		.loc 1 87 0 discriminator 43
 2251 024e 5D4F     		ldr	r7, .L351
 2252 0250 BB42     		cmp	r3, r7
 2253 0252 03DA     		bge	.L342
 2254              	.L244:
 2255              		.loc 1 87 0 discriminator 44
 2256 0254 03F5C940 		add	r0, r3, #25728
 2257 0258 C31D     		adds	r3, r0, #7
 2258              	.LVL424:
 2259 025a F8E7     		b	.L329
 2260              	.LVL425:
 2261              	.L342:
 2262              		.loc 1 87 0 discriminator 45
 2263 025c 41F62110 		movw	r0, #6433
 2264 0260 8342     		cmp	r3, r0
 2265 0262 594A     		ldr	r2, .L351+4
 2266 0264 03DD     		ble	.L245
 2267              		.loc 1 87 0 discriminator 46
 2268 0266 C3F54950 		rsb	r0, r3, #12864
 2269 026a C31C     		adds	r3, r0, #3
 2270              	.LVL426:
 2271 026c 0CE0     		b	.L246
 2272              	.L245:
 2273              		.loc 1 87 0 discriminator 47
 2274 026e 6FF4C957 		mvn	r7, #6432
 2275 0272 BB42     		cmp	r3, r7
 2276 0274 06DA     		bge	.L247
 2277              		.loc 1 87 0 discriminator 48
 2278 0276 C3F17F43 		rsb	r3, r3, #-16777216
 2279              	.LVL427:
 2280 027a 03F57F00 		add	r0, r3, #16711680
 2281 027e 00F54D43 		add	r3, r0, #52480
 2282 0282 BD33     		adds	r3, r3, #189
 2283              	.LVL428:
 2284              	.L247:
 2285              		.loc 1 87 0 discriminator 49
 2286 0284 002B     		cmp	r3, #0
 2287 0286 02DB     		blt	.L248
 2288              	.L246:
 2289              		.loc 1 87 0 discriminator 50
 2290 0288 32F91300 		ldrsh	r0, [r2, r3, lsl #1]
 2291              	.LVL429:
 2292 028c 03E0     		b	.L249
 2293              	.LVL430:
 2294              	.L248:
 2295              		.loc 1 87 0 discriminator 51
 2296 028e 5F42     		negs	r7, r3
 2297 0290 32F91720 		ldrsh	r2, [r2, r7, lsl #1]
 2298 0294 5042     		negs	r0, r2
 2299              	.LVL431:
 2300              	.L249:
 2301              	.LBE45:
 2302              	.LBB46:
 2303              		.loc 1 87 0 discriminator 52
 2304 0296 E369     		ldr	r3, [r4, #28]
 2305              	.LVL432:
 2306 0298 1A46     		mov	r2, r3
 2307              	.LVL433:
 2308              	.L250:
 2309              		.loc 1 87 0 discriminator 53
 2310 029a 43F24327 		movw	r7, #12867
 2311 029e BA42     		cmp	r2, r7
 2312 02a0 03DD     		ble	.L330
 2313              	.L251:
 2314              		.loc 1 87 0 discriminator 54
 2315 02a2 A2F5C947 		sub	r7, r2, #25728
 2316 02a6 FA1F     		subs	r2, r7, #7
 2317              	.LVL434:
 2318 02a8 F7E7     		b	.L250
 2319              	.LVL435:
 2320              	.L330:
 2321              		.loc 1 87 0 discriminator 56
 2322 02aa 464F     		ldr	r7, .L351
 2323 02ac BA42     		cmp	r2, r7
 2324 02ae 03DA     		bge	.L343
 2325              	.L253:
 2326              		.loc 1 87 0 discriminator 57
 2327 02b0 02F5C942 		add	r2, r2, #25728
 2328              	.LVL436:
 2329 02b4 0732     		adds	r2, r2, #7
 2330              	.LVL437:
 2331 02b6 F8E7     		b	.L330
 2332              	.LVL438:
 2333              	.L343:
 2334              		.loc 1 87 0 discriminator 58
 2335 02b8 41F62117 		movw	r7, #6433
 2336 02bc BA42     		cmp	r2, r7
 2337 02be 424F     		ldr	r7, .L351+4
 2338 02c0 03DD     		ble	.L254
 2339              		.loc 1 87 0 discriminator 59
 2340 02c2 C2F54952 		rsb	r2, r2, #12864
 2341              	.LVL439:
 2342 02c6 0332     		adds	r2, r2, #3
 2343              	.LVL440:
 2344 02c8 0CE0     		b	.L255
 2345              	.L254:
 2346              		.loc 1 87 0 discriminator 60
 2347 02ca 6FF4C958 		mvn	r8, #6432
 2348 02ce 4245     		cmp	r2, r8
 2349 02d0 06DA     		bge	.L256
 2350              		.loc 1 87 0 discriminator 61
 2351 02d2 C2F17F42 		rsb	r2, r2, #-16777216
 2352              	.LVL441:
 2353 02d6 02F57F02 		add	r2, r2, #16711680
 2354 02da 02F54D42 		add	r2, r2, #52480
 2355 02de BD32     		adds	r2, r2, #189
 2356              	.LVL442:
 2357              	.L256:
 2358              		.loc 1 87 0 discriminator 62
 2359 02e0 002A     		cmp	r2, #0
 2360 02e2 02DB     		blt	.L257
 2361              	.L255:
 2362              		.loc 1 87 0 discriminator 63
 2363 02e4 37F91220 		ldrsh	r2, [r7, r2, lsl #1]
 2364              	.LVL443:
 2365 02e8 03E0     		b	.L258
 2366              	.LVL444:
 2367              	.L257:
 2368              		.loc 1 87 0 discriminator 64
 2369 02ea 5242     		negs	r2, r2
 2370              	.LVL445:
 2371 02ec 37F91270 		ldrsh	r7, [r7, r2, lsl #1]
 2372 02f0 7A42     		negs	r2, r7
 2373              	.LVL446:
 2374              	.L258:
 2375              	.LBE46:
 2376              	.LBB47:
 2377              		.loc 1 87 0 discriminator 65
 2378 02f2 03F5C953 		add	r3, r3, #6432
 2379 02f6 0133     		adds	r3, r3, #1
 2380              	.LVL447:
 2381              	.L259:
 2382              		.loc 1 87 0 discriminator 66
 2383 02f8 43F24327 		movw	r7, #12867
 2384 02fc BB42     		cmp	r3, r7
 2385 02fe 03DD     		ble	.L331
 2386              	.L260:
 2387              		.loc 1 87 0 discriminator 67
 2388 0300 A3F5C943 		sub	r3, r3, #25728
 2389              	.LVL448:
 2390 0304 073B     		subs	r3, r3, #7
 2391              	.LVL449:
 2392 0306 F7E7     		b	.L259
 2393              	.LVL450:
 2394              	.L331:
 2395              		.loc 1 87 0 discriminator 69
 2396 0308 2E4F     		ldr	r7, .L351
 2397 030a BB42     		cmp	r3, r7
 2398 030c 03DA     		bge	.L344
 2399              	.L262:
 2400              		.loc 1 87 0 discriminator 70
 2401 030e 03F5C947 		add	r7, r3, #25728
 2402 0312 FB1D     		adds	r3, r7, #7
 2403              	.LVL451:
 2404 0314 F8E7     		b	.L331
 2405              	.LVL452:
 2406              	.L344:
 2407              		.loc 1 87 0 discriminator 71
 2408 0316 41F62117 		movw	r7, #6433
 2409 031a BB42     		cmp	r3, r7
 2410 031c 2A4F     		ldr	r7, .L351+4
 2411 031e 03DD     		ble	.L263
 2412              		.loc 1 87 0 discriminator 72
 2413 0320 C3F54953 		rsb	r3, r3, #12864
 2414              	.LVL453:
 2415 0324 0333     		adds	r3, r3, #3
 2416              	.LVL454:
 2417 0326 0CE0     		b	.L264
 2418              	.L263:
 2419              		.loc 1 87 0 discriminator 73
 2420 0328 6FF4C95C 		mvn	ip, #6432
 2421 032c 6345     		cmp	r3, ip
 2422 032e 06DA     		bge	.L265
 2423              		.loc 1 87 0 discriminator 74
 2424 0330 C3F17F43 		rsb	r3, r3, #-16777216
 2425              	.LVL455:
 2426 0334 03F57F03 		add	r3, r3, #16711680
 2427 0338 03F54D43 		add	r3, r3, #52480
 2428 033c BD33     		adds	r3, r3, #189
 2429              	.LVL456:
 2430              	.L265:
 2431              		.loc 1 87 0 discriminator 75
 2432 033e 002B     		cmp	r3, #0
 2433 0340 02DB     		blt	.L266
 2434              	.L264:
 2435              		.loc 1 87 0 discriminator 76
 2436 0342 37F91330 		ldrsh	r3, [r7, r3, lsl #1]
 2437              	.LVL457:
 2438 0346 03E0     		b	.L267
 2439              	.LVL458:
 2440              	.L266:
 2441              		.loc 1 87 0 discriminator 77
 2442 0348 5B42     		negs	r3, r3
 2443              	.LVL459:
 2444 034a 37F91370 		ldrsh	r7, [r7, r3, lsl #1]
 2445 034e 7B42     		negs	r3, r7
 2446              	.LVL460:
 2447              	.L267:
 2448              	.LBE47:
 2449              		.loc 1 87 0 discriminator 78
 2450 0350 06FB05F8 		mul	r8, r6, r5
 2451 0354 4FEAA83C 		asr	ip, r8, #14
 2452 0358 03FB00F8 		mul	r8, r3, r0
 2453 035c 4FEAA838 		asr	r8, r8, #14
 2454              	.LVL461:
 2455 0360 C4F82080 		str	r8, [r4, #32]
 2456 0364 02FB00F8 		mul	r8, r2, r0
 2457              	.LVL462:
 2458 0368 06FB01F7 		mul	r7, r6, r1
 2459 036c 7642     		negs	r6, r6
 2460              	.LVL463:
 2461 036e 4FEAA838 		asr	r8, r8, #14
 2462              	.LVL464:
 2463 0372 A662     		str	r6, [r4, #40]
 2464 0374 02FB01F6 		mul	r6, r2, r1
 2465              	.LVL465:
 2466 0378 C4F82480 		str	r8, [r4, #36]
 2467 037c 03FB0CF8 		mul	r8, r3, ip
 2468              	.LVL466:
 2469 0380 B613     		asrs	r6, r6, #14
 2470              	.LVL467:
 2471 0382 C6EBA836 		rsb	r6, r6, r8, asr #14
 2472              	.LVL468:
 2473 0386 E662     		str	r6, [r4, #44]
 2474 0388 03FB01F6 		mul	r6, r3, r1
 2475 038c 02FB0CFC 		mul	ip, r2, ip
 2476 0390 B613     		asrs	r6, r6, #14
 2477              	.LVL469:
 2478 0392 06EBAC36 		add	r6, r6, ip, asr #14
 2479              	.LVL470:
 2480 0396 2663     		str	r6, [r4, #48]
 2481 0398 00FB05F6 		mul	r6, r0, r5
 2482 039c BF13     		asrs	r7, r7, #14
 2483              	.LVL471:
 2484 039e B613     		asrs	r6, r6, #14
 2485              	.LVL472:
 2486 03a0 03FB07FC 		mul	ip, r3, r7
 2487 03a4 6663     		str	r6, [r4, #52]
 2488 03a6 6B43     		muls	r3, r5, r3
 2489              	.LVL473:
 2490 03a8 02FB05F6 		mul	r6, r2, r5
 2491              	.LVL474:
 2492 03ac 7A43     		muls	r2, r7, r2
 2493              	.LVL475:
 2494 03ae B613     		asrs	r6, r6, #14
 2495              	.LVL476:
 2496 03b0 9B13     		asrs	r3, r3, #14
 2497              	.LVL477:
 2498 03b2 06EBAC36 		add	r6, r6, ip, asr #14
 2499              	.LVL478:
 2500 03b6 C3EBA232 		rsb	r2, r3, r2, asr #14
 2501 03ba A663     		str	r6, [r4, #56]
 2502 03bc E263     		str	r2, [r4, #60]
 2503 03be 4143     		muls	r1, r0, r1
 2504              	.LVL479:
 2505 03c0 D0E1     		b	.L338
 2506              	.L352:
 2507 03c2 00BF     		.align	2
 2508              	.L351:
 2509 03c4 BDCDFFFF 		.word	-12867
 2510 03c8 00000000 		.word	pprz_trig_int
 2511              	.LVL480:
 2512              	.L213:
 2513              	.LBE41:
  88:math/pprz_orientation_conversion.c ****   }
  89:math/pprz_orientation_conversion.c ****   else if (bit_is_set(orientation->status, ORREP_QUAT_F)) {
 2514              		.loc 1 89 0 is_stmt 1
 2515 03cc 2807     		lsls	r0, r5, #28
 2516 03ce 5CD5     		bpl	.L268
  90:math/pprz_orientation_conversion.c ****     QUAT_BFP_OF_REAL(orientation->quat_i, orientation->quat_f);
 2517              		.loc 1 90 0
 2518 03d0 4FF08E41 		mov	r1, #1191182336
 2519 03d4 606C     		ldr	r0, [r4, #68]	@ float
 2520 03d6 FFF7FEFF 		bl	__aeabi_fmul
 2521              	.LVL481:
 2522 03da FFF7FEFF 		bl	__aeabi_f2iz
 2523              	.LVL482:
 2524 03de 4FF08E41 		mov	r1, #1191182336
 2525 03e2 8146     		mov	r9, r0
 2526 03e4 6060     		str	r0, [r4, #4]
 2527 03e6 A06C     		ldr	r0, [r4, #72]	@ float
 2528 03e8 FFF7FEFF 		bl	__aeabi_fmul
 2529              	.LVL483:
 2530 03ec FFF7FEFF 		bl	__aeabi_f2iz
 2531              	.LVL484:
 2532 03f0 4FF08E41 		mov	r1, #1191182336
 2533 03f4 0746     		mov	r7, r0
 2534 03f6 A060     		str	r0, [r4, #8]
 2535 03f8 E06C     		ldr	r0, [r4, #76]	@ float
 2536 03fa FFF7FEFF 		bl	__aeabi_fmul
 2537              	.LVL485:
 2538 03fe FFF7FEFF 		bl	__aeabi_f2iz
 2539              	.LVL486:
 2540 0402 4FF08E41 		mov	r1, #1191182336
 2541 0406 0646     		mov	r6, r0
 2542 0408 E060     		str	r0, [r4, #12]
 2543 040a 206D     		ldr	r0, [r4, #80]	@ float
 2544 040c FFF7FEFF 		bl	__aeabi_fmul
 2545              	.LVL487:
 2546 0410 FFF7FEFF 		bl	__aeabi_f2iz
 2547              	.LVL488:
 2548              	.LBB48:
  91:math/pprz_orientation_conversion.c ****     SetBit(orientation->status, ORREP_QUAT_I);
  92:math/pprz_orientation_conversion.c ****     INT32_RMAT_OF_QUAT(orientation->rmat_i, orientation->quat_i);
 2549              		.loc 1 92 0
 2550 0414 09FB09F2 		mul	r2, r9, r9
 2551              	.LBE48:
  91:math/pprz_orientation_conversion.c ****     SetBit(orientation->status, ORREP_QUAT_I);
 2552              		.loc 1 91 0
 2553 0418 45F00103 		orr	r3, r5, #1
 2554              	.LBB49:
 2555              		.loc 1 92 0
 2556 041c D113     		asrs	r1, r2, #15
 2557 041e 07FB09F5 		mul	r5, r7, r9
 2558              	.LBE49:
  91:math/pprz_orientation_conversion.c ****     SetBit(orientation->status, ORREP_QUAT_I);
 2559              		.loc 1 91 0
 2560 0422 2370     		strb	r3, [r4, #0]
 2561              	.LBB50:
 2562              		.loc 1 92 0
 2563 0424 A1F58043 		sub	r3, r1, #16384
 2564              	.LVL489:
 2565 0428 06FB09F1 		mul	r1, r6, r9
 2566 042c 00FB09FC 		mul	ip, r0, r9
 2567 0430 EA13     		asrs	r2, r5, #15
 2568              	.LVL490:
 2569 0432 CD13     		asrs	r5, r1, #15
 2570              	.LVL491:
 2571 0434 00FB07F1 		mul	r1, r0, r7
 2572 0438 06FB07F9 		mul	r9, r6, r7
 2573 043c 7F43     		muls	r7, r7, r7
 2574 043e 4FEAEC38 		asr	r8, ip, #15
 2575              	.LVL492:
 2576 0442 4FEAE13C 		asr	ip, r1, #15
 2577 0446 00FB06F1 		mul	r1, r0, r6
 2578 044a 7643     		muls	r6, r6, r6
 2579              	.LBE50:
  90:math/pprz_orientation_conversion.c ****     QUAT_BFP_OF_REAL(orientation->quat_i, orientation->quat_f);
 2580              		.loc 1 90 0
 2581 044c 2061     		str	r0, [r4, #16]
 2582              	.LBB51:
 2583              		.loc 1 92 0
 2584 044e 4043     		muls	r0, r0, r0
 2585 0450 4FEAE939 		asr	r9, r9, #15
 2586 0454 03EBE737 		add	r7, r3, r7, asr #15
 2587 0458 2762     		str	r7, [r4, #32]
 2588 045a C8EB0907 		rsb	r7, r8, r9
 2589 045e C913     		asrs	r1, r1, #15
 2590 0460 03EBE636 		add	r6, r3, r6, asr #15
 2591 0464 E762     		str	r7, [r4, #44]
 2592 0466 0CEB0507 		add	r7, ip, r5
 2593 046a A763     		str	r7, [r4, #56]
 2594 046c 2663     		str	r6, [r4, #48]
 2595 046e 8F1A     		subs	r7, r1, r2
 2596 0470 09EB0806 		add	r6, r9, r8
 2597 0474 C5EB0C05 		rsb	r5, r5, ip
 2598              	.LVL493:
 2599 0478 8A18     		adds	r2, r1, r2
 2600              	.LVL494:
 2601 047a 03EBE030 		add	r0, r3, r0, asr #15
 2602 047e E763     		str	r7, [r4, #60]
 2603 0480 6662     		str	r6, [r4, #36]
 2604 0482 A562     		str	r5, [r4, #40]
 2605 0484 6263     		str	r2, [r4, #52]
 2606 0486 2064     		str	r0, [r4, #64]
 2607 0488 6EE1     		b	.L211
 2608              	.LVL495:
 2609              	.L268:
 2610              	.LBE51:
  93:math/pprz_orientation_conversion.c ****   }
  94:math/pprz_orientation_conversion.c ****   else if (bit_is_set(orientation->status, ORREP_EULER_F)) {
 2611              		.loc 1 94 0
 2612 048a E906     		lsls	r1, r5, #27
 2613 048c 40F16C81 		bpl	.L211
  95:math/pprz_orientation_conversion.c ****     EULERS_BFP_OF_REAL(orientation->eulers_i, orientation->eulers_f);
 2614              		.loc 1 95 0
 2615 0490 4FF08B41 		mov	r1, #1166016512
 2616 0494 606D     		ldr	r0, [r4, #84]	@ float
 2617 0496 FFF7FEFF 		bl	__aeabi_fmul
 2618              	.LVL496:
 2619 049a FFF7FEFF 		bl	__aeabi_f2iz
 2620              	.LVL497:
 2621 049e 4FF08B41 		mov	r1, #1166016512
 2622 04a2 0746     		mov	r7, r0
 2623 04a4 6061     		str	r0, [r4, #20]
 2624 04a6 A06D     		ldr	r0, [r4, #88]	@ float
 2625 04a8 FFF7FEFF 		bl	__aeabi_fmul
 2626              	.LVL498:
 2627 04ac FFF7FEFF 		bl	__aeabi_f2iz
 2628              	.LVL499:
 2629 04b0 4FF08B41 		mov	r1, #1166016512
 2630 04b4 A061     		str	r0, [r4, #24]
 2631 04b6 8046     		mov	r8, r0
 2632 04b8 E06D     		ldr	r0, [r4, #92]	@ float
 2633 04ba FFF7FEFF 		bl	__aeabi_fmul
 2634              	.LVL500:
 2635 04be FFF7FEFF 		bl	__aeabi_f2iz
 2636              	.LVL501:
  96:math/pprz_orientation_conversion.c ****     SetBit(orientation->status, ORREP_EULER_I);
 2637              		.loc 1 96 0
 2638 04c2 45F00205 		orr	r5, r5, #2
  95:math/pprz_orientation_conversion.c ****     EULERS_BFP_OF_REAL(orientation->eulers_i, orientation->eulers_f);
 2639              		.loc 1 95 0
 2640 04c6 8446     		mov	ip, r0
 2641 04c8 E061     		str	r0, [r4, #28]
 2642              		.loc 1 96 0
 2643 04ca 2570     		strb	r5, [r4, #0]
 2644              	.LVL502:
 2645              	.LBB52:
 2646              	.LBB53:
  97:math/pprz_orientation_conversion.c ****     INT32_RMAT_OF_EULERS(orientation->rmat_i, orientation->eulers_i);
 2647              		.loc 1 97 0
 2648 04cc 3946     		mov	r1, r7
 2649              	.LVL503:
 2650              	.L269:
 2651              		.loc 1 97 0 is_stmt 0 discriminator 1
 2652 04ce 43F24323 		movw	r3, #12867
 2653 04d2 9942     		cmp	r1, r3
 2654 04d4 03DD     		ble	.L332
 2655              	.L270:
 2656              		.loc 1 97 0 discriminator 2
 2657 04d6 A1F5C945 		sub	r5, r1, #25728
 2658 04da E91F     		subs	r1, r5, #7
 2659              	.LVL504:
 2660 04dc F7E7     		b	.L269
 2661              	.LVL505:
 2662              	.L332:
 2663              		.loc 1 97 0 discriminator 4
 2664 04de A548     		ldr	r0, .L353
 2665 04e0 8142     		cmp	r1, r0
 2666 04e2 03DA     		bge	.L345
 2667              	.L272:
 2668              		.loc 1 97 0 discriminator 5
 2669 04e4 01F5C946 		add	r6, r1, #25728
 2670 04e8 F11D     		adds	r1, r6, #7
 2671              	.LVL506:
 2672 04ea F8E7     		b	.L332
 2673              	.LVL507:
 2674              	.L345:
 2675              		.loc 1 97 0 discriminator 6
 2676 04ec 41F62112 		movw	r2, #6433
 2677 04f0 9142     		cmp	r1, r2
 2678 04f2 A14E     		ldr	r6, .L353+4
 2679 04f4 03DD     		ble	.L273
 2680              		.loc 1 97 0 discriminator 7
 2681 04f6 C1F54955 		rsb	r5, r1, #12864
 2682 04fa E91C     		adds	r1, r5, #3
 2683              	.LVL508:
 2684 04fc 0CE0     		b	.L274
 2685              	.L273:
 2686              		.loc 1 97 0 discriminator 8
 2687 04fe 6FF4C955 		mvn	r5, #6432
 2688 0502 A942     		cmp	r1, r5
 2689 0504 06DA     		bge	.L275
 2690              		.loc 1 97 0 discriminator 9
 2691 0506 C1F17F41 		rsb	r1, r1, #-16777216
 2692              	.LVL509:
 2693 050a 01F57F03 		add	r3, r1, #16711680
 2694 050e 03F54D41 		add	r1, r3, #52480
 2695 0512 BD31     		adds	r1, r1, #189
 2696              	.LVL510:
 2697              	.L275:
 2698              		.loc 1 97 0 discriminator 10
 2699 0514 0029     		cmp	r1, #0
 2700 0516 02DB     		blt	.L276
 2701              	.L274:
 2702              		.loc 1 97 0 discriminator 11
 2703 0518 36F91160 		ldrsh	r6, [r6, r1, lsl #1]
 2704              	.LVL511:
 2705 051c 03E0     		b	.L277
 2706              	.LVL512:
 2707              	.L276:
 2708              		.loc 1 97 0 discriminator 12
 2709 051e 4842     		negs	r0, r1
 2710 0520 36F91020 		ldrsh	r2, [r6, r0, lsl #1]
 2711 0524 5642     		negs	r6, r2
 2712              	.LVL513:
 2713              	.L277:
 2714              	.LBE53:
 2715              	.LBB54:
 2716              		.loc 1 97 0 discriminator 13
 2717 0526 07F5C957 		add	r7, r7, #6432
 2718 052a 7A1C     		adds	r2, r7, #1
 2719              	.LVL514:
 2720              	.L278:
 2721              		.loc 1 97 0 discriminator 14
 2722 052c 43F24323 		movw	r3, #12867
 2723 0530 9A42     		cmp	r2, r3
 2724 0532 03DD     		ble	.L333
 2725              	.L279:
 2726              		.loc 1 97 0 discriminator 15
 2727 0534 A2F5C940 		sub	r0, r2, #25728
 2728 0538 C21F     		subs	r2, r0, #7
 2729              	.LVL515:
 2730 053a F7E7     		b	.L278
 2731              	.LVL516:
 2732              	.L333:
 2733              		.loc 1 97 0 discriminator 17
 2734 053c 8D49     		ldr	r1, .L353
 2735 053e 8A42     		cmp	r2, r1
 2736 0540 03DA     		bge	.L346
 2737              	.L281:
 2738              		.loc 1 97 0 discriminator 18
 2739 0542 02F5C941 		add	r1, r2, #25728
 2740 0546 CA1D     		adds	r2, r1, #7
 2741              	.LVL517:
 2742 0548 F8E7     		b	.L333
 2743              	.LVL518:
 2744              	.L346:
 2745              		.loc 1 97 0 discriminator 19
 2746 054a 41F62110 		movw	r0, #6433
 2747 054e 8242     		cmp	r2, r0
 2748 0550 894D     		ldr	r5, .L353+4
 2749 0552 03DD     		ble	.L282
 2750              		.loc 1 97 0 discriminator 20
 2751 0554 C2F54957 		rsb	r7, r2, #12864
 2752 0558 FA1C     		adds	r2, r7, #3
 2753              	.LVL519:
 2754 055a 0CE0     		b	.L283
 2755              	.L282:
 2756              		.loc 1 97 0 discriminator 21
 2757 055c 6FF4C957 		mvn	r7, #6432
 2758 0560 BA42     		cmp	r2, r7
 2759 0562 06DA     		bge	.L284
 2760              		.loc 1 97 0 discriminator 22
 2761 0564 C2F17F42 		rsb	r2, r2, #-16777216
 2762              	.LVL520:
 2763 0568 02F57F03 		add	r3, r2, #16711680
 2764 056c 03F54D42 		add	r2, r3, #52480
 2765 0570 BD32     		adds	r2, r2, #189
 2766              	.LVL521:
 2767              	.L284:
 2768              		.loc 1 97 0 discriminator 23
 2769 0572 002A     		cmp	r2, #0
 2770 0574 02DB     		blt	.L285
 2771              	.L283:
 2772              		.loc 1 97 0 discriminator 24
 2773 0576 35F91210 		ldrsh	r1, [r5, r2, lsl #1]
 2774              	.LVL522:
 2775 057a 03E0     		b	.L286
 2776              	.LVL523:
 2777              	.L285:
 2778              		.loc 1 97 0 discriminator 25
 2779 057c 5142     		negs	r1, r2
 2780 057e 35F91100 		ldrsh	r0, [r5, r1, lsl #1]
 2781 0582 4142     		negs	r1, r0
 2782              	.LVL524:
 2783              	.L286:
 2784              	.LBE54:
 2785              	.LBB55:
 2786              		.loc 1 97 0 discriminator 26
 2787 0584 4246     		mov	r2, r8
 2788              	.LVL525:
 2789              	.L287:
 2790              		.loc 1 97 0 discriminator 27
 2791 0586 43F24325 		movw	r5, #12867
 2792 058a AA42     		cmp	r2, r5
 2793 058c 03DD     		ble	.L334
 2794              	.L288:
 2795              		.loc 1 97 0 discriminator 28
 2796 058e A2F5C942 		sub	r2, r2, #25728
 2797              	.LVL526:
 2798 0592 073A     		subs	r2, r2, #7
 2799              	.LVL527:
 2800 0594 F7E7     		b	.L287
 2801              	.LVL528:
 2802              	.L334:
 2803              		.loc 1 97 0 discriminator 30
 2804 0596 774B     		ldr	r3, .L353
 2805 0598 9A42     		cmp	r2, r3
 2806 059a 03DA     		bge	.L347
 2807              	.L290:
 2808              		.loc 1 97 0 discriminator 31
 2809 059c 02F5C947 		add	r7, r2, #25728
 2810 05a0 FA1D     		adds	r2, r7, #7
 2811              	.LVL529:
 2812 05a2 F8E7     		b	.L334
 2813              	.LVL530:
 2814              	.L347:
 2815              		.loc 1 97 0 discriminator 32
 2816 05a4 41F62110 		movw	r0, #6433
 2817 05a8 8242     		cmp	r2, r0
 2818 05aa 734F     		ldr	r7, .L353+4
 2819 05ac 03DD     		ble	.L291
 2820              		.loc 1 97 0 discriminator 33
 2821 05ae C2F54955 		rsb	r5, r2, #12864
 2822 05b2 EA1C     		adds	r2, r5, #3
 2823              	.LVL531:
 2824 05b4 0CE0     		b	.L292
 2825              	.L291:
 2826              		.loc 1 97 0 discriminator 34
 2827 05b6 6FF4C955 		mvn	r5, #6432
 2828 05ba AA42     		cmp	r2, r5
 2829 05bc 06DA     		bge	.L293
 2830              		.loc 1 97 0 discriminator 35
 2831 05be C2F17F42 		rsb	r2, r2, #-16777216
 2832              	.LVL532:
 2833 05c2 02F57F03 		add	r3, r2, #16711680
 2834 05c6 03F54D42 		add	r2, r3, #52480
 2835 05ca BD32     		adds	r2, r2, #189
 2836              	.LVL533:
 2837              	.L293:
 2838              		.loc 1 97 0 discriminator 36
 2839 05cc 002A     		cmp	r2, #0
 2840 05ce 02DB     		blt	.L294
 2841              	.L292:
 2842              		.loc 1 97 0 discriminator 37
 2843 05d0 37F91270 		ldrsh	r7, [r7, r2, lsl #1]
 2844              	.LVL534:
 2845 05d4 03E0     		b	.L295
 2846              	.LVL535:
 2847              	.L294:
 2848              		.loc 1 97 0 discriminator 38
 2849 05d6 5042     		negs	r0, r2
 2850 05d8 37F91070 		ldrsh	r7, [r7, r0, lsl #1]
 2851 05dc 7F42     		negs	r7, r7
 2852              	.LVL536:
 2853              	.L295:
 2854              	.LBE55:
 2855              	.LBB56:
 2856              		.loc 1 97 0 discriminator 39
 2857 05de 08F5C953 		add	r3, r8, #6432
 2858 05e2 0133     		adds	r3, r3, #1
 2859              	.LVL537:
 2860              	.L296:
 2861              		.loc 1 97 0 discriminator 40
 2862 05e4 43F24322 		movw	r2, #12867
 2863 05e8 9342     		cmp	r3, r2
 2864 05ea 03DD     		ble	.L335
 2865              	.L297:
 2866              		.loc 1 97 0 discriminator 41
 2867 05ec A3F5C943 		sub	r3, r3, #25728
 2868              	.LVL538:
 2869 05f0 073B     		subs	r3, r3, #7
 2870              	.LVL539:
 2871 05f2 F7E7     		b	.L296
 2872              	.LVL540:
 2873              	.L335:
 2874              		.loc 1 97 0 discriminator 43
 2875 05f4 5F48     		ldr	r0, .L353
 2876 05f6 8342     		cmp	r3, r0
 2877 05f8 03DA     		bge	.L348
 2878              	.L299:
 2879              		.loc 1 97 0 discriminator 44
 2880 05fa 03F5C945 		add	r5, r3, #25728
 2881 05fe EB1D     		adds	r3, r5, #7
 2882              	.LVL541:
 2883 0600 F8E7     		b	.L335
 2884              	.LVL542:
 2885              	.L348:
 2886              		.loc 1 97 0 discriminator 45
 2887 0602 41F62115 		movw	r5, #6433
 2888 0606 AB42     		cmp	r3, r5
 2889 0608 5B4A     		ldr	r2, .L353+4
 2890 060a 03DD     		ble	.L300
 2891              		.loc 1 97 0 discriminator 46
 2892 060c C3F54955 		rsb	r5, r3, #12864
 2893 0610 EB1C     		adds	r3, r5, #3
 2894              	.LVL543:
 2895 0612 0CE0     		b	.L301
 2896              	.L300:
 2897              		.loc 1 97 0 discriminator 47
 2898 0614 6FF4C950 		mvn	r0, #6432
 2899 0618 8342     		cmp	r3, r0
 2900 061a 06DA     		bge	.L302
 2901              		.loc 1 97 0 discriminator 48
 2902 061c C3F17F43 		rsb	r3, r3, #-16777216
 2903              	.LVL544:
 2904 0620 03F57F05 		add	r5, r3, #16711680
 2905 0624 05F54D43 		add	r3, r5, #52480
 2906 0628 BD33     		adds	r3, r3, #189
 2907              	.LVL545:
 2908              	.L302:
 2909              		.loc 1 97 0 discriminator 49
 2910 062a 002B     		cmp	r3, #0
 2911 062c 02DB     		blt	.L303
 2912              	.L301:
 2913              		.loc 1 97 0 discriminator 50
 2914 062e 32F91350 		ldrsh	r5, [r2, r3, lsl #1]
 2915              	.LVL546:
 2916 0632 03E0     		b	.L304
 2917              	.LVL547:
 2918              	.L303:
 2919              		.loc 1 97 0 discriminator 51
 2920 0634 5842     		negs	r0, r3
 2921 0636 32F91020 		ldrsh	r2, [r2, r0, lsl #1]
 2922 063a 5542     		negs	r5, r2
 2923              	.LVL548:
 2924              	.L304:
 2925              	.LBE56:
 2926              	.LBB57:
 2927              		.loc 1 97 0 discriminator 52
 2928 063c 6346     		mov	r3, ip
 2929              	.LVL549:
 2930              	.L305:
 2931              		.loc 1 97 0 discriminator 53
 2932 063e 43F24320 		movw	r0, #12867
 2933 0642 8342     		cmp	r3, r0
 2934 0644 03DD     		ble	.L336
 2935              	.L306:
 2936              		.loc 1 97 0 discriminator 54
 2937 0646 A3F5C940 		sub	r0, r3, #25728
 2938 064a C31F     		subs	r3, r0, #7
 2939              	.LVL550:
 2940 064c F7E7     		b	.L305
 2941              	.LVL551:
 2942              	.L336:
 2943              		.loc 1 97 0 discriminator 56
 2944 064e 494A     		ldr	r2, .L353
 2945 0650 9342     		cmp	r3, r2
 2946 0652 03DA     		bge	.L349
 2947              	.L308:
 2948              		.loc 1 97 0 discriminator 57
 2949 0654 03F5C942 		add	r2, r3, #25728
 2950 0658 D31D     		adds	r3, r2, #7
 2951              	.LVL552:
 2952 065a F8E7     		b	.L336
 2953              	.LVL553:
 2954              	.L349:
 2955              		.loc 1 97 0 discriminator 58
 2956 065c 41F62110 		movw	r0, #6433
 2957 0660 8342     		cmp	r3, r0
 2958 0662 454A     		ldr	r2, .L353+4
 2959 0664 03DD     		ble	.L309
 2960              		.loc 1 97 0 discriminator 59
 2961 0666 C3F54953 		rsb	r3, r3, #12864
 2962              	.LVL554:
 2963 066a 0333     		adds	r3, r3, #3
 2964              	.LVL555:
 2965 066c 0CE0     		b	.L310
 2966              	.L309:
 2967              		.loc 1 97 0 discriminator 60
 2968 066e 6FF4C950 		mvn	r0, #6432
 2969 0672 8342     		cmp	r3, r0
 2970 0674 06DA     		bge	.L311
 2971              		.loc 1 97 0 discriminator 61
 2972 0676 C3F17F43 		rsb	r3, r3, #-16777216
 2973              	.LVL556:
 2974 067a 03F57F00 		add	r0, r3, #16711680
 2975 067e 00F54D43 		add	r3, r0, #52480
 2976 0682 BD33     		adds	r3, r3, #189
 2977              	.LVL557:
 2978              	.L311:
 2979              		.loc 1 97 0 discriminator 62
 2980 0684 002B     		cmp	r3, #0
 2981 0686 02DB     		blt	.L312
 2982              	.L310:
 2983              		.loc 1 97 0 discriminator 63
 2984 0688 32F91320 		ldrsh	r2, [r2, r3, lsl #1]
 2985              	.LVL558:
 2986 068c 03E0     		b	.L313
 2987              	.LVL559:
 2988              	.L312:
 2989              		.loc 1 97 0 discriminator 64
 2990 068e 5842     		negs	r0, r3
 2991 0690 32F91020 		ldrsh	r2, [r2, r0, lsl #1]
 2992 0694 5242     		negs	r2, r2
 2993              	.LVL560:
 2994              	.L313:
 2995              	.LBE57:
 2996              	.LBB58:
 2997              		.loc 1 97 0 discriminator 65
 2998 0696 0CF5C950 		add	r0, ip, #6432
 2999 069a 0130     		adds	r0, r0, #1
 3000              	.LVL561:
 3001              	.L314:
 3002              		.loc 1 97 0 discriminator 66
 3003 069c 43F24323 		movw	r3, #12867
 3004 06a0 9842     		cmp	r0, r3
 3005 06a2 03DD     		ble	.L337
 3006              	.L315:
 3007              		.loc 1 97 0 discriminator 67
 3008 06a4 A0F5C943 		sub	r3, r0, #25728
 3009 06a8 D81F     		subs	r0, r3, #7
 3010              	.LVL562:
 3011 06aa F7E7     		b	.L314
 3012              	.LVL563:
 3013              	.L337:
 3014              		.loc 1 97 0 discriminator 69
 3015 06ac 314B     		ldr	r3, .L353
 3016 06ae 9842     		cmp	r0, r3
 3017 06b0 03DA     		bge	.L350
 3018              	.L317:
 3019              		.loc 1 97 0 discriminator 70
 3020 06b2 00F5C940 		add	r0, r0, #25728
 3021              	.LVL564:
 3022 06b6 0730     		adds	r0, r0, #7
 3023              	.LVL565:
 3024 06b8 F8E7     		b	.L337
 3025              	.LVL566:
 3026              	.L350:
 3027              		.loc 1 97 0 discriminator 71
 3028 06ba 41F62113 		movw	r3, #6433
 3029 06be 9842     		cmp	r0, r3
 3030 06c0 2D4B     		ldr	r3, .L353+4
 3031 06c2 03DD     		ble	.L318
 3032              		.loc 1 97 0 discriminator 72
 3033 06c4 C0F54950 		rsb	r0, r0, #12864
 3034              	.LVL567:
 3035 06c8 0330     		adds	r0, r0, #3
 3036              	.LVL568:
 3037 06ca 0CE0     		b	.L319
 3038              	.L318:
 3039              		.loc 1 97 0 discriminator 73
 3040 06cc 6FF4C95C 		mvn	ip, #6432
 3041 06d0 6045     		cmp	r0, ip
 3042 06d2 06DA     		bge	.L320
 3043              		.loc 1 97 0 discriminator 74
 3044 06d4 C0F17F40 		rsb	r0, r0, #-16777216
 3045              	.LVL569:
 3046 06d8 00F57F00 		add	r0, r0, #16711680
 3047 06dc 00F54D40 		add	r0, r0, #52480
 3048 06e0 BD30     		adds	r0, r0, #189
 3049              	.LVL570:
 3050              	.L320:
 3051              		.loc 1 97 0 discriminator 75
 3052 06e2 0028     		cmp	r0, #0
 3053 06e4 02DB     		blt	.L321
 3054              	.L319:
 3055              		.loc 1 97 0 discriminator 76
 3056 06e6 33F91030 		ldrsh	r3, [r3, r0, lsl #1]
 3057              	.LVL571:
 3058 06ea 03E0     		b	.L322
 3059              	.LVL572:
 3060              	.L321:
 3061              		.loc 1 97 0 discriminator 77
 3062 06ec 4042     		negs	r0, r0
 3063              	.LVL573:
 3064 06ee 33F91030 		ldrsh	r3, [r3, r0, lsl #1]
 3065 06f2 5B42     		negs	r3, r3
 3066              	.LVL574:
 3067              	.L322:
 3068              	.LBE58:
 3069              		.loc 1 97 0 discriminator 78
 3070 06f4 07FB06F8 		mul	r8, r7, r6
 3071 06f8 03FB05FC 		mul	ip, r3, r5
 3072 06fc 4FEAA83E 		asr	lr, r8, #14
 3073 0700 4FEAAC38 		asr	r8, ip, #14
 3074              	.LVL575:
 3075 0704 02FB05FC 		mul	ip, r2, r5
 3076 0708 07FB01F0 		mul	r0, r7, r1
 3077 070c 7F42     		negs	r7, r7
 3078              	.LVL576:
 3079 070e C4F82080 		str	r8, [r4, #32]
 3080 0712 A762     		str	r7, [r4, #40]
 3081 0714 4FEAAC38 		asr	r8, ip, #14
 3082              	.LVL577:
 3083 0718 02FB01F7 		mul	r7, r2, r1
 3084              	.LVL578:
 3085 071c C4F82480 		str	r8, [r4, #36]
 3086 0720 03FB0EF8 		mul	r8, r3, lr
 3087              	.LVL579:
 3088 0724 BF13     		asrs	r7, r7, #14
 3089              	.LVL580:
 3090 0726 C7EBA837 		rsb	r7, r7, r8, asr #14
 3091              	.LVL581:
 3092 072a E762     		str	r7, [r4, #44]
 3093 072c 03FB01F7 		mul	r7, r3, r1
 3094 0730 02FB0EFE 		mul	lr, r2, lr
 3095 0734 BF13     		asrs	r7, r7, #14
 3096              	.LVL582:
 3097 0736 07EBAE37 		add	r7, r7, lr, asr #14
 3098              	.LVL583:
 3099 073a 2763     		str	r7, [r4, #48]
 3100 073c 05FB06F7 		mul	r7, r5, r6
 3101 0740 8013     		asrs	r0, r0, #14
 3102              	.LVL584:
 3103 0742 BF13     		asrs	r7, r7, #14
 3104              	.LVL585:
 3105 0744 03FB00FC 		mul	ip, r3, r0
 3106 0748 6763     		str	r7, [r4, #52]
 3107 074a 7343     		muls	r3, r6, r3
 3108              	.LVL586:
 3109 074c 02FB06F7 		mul	r7, r2, r6
 3110              	.LVL587:
 3111 0750 4243     		muls	r2, r0, r2
 3112              	.LVL588:
 3113 0752 6943     		muls	r1, r5, r1
 3114              	.LVL589:
 3115 0754 BF13     		asrs	r7, r7, #14
 3116              	.LVL590:
 3117 0756 9B13     		asrs	r3, r3, #14
 3118              	.LVL591:
 3119 0758 07EBAC37 		add	r7, r7, ip, asr #14
 3120              	.LVL592:
 3121 075c C3EBA232 		rsb	r2, r3, r2, asr #14
 3122 0760 A763     		str	r7, [r4, #56]
 3123 0762 E263     		str	r2, [r4, #60]
 3124              	.LVL593:
 3125              	.L338:
 3126 0764 8913     		asrs	r1, r1, #14
 3127 0766 2164     		str	r1, [r4, #64]
 3128              	.L211:
 3129              	.LBE52:
  98:math/pprz_orientation_conversion.c ****   }
  99:math/pprz_orientation_conversion.c ****   /* set bit to indicate this representation is computed */
 100:math/pprz_orientation_conversion.c ****   SetBit(orientation->status, ORREP_RMAT_I);
 3130              		.loc 1 100 0 is_stmt 1
 3131 0768 2378     		ldrb	r3, [r4, #0]	@ zero_extendqisi2
 3132 076a 43F00402 		orr	r2, r3, #4
 3133 076e 2270     		strb	r2, [r4, #0]
 3134              	.L208:
 3135 0770 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 3136              	.L354:
 3137              		.align	2
 3138              	.L353:
 3139 0774 BDCDFFFF 		.word	-12867
 3140 0778 00000000 		.word	pprz_trig_int
 3141              		.cfi_endproc
 3142              	.LFE16:
 3144              		.global	__aeabi_i2f
 3145              		.section	.text.orientationCalcEulers_i,"ax",%progbits
 3146              		.align	1
 3147              		.global	orientationCalcEulers_i
 3148              		.thumb
 3149              		.thumb_func
 3151              	orientationCalcEulers_i:
 3152              	.LFB17:
 101:math/pprz_orientation_conversion.c **** }
 102:math/pprz_orientation_conversion.c **** 
 103:math/pprz_orientation_conversion.c **** void orientationCalcEulers_i(struct OrientationReps* orientation) {
 3153              		.loc 1 103 0
 3154              		.cfi_startproc
 3155              		@ args = 0, pretend = 0, frame = 0
 3156              		@ frame_needed = 0, uses_anonymous_args = 0
 3157              	.LVL594:
 3158 0000 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 3159              	.LCFI2:
 3160              		.cfi_def_cfa_offset 40
 3161              		.cfi_offset 3, -40
 3162              		.cfi_offset 4, -36
 3163              		.cfi_offset 5, -32
 3164              		.cfi_offset 6, -28
 3165              		.cfi_offset 7, -24
 3166              		.cfi_offset 8, -20
 3167              		.cfi_offset 9, -16
 3168              		.cfi_offset 10, -12
 3169              		.cfi_offset 11, -8
 3170              		.cfi_offset 14, -4
 104:math/pprz_orientation_conversion.c ****   if (bit_is_set(orientation->status, ORREP_EULER_I))
 3171              		.loc 1 104 0
 3172 0004 0578     		ldrb	r5, [r0, #0]	@ zero_extendqisi2
 103:math/pprz_orientation_conversion.c **** void orientationCalcEulers_i(struct OrientationReps* orientation) {
 3173              		.loc 1 103 0
 3174 0006 0446     		mov	r4, r0
 3175              		.loc 1 104 0
 3176 0008 AA07     		lsls	r2, r5, #30
 3177 000a 00F1DF81 		bmi	.L355
 105:math/pprz_orientation_conversion.c ****     return;
 106:math/pprz_orientation_conversion.c **** 
 107:math/pprz_orientation_conversion.c ****   if (bit_is_set(orientation->status, ORREP_EULER_F)) {
 3178              		.loc 1 107 0
 3179 000e EB06     		lsls	r3, r5, #27
 3180 0010 11D5     		bpl	.L357
 108:math/pprz_orientation_conversion.c ****     EULERS_BFP_OF_REAL(orientation->eulers_i, orientation->eulers_f);
 3181              		.loc 1 108 0
 3182 0012 4FF08B41 		mov	r1, #1166016512
 3183 0016 406D     		ldr	r0, [r0, #84]	@ float
 3184              	.LVL595:
 3185 0018 FFF7FEFF 		bl	__aeabi_fmul
 3186              	.LVL596:
 3187 001c FFF7FEFF 		bl	__aeabi_f2iz
 3188              	.LVL597:
 3189 0020 4FF08B41 		mov	r1, #1166016512
 3190 0024 6061     		str	r0, [r4, #20]
 3191 0026 A06D     		ldr	r0, [r4, #88]	@ float
 3192 0028 FFF7FEFF 		bl	__aeabi_fmul
 3193              	.LVL598:
 3194 002c FFF7FEFF 		bl	__aeabi_f2iz
 3195              	.LVL599:
 3196 0030 A061     		str	r0, [r4, #24]
 3197 0032 E06D     		ldr	r0, [r4, #92]	@ float
 3198 0034 BFE1     		b	.L365
 3199              	.LVL600:
 3200              	.L357:
 109:math/pprz_orientation_conversion.c ****   }
 110:math/pprz_orientation_conversion.c ****   else if (bit_is_set(orientation->status, ORREP_RMAT_I)) {
 3201              		.loc 1 110 0
 3202 0036 6807     		lsls	r0, r5, #29
 3203              	.LVL601:
 3204 0038 3FD5     		bpl	.L359
 3205              	.LBB59:
 111:math/pprz_orientation_conversion.c ****     INT32_EULERS_OF_RMAT(orientation->eulers_i, orientation->rmat_i);
 3206              		.loc 1 111 0
 3207 003a 206A     		ldr	r0, [r4, #32]
 3208 003c FFF7FEFF 		bl	__aeabi_i2f
 3209              	.LVL602:
 3210 0040 4FF06251 		mov	r1, #947912704
 3211 0044 FFF7FEFF 		bl	__aeabi_fmul
 3212              	.LVL603:
 3213 0048 0546     		mov	r5, r0
 3214              	.LVL604:
 3215 004a 606A     		ldr	r0, [r4, #36]
 3216              	.LVL605:
 3217 004c FFF7FEFF 		bl	__aeabi_i2f
 3218              	.LVL606:
 3219 0050 4FF06251 		mov	r1, #947912704
 3220 0054 FFF7FEFF 		bl	__aeabi_fmul
 3221              	.LVL607:
 3222 0058 8046     		mov	r8, r0
 3223              	.LVL608:
 3224 005a A06A     		ldr	r0, [r4, #40]
 3225              	.LVL609:
 3226 005c FFF7FEFF 		bl	__aeabi_i2f
 3227              	.LVL610:
 3228 0060 4FF06251 		mov	r1, #947912704
 3229 0064 FFF7FEFF 		bl	__aeabi_fmul
 3230              	.LVL611:
 3231 0068 0646     		mov	r6, r0
 3232              	.LVL612:
 3233 006a 606B     		ldr	r0, [r4, #52]
 3234              	.LVL613:
 3235 006c FFF7FEFF 		bl	__aeabi_i2f
 3236              	.LVL614:
 3237 0070 4FF06251 		mov	r1, #947912704
 3238 0074 FFF7FEFF 		bl	__aeabi_fmul
 3239              	.LVL615:
 3240 0078 0746     		mov	r7, r0
 3241 007a 206C     		ldr	r0, [r4, #64]
 3242              	.LVL616:
 3243 007c FFF7FEFF 		bl	__aeabi_i2f
 3244              	.LVL617:
 3245 0080 4FF06251 		mov	r1, #947912704
 3246 0084 FFF7FEFF 		bl	__aeabi_fmul
 3247              	.LVL618:
 3248 0088 0146     		mov	r1, r0
 3249 008a 3846     		mov	r0, r7
 3250 008c FFF7FEFF 		bl	atan2f
 3251              	.LVL619:
 3252 0090 0746     		mov	r7, r0
 3253              	.LVL620:
 3254 0092 3046     		mov	r0, r6
 3255              	.LVL621:
 3256 0094 FFF7FEFF 		bl	asinf
 3257              	.LVL622:
 3258 0098 2946     		mov	r1, r5
 3259 009a 0646     		mov	r6, r0
 3260              	.LVL623:
 3261 009c 4046     		mov	r0, r8
 3262              	.LVL624:
 3263 009e FFF7FEFF 		bl	atan2f
 3264              	.LVL625:
 3265 00a2 4FF08B41 		mov	r1, #1166016512
 3266 00a6 0546     		mov	r5, r0
 3267              	.LVL626:
 3268 00a8 3846     		mov	r0, r7
 3269              	.LVL627:
 3270 00aa FFF7FEFF 		bl	__aeabi_fmul
 3271              	.LVL628:
 3272 00ae FFF7FEFF 		bl	__aeabi_f2iz
 3273              	.LVL629:
 3274 00b2 6061     		str	r0, [r4, #20]
 3275 00b4 06F10040 		add	r0, r6, #-2147483648
 3276 00b8 75E1     		b	.L366
 3277              	.LVL630:
 3278              	.L359:
 3279              	.LBE59:
 112:math/pprz_orientation_conversion.c ****   }
 113:math/pprz_orientation_conversion.c ****   else if (bit_is_set(orientation->status, ORREP_QUAT_I)) {
 3280              		.loc 1 113 0
 3281 00ba E907     		lsls	r1, r5, #31
 3282 00bc 53D5     		bpl	.L360
 3283              	.LBB60:
 114:math/pprz_orientation_conversion.c ****     INT32_EULERS_OF_QUAT(orientation->eulers_i, orientation->quat_i);
 3284              		.loc 1 114 0
 3285 00be A668     		ldr	r6, [r4, #8]
 3286              	.LVL631:
 3287 00c0 D4F80480 		ldr	r8, [r4, #4]
 3288 00c4 E768     		ldr	r7, [r4, #12]
 3289 00c6 2569     		ldr	r5, [r4, #16]
 3290 00c8 06FB08F0 		mul	r0, r6, r8
 3291 00cc 05FB07F3 		mul	r3, r5, r7
 3292 00d0 07FB07F2 		mul	r2, r7, r7
 3293 00d4 C113     		asrs	r1, r0, #15
 3294 00d6 4FEAE239 		asr	r9, r2, #15
 3295              	.LVL632:
 3296 00da 01EBE332 		add	r2, r1, r3, asr #15
 3297 00de 42F31000 		sbfx	r0, r2, #0, #17
 3298 00e2 FFF7FEFF 		bl	__aeabi_i2f
 3299              	.LVL633:
 3300 00e6 4FF06251 		mov	r1, #947912704
 3301 00ea FFF7FEFF 		bl	__aeabi_fmul
 3302              	.LVL634:
 3303 00ee 06FB06F3 		mul	r3, r6, r6
 3304 00f2 8346     		mov	fp, r0
 3305 00f4 09EBE330 		add	r0, r9, r3, asr #15
 3306 00f8 40F31001 		sbfx	r1, r0, #0, #17
 3307 00fc C1F58040 		rsb	r0, r1, #16384
 3308 0100 FFF7FEFF 		bl	__aeabi_i2f
 3309              	.LVL635:
 3310 0104 4FF06251 		mov	r1, #947912704
 3311 0108 FFF7FEFF 		bl	__aeabi_fmul
 3312              	.LVL636:
 3313 010c 0146     		mov	r1, r0
 3314 010e 5846     		mov	r0, fp
 3315 0110 FFF7FEFF 		bl	atan2f
 3316              	.LVL637:
 3317 0114 07FB08F3 		mul	r3, r7, r8
 3318 0118 05FB06F2 		mul	r2, r5, r6
 3319 011c 8346     		mov	fp, r0
 3320              	.LVL638:
 3321 011e D813     		asrs	r0, r3, #15
 3322              	.LVL639:
 3323 0120 C0EBE231 		rsb	r1, r0, r2, asr #15
 3324 0124 41F31000 		sbfx	r0, r1, #0, #17
 3325              	.LVL640:
 3326 0128 FFF7FEFF 		bl	__aeabi_i2f
 3327              	.LVL641:
 3328 012c 4FF06251 		mov	r1, #947912704
 3329 0130 FFF7FEFF 		bl	__aeabi_fmul
 3330              	.LVL642:
 3331 0134 FFF7FEFF 		bl	asinf
 3332              	.LVL643:
 3333 0138 05FB08FC 		mul	ip, r5, r8
 3334 013c 7E43     		muls	r6, r7, r6
 3335              	.LVL644:
 3336 013e 4FEAEC38 		asr	r8, ip, #15
 3337              	.LVL645:
 3338 0142 08EBE636 		add	r6, r8, r6, asr #15
 3339 0146 8246     		mov	sl, r0
 3340              	.LVL646:
 3341 0148 46F31000 		sbfx	r0, r6, #0, #17
 3342              	.LVL647:
 3343 014c FFF7FEFF 		bl	__aeabi_i2f
 3344              	.LVL648:
 3345 0150 4FF06251 		mov	r1, #947912704
 3346 0154 FFF7FEFF 		bl	__aeabi_fmul
 3347              	.LVL649:
 3348 0158 6D43     		muls	r5, r5, r5
 3349              	.LVL650:
 3350 015a 09EBE539 		add	r9, r9, r5, asr #15
 3351              	.LVL651:
 3352 015e 0646     		mov	r6, r0
 3353 0160 49F31000 		sbfx	r0, r9, #0, #17
 3354 0164 08E1     		b	.L367
 3355              	.LVL652:
 3356              	.L360:
 3357              	.LBE60:
 115:math/pprz_orientation_conversion.c ****   }
 116:math/pprz_orientation_conversion.c ****   else if (bit_is_set(orientation->status, ORREP_RMAT_F)) {
 3358              		.loc 1 116 0
 3359 0166 AA06     		lsls	r2, r5, #26
 3360 0168 40F18E80 		bpl	.L361
 117:math/pprz_orientation_conversion.c ****     RMAT_BFP_OF_REAL(orientation->rmat_i, orientation->rmat_f);
 3361              		.loc 1 117 0
 3362 016c 4FF08D41 		mov	r1, #1182793728
 3363 0170 206E     		ldr	r0, [r4, #96]	@ float
 3364 0172 FFF7FEFF 		bl	__aeabi_fmul
 3365              	.LVL653:
 3366 0176 FFF7FEFF 		bl	__aeabi_f2iz
 3367              	.LVL654:
 3368 017a 4FF08D41 		mov	r1, #1182793728
 3369 017e 0646     		mov	r6, r0
 3370 0180 2062     		str	r0, [r4, #32]
 3371 0182 606E     		ldr	r0, [r4, #100]	@ float
 3372 0184 FFF7FEFF 		bl	__aeabi_fmul
 3373              	.LVL655:
 3374 0188 FFF7FEFF 		bl	__aeabi_f2iz
 3375              	.LVL656:
 3376 018c 4FF08D41 		mov	r1, #1182793728
 3377 0190 0746     		mov	r7, r0
 3378 0192 6062     		str	r0, [r4, #36]
 3379 0194 A06E     		ldr	r0, [r4, #104]	@ float
 3380 0196 FFF7FEFF 		bl	__aeabi_fmul
 3381              	.LVL657:
 3382 019a FFF7FEFF 		bl	__aeabi_f2iz
 3383              	.LVL658:
 3384 019e 4FF08D41 		mov	r1, #1182793728
 3385 01a2 8046     		mov	r8, r0
 3386 01a4 A062     		str	r0, [r4, #40]
 3387 01a6 E06E     		ldr	r0, [r4, #108]	@ float
 3388 01a8 FFF7FEFF 		bl	__aeabi_fmul
 3389              	.LVL659:
 3390 01ac FFF7FEFF 		bl	__aeabi_f2iz
 3391              	.LVL660:
 3392 01b0 4FF08D41 		mov	r1, #1182793728
 3393 01b4 E062     		str	r0, [r4, #44]
 3394 01b6 206F     		ldr	r0, [r4, #112]	@ float
 3395 01b8 FFF7FEFF 		bl	__aeabi_fmul
 3396              	.LVL661:
 3397 01bc FFF7FEFF 		bl	__aeabi_f2iz
 3398              	.LVL662:
 3399 01c0 4FF08D41 		mov	r1, #1182793728
 3400 01c4 2063     		str	r0, [r4, #48]
 3401 01c6 606F     		ldr	r0, [r4, #116]	@ float
 3402 01c8 FFF7FEFF 		bl	__aeabi_fmul
 3403              	.LVL663:
 3404 01cc FFF7FEFF 		bl	__aeabi_f2iz
 3405              	.LVL664:
 3406 01d0 4FF08D41 		mov	r1, #1182793728
 3407 01d4 8246     		mov	sl, r0
 3408 01d6 6063     		str	r0, [r4, #52]
 3409 01d8 A06F     		ldr	r0, [r4, #120]	@ float
 3410 01da FFF7FEFF 		bl	__aeabi_fmul
 3411              	.LVL665:
 3412 01de FFF7FEFF 		bl	__aeabi_f2iz
 3413              	.LVL666:
 3414 01e2 4FF08D41 		mov	r1, #1182793728
 3415 01e6 A063     		str	r0, [r4, #56]
 3416 01e8 E06F     		ldr	r0, [r4, #124]	@ float
 3417 01ea FFF7FEFF 		bl	__aeabi_fmul
 3418              	.LVL667:
 3419 01ee FFF7FEFF 		bl	__aeabi_f2iz
 3420              	.LVL668:
 3421 01f2 4FF08D41 		mov	r1, #1182793728
 3422 01f6 E063     		str	r0, [r4, #60]
 3423 01f8 D4F88000 		ldr	r0, [r4, #128]	@ float
 3424 01fc FFF7FEFF 		bl	__aeabi_fmul
 3425              	.LVL669:
 3426 0200 FFF7FEFF 		bl	__aeabi_f2iz
 3427              	.LVL670:
 118:math/pprz_orientation_conversion.c ****     SetBit(orientation->status, ORREP_RMAT_I);
 3428              		.loc 1 118 0
 3429 0204 45F00401 		orr	r1, r5, #4
 117:math/pprz_orientation_conversion.c ****     RMAT_BFP_OF_REAL(orientation->rmat_i, orientation->rmat_f);
 3430              		.loc 1 117 0
 3431 0208 8146     		mov	r9, r0
 3432 020a 2064     		str	r0, [r4, #64]
 3433              		.loc 1 118 0
 3434 020c 2170     		strb	r1, [r4, #0]
 3435              	.LVL671:
 3436              	.LBB61:
 119:math/pprz_orientation_conversion.c ****     INT32_EULERS_OF_RMAT(orientation->eulers_i, orientation->rmat_i);
 3437              		.loc 1 119 0
 3438 020e 5046     		mov	r0, sl
 3439              	.LVL672:
 3440 0210 FFF7FEFF 		bl	__aeabi_i2f
 3441              	.LVL673:
 3442 0214 4FF06251 		mov	r1, #947912704
 3443 0218 FFF7FEFF 		bl	__aeabi_fmul
 3444              	.LVL674:
 3445 021c 0546     		mov	r5, r0
 3446 021e 4846     		mov	r0, r9
 3447 0220 FFF7FEFF 		bl	__aeabi_i2f
 3448              	.LVL675:
 3449 0224 4FF06251 		mov	r1, #947912704
 3450 0228 FFF7FEFF 		bl	__aeabi_fmul
 3451              	.LVL676:
 3452 022c 0146     		mov	r1, r0
 3453 022e 2846     		mov	r0, r5
 3454 0230 FFF7FEFF 		bl	atan2f
 3455              	.LVL677:
 3456 0234 8146     		mov	r9, r0
 3457              	.LVL678:
 3458 0236 4046     		mov	r0, r8
 3459              	.LVL679:
 3460 0238 FFF7FEFF 		bl	__aeabi_i2f
 3461              	.LVL680:
 3462 023c 4FF06251 		mov	r1, #947912704
 3463 0240 FFF7FEFF 		bl	__aeabi_fmul
 3464              	.LVL681:
 3465 0244 FFF7FEFF 		bl	asinf
 3466              	.LVL682:
 3467 0248 8046     		mov	r8, r0
 3468              	.LVL683:
 3469 024a 3846     		mov	r0, r7
 3470              	.LVL684:
 3471 024c FFF7FEFF 		bl	__aeabi_i2f
 3472              	.LVL685:
 3473 0250 4FF06251 		mov	r1, #947912704
 3474 0254 FFF7FEFF 		bl	__aeabi_fmul
 3475              	.LVL686:
 3476 0258 0546     		mov	r5, r0
 3477 025a 3046     		mov	r0, r6
 3478 025c FFF7FEFF 		bl	__aeabi_i2f
 3479              	.LVL687:
 3480 0260 4FF06251 		mov	r1, #947912704
 3481 0264 FFF7FEFF 		bl	__aeabi_fmul
 3482              	.LVL688:
 3483 0268 0146     		mov	r1, r0
 3484 026a 2846     		mov	r0, r5
 3485 026c FFF7FEFF 		bl	atan2f
 3486              	.LVL689:
 3487 0270 4FF08B41 		mov	r1, #1166016512
 3488 0274 0546     		mov	r5, r0
 3489              	.LVL690:
 3490 0276 4846     		mov	r0, r9
 3491              	.LVL691:
 3492 0278 FFF7FEFF 		bl	__aeabi_fmul
 3493              	.LVL692:
 3494 027c FFF7FEFF 		bl	__aeabi_f2iz
 3495              	.LVL693:
 3496 0280 6061     		str	r0, [r4, #20]
 3497 0282 08F10040 		add	r0, r8, #-2147483648
 3498 0286 8EE0     		b	.L366
 3499              	.LVL694:
 3500              	.L361:
 3501              	.LBE61:
 120:math/pprz_orientation_conversion.c ****   }
 121:math/pprz_orientation_conversion.c ****   else if (bit_is_set(orientation->status, ORREP_QUAT_F)) {
 3502              		.loc 1 121 0
 3503 0288 2B07     		lsls	r3, r5, #28
 3504 028a 40F19B80 		bpl	.L358
 122:math/pprz_orientation_conversion.c ****     QUAT_BFP_OF_REAL(orientation->quat_i, orientation->quat_f);
 3505              		.loc 1 122 0
 3506 028e 4FF08E41 		mov	r1, #1191182336
 3507 0292 606C     		ldr	r0, [r4, #68]	@ float
 3508 0294 FFF7FEFF 		bl	__aeabi_fmul
 3509              	.LVL695:
 3510 0298 FFF7FEFF 		bl	__aeabi_f2iz
 3511              	.LVL696:
 3512 029c 4FF08E41 		mov	r1, #1191182336
 3513 02a0 8146     		mov	r9, r0
 3514 02a2 6060     		str	r0, [r4, #4]
 3515 02a4 A06C     		ldr	r0, [r4, #72]	@ float
 3516 02a6 FFF7FEFF 		bl	__aeabi_fmul
 3517              	.LVL697:
 3518 02aa FFF7FEFF 		bl	__aeabi_f2iz
 3519              	.LVL698:
 3520 02ae 4FF08E41 		mov	r1, #1191182336
 3521 02b2 0646     		mov	r6, r0
 3522 02b4 A060     		str	r0, [r4, #8]
 3523 02b6 E06C     		ldr	r0, [r4, #76]	@ float
 3524 02b8 FFF7FEFF 		bl	__aeabi_fmul
 3525              	.LVL699:
 3526 02bc FFF7FEFF 		bl	__aeabi_f2iz
 3527              	.LVL700:
 3528 02c0 4FF08E41 		mov	r1, #1191182336
 3529 02c4 8046     		mov	r8, r0
 3530 02c6 E060     		str	r0, [r4, #12]
 3531 02c8 206D     		ldr	r0, [r4, #80]	@ float
 3532 02ca FFF7FEFF 		bl	__aeabi_fmul
 3533              	.LVL701:
 3534 02ce FFF7FEFF 		bl	__aeabi_f2iz
 3535              	.LVL702:
 3536              	.LBB62:
 123:math/pprz_orientation_conversion.c ****     SetBit(orientation->status, ORREP_QUAT_I);
 124:math/pprz_orientation_conversion.c ****     INT32_EULERS_OF_QUAT(orientation->eulers_i, orientation->quat_i);
 3537              		.loc 1 124 0
 3538 02d2 06FB09F1 		mul	r1, r6, r9
 3539              	.LBE62:
 122:math/pprz_orientation_conversion.c ****     QUAT_BFP_OF_REAL(orientation->quat_i, orientation->quat_f);
 3540              		.loc 1 122 0
 3541 02d6 0746     		mov	r7, r0
 3542              	.LBB63:
 3543              		.loc 1 124 0
 3544 02d8 07FB08F3 		mul	r3, r7, r8
 3545              	.LBE63:
 122:math/pprz_orientation_conversion.c ****     QUAT_BFP_OF_REAL(orientation->quat_i, orientation->quat_f);
 3546              		.loc 1 122 0
 3547 02dc 2061     		str	r0, [r4, #16]
 3548              	.LBB64:
 3549              		.loc 1 124 0
 3550 02de 08FB08F0 		mul	r0, r8, r8
 3551 02e2 CA13     		asrs	r2, r1, #15
 3552              	.LBE64:
 123:math/pprz_orientation_conversion.c ****     SetBit(orientation->status, ORREP_QUAT_I);
 3553              		.loc 1 123 0
 3554 02e4 45F00105 		orr	r5, r5, #1
 3555 02e8 2570     		strb	r5, [r4, #0]
 3556              	.LVL703:
 3557              	.LBB65:
 3558              		.loc 1 124 0
 3559 02ea C513     		asrs	r5, r0, #15
 3560              	.LVL704:
 3561 02ec 02EBE330 		add	r0, r2, r3, asr #15
 3562 02f0 40F31000 		sbfx	r0, r0, #0, #17
 3563 02f4 FFF7FEFF 		bl	__aeabi_i2f
 3564              	.LVL705:
 3565 02f8 4FF06251 		mov	r1, #947912704
 3566 02fc FFF7FEFF 		bl	__aeabi_fmul
 3567              	.LVL706:
 3568 0300 06FB06F3 		mul	r3, r6, r6
 3569 0304 05EBE331 		add	r1, r5, r3, asr #15
 3570 0308 41F31002 		sbfx	r2, r1, #0, #17
 3571 030c 8246     		mov	sl, r0
 3572 030e C2F58040 		rsb	r0, r2, #16384
 3573 0312 FFF7FEFF 		bl	__aeabi_i2f
 3574              	.LVL707:
 3575 0316 4FF06251 		mov	r1, #947912704
 3576 031a FFF7FEFF 		bl	__aeabi_fmul
 3577              	.LVL708:
 3578 031e 0146     		mov	r1, r0
 3579 0320 5046     		mov	r0, sl
 3580 0322 FFF7FEFF 		bl	atan2f
 3581              	.LVL709:
 3582 0326 8346     		mov	fp, r0
 3583              	.LVL710:
 3584 0328 08FB09F0 		mul	r0, r8, r9
 3585              	.LVL711:
 3586 032c 07FB06F3 		mul	r3, r7, r6
 3587 0330 C113     		asrs	r1, r0, #15
 3588              	.LVL712:
 3589 0332 C1EBE332 		rsb	r2, r1, r3, asr #15
 3590 0336 42F31000 		sbfx	r0, r2, #0, #17
 3591 033a FFF7FEFF 		bl	__aeabi_i2f
 3592              	.LVL713:
 3593 033e 4FF06251 		mov	r1, #947912704
 3594 0342 FFF7FEFF 		bl	__aeabi_fmul
 3595              	.LVL714:
 3596 0346 FFF7FEFF 		bl	asinf
 3597              	.LVL715:
 3598 034a 07FB09FC 		mul	ip, r7, r9
 3599 034e 08FB06F6 		mul	r6, r8, r6
 3600              	.LVL716:
 3601 0352 4FEAEC39 		asr	r9, ip, #15
 3602              	.LVL717:
 3603 0356 09EBE633 		add	r3, r9, r6, asr #15
 3604 035a 8246     		mov	sl, r0
 3605              	.LVL718:
 3606 035c 43F31000 		sbfx	r0, r3, #0, #17
 3607              	.LVL719:
 3608 0360 FFF7FEFF 		bl	__aeabi_i2f
 3609              	.LVL720:
 3610 0364 4FF06251 		mov	r1, #947912704
 3611 0368 FFF7FEFF 		bl	__aeabi_fmul
 3612              	.LVL721:
 3613 036c 7F43     		muls	r7, r7, r7
 3614              	.LVL722:
 3615 036e 05EBE735 		add	r5, r5, r7, asr #15
 3616              	.LVL723:
 3617 0372 0646     		mov	r6, r0
 3618 0374 45F31000 		sbfx	r0, r5, #0, #17
 3619              	.LVL724:
 3620              	.L367:
 3621 0378 C0F58040 		rsb	r0, r0, #16384
 3622 037c FFF7FEFF 		bl	__aeabi_i2f
 3623              	.LVL725:
 3624 0380 4FF06251 		mov	r1, #947912704
 3625 0384 FFF7FEFF 		bl	__aeabi_fmul
 3626              	.LVL726:
 3627 0388 0146     		mov	r1, r0
 3628 038a 3046     		mov	r0, r6
 3629 038c FFF7FEFF 		bl	atan2f
 3630              	.LVL727:
 3631 0390 4FF08B41 		mov	r1, #1166016512
 3632 0394 0546     		mov	r5, r0
 3633              	.LVL728:
 3634 0396 5846     		mov	r0, fp
 3635              	.LVL729:
 3636 0398 FFF7FEFF 		bl	__aeabi_fmul
 3637              	.LVL730:
 3638 039c FFF7FEFF 		bl	__aeabi_f2iz
 3639              	.LVL731:
 3640 03a0 6061     		str	r0, [r4, #20]
 3641 03a2 0AF10040 		add	r0, sl, #-2147483648
 3642              	.LVL732:
 3643              	.L366:
 3644 03a6 4FF08B41 		mov	r1, #1166016512
 3645 03aa FFF7FEFF 		bl	__aeabi_fmul
 3646              	.LVL733:
 3647 03ae FFF7FEFF 		bl	__aeabi_f2iz
 3648              	.LVL734:
 3649 03b2 A061     		str	r0, [r4, #24]
 3650 03b4 2846     		mov	r0, r5
 3651              	.L365:
 3652 03b6 4FF08B41 		mov	r1, #1166016512
 3653 03ba FFF7FEFF 		bl	__aeabi_fmul
 3654              	.LVL735:
 3655 03be FFF7FEFF 		bl	__aeabi_f2iz
 3656              	.LVL736:
 3657 03c2 E061     		str	r0, [r4, #28]
 3658              	.L358:
 3659              	.LBE65:
 125:math/pprz_orientation_conversion.c ****   }
 126:math/pprz_orientation_conversion.c ****   /* set bit to indicate this representation is computed */
 127:math/pprz_orientation_conversion.c ****   SetBit(orientation->status, ORREP_EULER_I);
 3660              		.loc 1 127 0
 3661 03c4 2278     		ldrb	r2, [r4, #0]	@ zero_extendqisi2
 3662 03c6 42F00203 		orr	r3, r2, #2
 3663 03ca 2370     		strb	r3, [r4, #0]
 3664              	.L355:
 3665 03cc BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 3666              		.cfi_endproc
 3667              	.LFE17:
 3669              		.global	__aeabi_fadd
 3670              		.global	__aeabi_fcmpgt
 3671              		.global	__aeabi_fsub
 3672              		.global	__aeabi_fdiv
 3673              		.section	.text.orientationCalcQuat_f,"ax",%progbits
 3674              		.align	1
 3675              		.global	orientationCalcQuat_f
 3676              		.thumb
 3677              		.thumb_func
 3679              	orientationCalcQuat_f:
 3680              	.LFB18:
 128:math/pprz_orientation_conversion.c **** }
 129:math/pprz_orientation_conversion.c **** 
 130:math/pprz_orientation_conversion.c **** void orientationCalcQuat_f(struct OrientationReps* orientation) {
 3681              		.loc 1 130 0
 3682              		.cfi_startproc
 3683              		@ args = 0, pretend = 0, frame = 8
 3684              		@ frame_needed = 0, uses_anonymous_args = 0
 3685              	.LVL737:
 3686 0000 2DE9F74F 		push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 3687              	.LCFI3:
 3688              		.cfi_def_cfa_offset 48
 3689              		.cfi_offset 0, -48
 3690              		.cfi_offset 1, -44
 3691              		.cfi_offset 2, -40
 3692              		.cfi_offset 4, -36
 3693              		.cfi_offset 5, -32
 3694              		.cfi_offset 6, -28
 3695              		.cfi_offset 7, -24
 3696              		.cfi_offset 8, -20
 3697              		.cfi_offset 9, -16
 3698              		.cfi_offset 10, -12
 3699              		.cfi_offset 11, -8
 3700              		.cfi_offset 14, -4
 131:math/pprz_orientation_conversion.c ****   if (bit_is_set(orientation->status, ORREP_QUAT_F))
 3701              		.loc 1 131 0
 3702 0004 0578     		ldrb	r5, [r0, #0]	@ zero_extendqisi2
 130:math/pprz_orientation_conversion.c **** void orientationCalcQuat_f(struct OrientationReps* orientation) {
 3703              		.loc 1 130 0
 3704 0006 0446     		mov	r4, r0
 3705              		.loc 1 131 0
 3706 0008 2807     		lsls	r0, r5, #28
 3707              	.LVL738:
 3708 000a 00F12682 		bmi	.L368
 132:math/pprz_orientation_conversion.c ****     return;
 133:math/pprz_orientation_conversion.c **** 
 134:math/pprz_orientation_conversion.c ****   if (bit_is_set(orientation->status, ORREP_QUAT_I)) {
 3709              		.loc 1 134 0
 3710 000e E907     		lsls	r1, r5, #31
 3711 0010 1DD5     		bpl	.L370
 135:math/pprz_orientation_conversion.c ****     QUAT_FLOAT_OF_BFP(orientation->quat_f, orientation->quat_i);
 3712              		.loc 1 135 0
 3713 0012 6068     		ldr	r0, [r4, #4]
 3714 0014 FFF7FEFF 		bl	__aeabi_i2f
 3715              	.LVL739:
 3716 0018 4FF06051 		mov	r1, #939524096
 3717 001c FFF7FEFF 		bl	__aeabi_fmul
 3718              	.LVL740:
 3719 0020 6064     		str	r0, [r4, #68]	@ float
 3720 0022 A068     		ldr	r0, [r4, #8]
 3721 0024 FFF7FEFF 		bl	__aeabi_i2f
 3722              	.LVL741:
 3723 0028 4FF06051 		mov	r1, #939524096
 3724 002c FFF7FEFF 		bl	__aeabi_fmul
 3725              	.LVL742:
 3726 0030 A064     		str	r0, [r4, #72]	@ float
 3727 0032 E068     		ldr	r0, [r4, #12]
 3728 0034 FFF7FEFF 		bl	__aeabi_i2f
 3729              	.LVL743:
 3730 0038 4FF06051 		mov	r1, #939524096
 3731 003c FFF7FEFF 		bl	__aeabi_fmul
 3732              	.LVL744:
 3733 0040 E064     		str	r0, [r4, #76]	@ float
 3734 0042 2069     		ldr	r0, [r4, #16]
 3735 0044 FFF7FEFF 		bl	__aeabi_i2f
 3736              	.LVL745:
 3737 0048 4FF06051 		mov	r1, #939524096
 3738 004c 62E1     		b	.L409
 3739              	.L370:
 136:math/pprz_orientation_conversion.c ****   }
 137:math/pprz_orientation_conversion.c ****   else if (bit_is_set(orientation->status, ORREP_RMAT_F)) {
 3740              		.loc 1 137 0
 3741 004e AA06     		lsls	r2, r5, #26
 3742 0050 32D5     		bpl	.L372
 3743              	.LBB66:
 138:math/pprz_orientation_conversion.c ****     FLOAT_QUAT_OF_RMAT(orientation->quat_f, orientation->rmat_f);
 3744              		.loc 1 138 0
 3745 0052 266E     		ldr	r6, [r4, #96]	@ float
 3746 0054 256F     		ldr	r5, [r4, #112]	@ float
 3747 0056 D4F88070 		ldr	r7, [r4, #128]	@ float
 3748 005a 2946     		mov	r1, r5
 3749 005c 3046     		mov	r0, r6
 3750 005e FFF7FEFF 		bl	__aeabi_fadd
 3751              	.LVL746:
 3752 0062 3946     		mov	r1, r7
 3753 0064 FFF7FEFF 		bl	__aeabi_fadd
 3754              	.LVL747:
 3755 0068 0021     		movs	r1, #0
 3756 006a 8046     		mov	r8, r0
 3757              	.LVL748:
 3758 006c FFF7FEFF 		bl	__aeabi_fcmpgt
 3759              	.LVL749:
 3760 0070 08B1     		cbz	r0, .L400
 3761              	.LBB67:
 3762              		.loc 1 138 0 is_stmt 0 discriminator 1
 3763 0072 4046     		mov	r0, r8
 3764 0074 8FE0     		b	.L412
 3765              	.L400:
 3766              	.LBE67:
 3767              		.loc 1 138 0 discriminator 2
 3768 0076 3046     		mov	r0, r6
 3769 0078 2946     		mov	r1, r5
 3770 007a FFF7FEFF 		bl	__aeabi_fcmpgt
 3771              	.LVL750:
 3772 007e 50B1     		cbz	r0, .L375
 3773              		.loc 1 138 0 discriminator 3
 3774 0080 3046     		mov	r0, r6
 3775 0082 3946     		mov	r1, r7
 3776 0084 FFF7FEFF 		bl	__aeabi_fcmpgt
 3777              	.LVL751:
 3778 0088 28B1     		cbz	r0, .L375
 3779              	.LBB68:
 3780              		.loc 1 138 0 discriminator 5
 3781 008a 2946     		mov	r1, r5
 3782 008c 3046     		mov	r0, r6
 3783 008e FFF7FEFF 		bl	__aeabi_fsub
 3784              	.LVL752:
 3785 0092 3946     		mov	r1, r7
 3786 0094 B5E0     		b	.L411
 3787              	.L375:
 3788              	.LBE68:
 3789              		.loc 1 138 0 discriminator 4
 3790 0096 2846     		mov	r0, r5
 3791 0098 3946     		mov	r1, r7
 3792 009a FFF7FEFF 		bl	__aeabi_fcmpgt
 3793              	.LVL753:
 3794 009e 28B1     		cbz	r0, .L401
 3795              	.LBB69:
 3796              		.loc 1 138 0 discriminator 6
 3797 00a0 3146     		mov	r1, r6
 3798 00a2 2846     		mov	r0, r5
 3799 00a4 FFF7FEFF 		bl	__aeabi_fsub
 3800              	.LVL754:
 3801 00a8 3946     		mov	r1, r7
 3802 00aa DBE0     		b	.L410
 3803              	.L401:
 3804              	.LBE69:
 3805              	.LBB70:
 3806              		.loc 1 138 0 discriminator 7
 3807 00ac 3146     		mov	r1, r6
 3808 00ae 3846     		mov	r0, r7
 3809 00b0 FFF7FEFF 		bl	__aeabi_fsub
 3810              	.LVL755:
 3811 00b4 2946     		mov	r1, r5
 3812 00b6 05E1     		b	.L408
 3813              	.LVL756:
 3814              	.L372:
 3815              	.LBE70:
 3816              	.LBE66:
 139:math/pprz_orientation_conversion.c ****   }
 140:math/pprz_orientation_conversion.c ****   else if (bit_is_set(orientation->status, ORREP_EULER_F)) {
 3817              		.loc 1 140 0 is_stmt 1
 3818 00b8 EB06     		lsls	r3, r5, #27
 3819 00ba 0DD5     		bpl	.L380
 3820              	.LBB71:
 141:math/pprz_orientation_conversion.c ****     FLOAT_QUAT_OF_EULERS(orientation->quat_f, orientation->eulers_f);
 3821              		.loc 1 141 0
 3822 00bc 4FF07C51 		mov	r1, #1056964608
 3823 00c0 606D     		ldr	r0, [r4, #84]	@ float
 3824 00c2 FFF7FEFF 		bl	__aeabi_fmul
 3825              	.LVL757:
 3826 00c6 4FF07C51 		mov	r1, #1056964608
 3827 00ca 0746     		mov	r7, r0
 3828              	.LVL758:
 3829 00cc A06D     		ldr	r0, [r4, #88]	@ float
 3830              	.LVL759:
 3831 00ce FFF7FEFF 		bl	__aeabi_fmul
 3832              	.LVL760:
 3833 00d2 0646     		mov	r6, r0
 3834              	.LVL761:
 3835 00d4 E06D     		ldr	r0, [r4, #92]	@ float
 3836              	.LVL762:
 3837 00d6 4EE1     		b	.L405
 3838              	.LVL763:
 3839              	.L380:
 3840              	.LBE71:
 142:math/pprz_orientation_conversion.c ****   }
 143:math/pprz_orientation_conversion.c ****   else if (bit_is_set(orientation->status, ORREP_RMAT_I)) {
 3841              		.loc 1 143 0
 3842 00d8 6807     		lsls	r0, r5, #29
 3843 00da 40F11E81 		bpl	.L381
 144:math/pprz_orientation_conversion.c ****     RMAT_FLOAT_OF_BFP(orientation->rmat_f, orientation->rmat_i);
 3844              		.loc 1 144 0
 3845 00de 206A     		ldr	r0, [r4, #32]
 3846 00e0 FFF7FEFF 		bl	__aeabi_i2f
 3847              	.LVL764:
 3848 00e4 4FF06251 		mov	r1, #947912704
 3849 00e8 FFF7FEFF 		bl	__aeabi_fmul
 3850              	.LVL765:
 3851 00ec 0746     		mov	r7, r0
 3852 00ee 2066     		str	r0, [r4, #96]	@ float
 3853 00f0 606A     		ldr	r0, [r4, #36]
 3854 00f2 FFF7FEFF 		bl	__aeabi_i2f
 3855              	.LVL766:
 3856 00f6 4FF06251 		mov	r1, #947912704
 3857 00fa FFF7FEFF 		bl	__aeabi_fmul
 3858              	.LVL767:
 3859 00fe 6066     		str	r0, [r4, #100]	@ float
 3860 0100 A06A     		ldr	r0, [r4, #40]
 3861 0102 FFF7FEFF 		bl	__aeabi_i2f
 3862              	.LVL768:
 3863 0106 4FF06251 		mov	r1, #947912704
 3864 010a FFF7FEFF 		bl	__aeabi_fmul
 3865              	.LVL769:
 3866 010e A066     		str	r0, [r4, #104]	@ float
 3867 0110 E06A     		ldr	r0, [r4, #44]
 3868 0112 FFF7FEFF 		bl	__aeabi_i2f
 3869              	.LVL770:
 3870 0116 4FF06251 		mov	r1, #947912704
 3871 011a FFF7FEFF 		bl	__aeabi_fmul
 3872              	.LVL771:
 3873 011e E066     		str	r0, [r4, #108]	@ float
 3874 0120 206B     		ldr	r0, [r4, #48]
 3875 0122 FFF7FEFF 		bl	__aeabi_i2f
 3876              	.LVL772:
 3877 0126 4FF06251 		mov	r1, #947912704
 3878 012a FFF7FEFF 		bl	__aeabi_fmul
 3879              	.LVL773:
 3880 012e 0646     		mov	r6, r0
 3881 0130 2067     		str	r0, [r4, #112]	@ float
 3882 0132 606B     		ldr	r0, [r4, #52]
 3883 0134 FFF7FEFF 		bl	__aeabi_i2f
 3884              	.LVL774:
 3885 0138 4FF06251 		mov	r1, #947912704
 3886 013c FFF7FEFF 		bl	__aeabi_fmul
 3887              	.LVL775:
 3888 0140 6067     		str	r0, [r4, #116]	@ float
 3889 0142 A06B     		ldr	r0, [r4, #56]
 3890 0144 FFF7FEFF 		bl	__aeabi_i2f
 3891              	.LVL776:
 3892 0148 4FF06251 		mov	r1, #947912704
 3893 014c FFF7FEFF 		bl	__aeabi_fmul
 3894              	.LVL777:
 3895 0150 A067     		str	r0, [r4, #120]	@ float
 3896 0152 E06B     		ldr	r0, [r4, #60]
 3897 0154 FFF7FEFF 		bl	__aeabi_i2f
 3898              	.LVL778:
 3899 0158 4FF06251 		mov	r1, #947912704
 3900 015c FFF7FEFF 		bl	__aeabi_fmul
 3901              	.LVL779:
 3902 0160 E067     		str	r0, [r4, #124]	@ float
 3903 0162 206C     		ldr	r0, [r4, #64]
 3904 0164 FFF7FEFF 		bl	__aeabi_i2f
 3905              	.LVL780:
 3906 0168 4FF06251 		mov	r1, #947912704
 3907 016c FFF7FEFF 		bl	__aeabi_fmul
 3908              	.LVL781:
 3909 0170 8046     		mov	r8, r0
 3910 0172 C4F88000 		str	r0, [r4, #128]	@ float
 145:math/pprz_orientation_conversion.c ****     SetBit(orientation->status, ORREP_RMAT_F);
 3911              		.loc 1 145 0
 3912 0176 45F02000 		orr	r0, r5, #32
 3913 017a 2070     		strb	r0, [r4, #0]
 3914              	.LBB72:
 146:math/pprz_orientation_conversion.c ****     FLOAT_QUAT_OF_RMAT(orientation->quat_f, orientation->rmat_f);
 3915              		.loc 1 146 0
 3916 017c 3146     		mov	r1, r6
 3917 017e 3846     		mov	r0, r7
 3918 0180 FFF7FEFF 		bl	__aeabi_fadd
 3919              	.LVL782:
 3920 0184 4146     		mov	r1, r8
 3921 0186 FFF7FEFF 		bl	__aeabi_fadd
 3922              	.LVL783:
 3923 018a 0021     		movs	r1, #0
 3924 018c 0546     		mov	r5, r0
 3925              	.LVL784:
 3926 018e FFF7FEFF 		bl	__aeabi_fcmpgt
 3927              	.LVL785:
 3928 0192 30B3     		cbz	r0, .L402
 3929              	.LBB73:
 3930              		.loc 1 146 0 is_stmt 0 discriminator 1
 3931 0194 2846     		mov	r0, r5
 3932              	.LVL786:
 3933              	.L412:
 3934 0196 4FF07E51 		mov	r1, #1065353216
 3935 019a FFF7FEFF 		bl	__aeabi_fadd
 3936              	.LVL787:
 3937 019e FFF7FEFF 		bl	sqrtf
 3938              	.LVL788:
 3939 01a2 0146     		mov	r1, r0
 3940 01a4 0646     		mov	r6, r0
 3941              	.LVL789:
 3942 01a6 FFF7FEFF 		bl	__aeabi_fadd
 3943              	.LVL790:
 3944 01aa 4FF07C51 		mov	r1, #1056964608
 3945 01ae 0546     		mov	r5, r0
 3946              	.LVL791:
 3947 01b0 3046     		mov	r0, r6
 3948              	.LVL792:
 3949 01b2 FFF7FEFF 		bl	__aeabi_fmul
 3950              	.LVL793:
 3951 01b6 E16F     		ldr	r1, [r4, #124]	@ float
 3952 01b8 6064     		str	r0, [r4, #68]	@ float
 3953 01ba 606F     		ldr	r0, [r4, #116]	@ float
 3954 01bc FFF7FEFF 		bl	__aeabi_fsub
 3955              	.LVL794:
 3956 01c0 2946     		mov	r1, r5
 3957 01c2 FFF7FEFF 		bl	__aeabi_fdiv
 3958              	.LVL795:
 3959 01c6 A16E     		ldr	r1, [r4, #104]	@ float
 3960 01c8 A064     		str	r0, [r4, #72]	@ float
 3961 01ca A06F     		ldr	r0, [r4, #120]	@ float
 3962 01cc FFF7FEFF 		bl	__aeabi_fsub
 3963              	.LVL796:
 3964 01d0 2946     		mov	r1, r5
 3965 01d2 FFF7FEFF 		bl	__aeabi_fdiv
 3966              	.LVL797:
 3967 01d6 E16E     		ldr	r1, [r4, #108]	@ float
 3968 01d8 E064     		str	r0, [r4, #76]	@ float
 3969 01da 606E     		ldr	r0, [r4, #100]	@ float
 3970 01dc FFF7FEFF 		bl	__aeabi_fsub
 3971              	.LVL798:
 3972 01e0 67E0     		b	.L407
 3973              	.LVL799:
 3974              	.L402:
 3975              	.LBE73:
 3976              		.loc 1 146 0 discriminator 2
 3977 01e2 3846     		mov	r0, r7
 3978 01e4 3146     		mov	r1, r6
 3979 01e6 FFF7FEFF 		bl	__aeabi_fcmpgt
 3980              	.LVL800:
 3981 01ea 0028     		cmp	r0, #0
 3982 01ec 2FD0     		beq	.L384
 3983              		.loc 1 146 0 discriminator 3
 3984 01ee 3846     		mov	r0, r7
 3985 01f0 4146     		mov	r1, r8
 3986 01f2 FFF7FEFF 		bl	__aeabi_fcmpgt
 3987              	.LVL801:
 3988 01f6 50B3     		cbz	r0, .L384
 3989              	.LBB74:
 3990              		.loc 1 146 0 discriminator 5
 3991 01f8 3146     		mov	r1, r6
 3992 01fa 3846     		mov	r0, r7
 3993 01fc FFF7FEFF 		bl	__aeabi_fsub
 3994              	.LVL802:
 3995 0200 4146     		mov	r1, r8
 3996              	.LVL803:
 3997              	.L411:
 3998 0202 FFF7FEFF 		bl	__aeabi_fsub
 3999              	.LVL804:
 4000 0206 4FF07E51 		mov	r1, #1065353216
 4001 020a FFF7FEFF 		bl	__aeabi_fadd
 4002              	.LVL805:
 4003 020e FFF7FEFF 		bl	sqrtf
 4004              	.LVL806:
 4005 0212 0146     		mov	r1, r0
 4006 0214 0646     		mov	r6, r0
 4007              	.LVL807:
 4008 0216 FFF7FEFF 		bl	__aeabi_fadd
 4009              	.LVL808:
 4010 021a E16F     		ldr	r1, [r4, #124]	@ float
 4011 021c 0546     		mov	r5, r0
 4012              	.LVL809:
 4013 021e 606F     		ldr	r0, [r4, #116]	@ float
 4014              	.LVL810:
 4015 0220 FFF7FEFF 		bl	__aeabi_fsub
 4016              	.LVL811:
 4017 0224 2946     		mov	r1, r5
 4018 0226 FFF7FEFF 		bl	__aeabi_fdiv
 4019              	.LVL812:
 4020 022a 4FF07C51 		mov	r1, #1056964608
 4021 022e 6064     		str	r0, [r4, #68]	@ float
 4022 0230 3046     		mov	r0, r6
 4023 0232 FFF7FEFF 		bl	__aeabi_fmul
 4024              	.LVL813:
 4025 0236 E16E     		ldr	r1, [r4, #108]	@ float
 4026 0238 A064     		str	r0, [r4, #72]	@ float
 4027 023a 606E     		ldr	r0, [r4, #100]	@ float
 4028 023c FFF7FEFF 		bl	__aeabi_fadd
 4029              	.LVL814:
 4030 0240 2946     		mov	r1, r5
 4031 0242 FFF7FEFF 		bl	__aeabi_fdiv
 4032              	.LVL815:
 4033 0246 A16E     		ldr	r1, [r4, #104]	@ float
 4034 0248 E064     		str	r0, [r4, #76]	@ float
 4035 024a A06F     		ldr	r0, [r4, #120]	@ float
 4036 024c 2FE0     		b	.L406
 4037              	.LVL816:
 4038              	.L384:
 4039              	.LBE74:
 4040              		.loc 1 146 0 discriminator 4
 4041 024e 3046     		mov	r0, r6
 4042 0250 4146     		mov	r1, r8
 4043 0252 FFF7FEFF 		bl	__aeabi_fcmpgt
 4044              	.LVL817:
 4045 0256 0028     		cmp	r0, #0
 4046 0258 2FD0     		beq	.L403
 4047              	.LBB75:
 4048              		.loc 1 146 0 discriminator 6
 4049 025a 3946     		mov	r1, r7
 4050 025c 3046     		mov	r0, r6
 4051 025e FFF7FEFF 		bl	__aeabi_fsub
 4052              	.LVL818:
 4053 0262 4146     		mov	r1, r8
 4054              	.LVL819:
 4055              	.L410:
 4056 0264 FFF7FEFF 		bl	__aeabi_fsub
 4057              	.LVL820:
 4058 0268 4FF07E51 		mov	r1, #1065353216
 4059 026c FFF7FEFF 		bl	__aeabi_fadd
 4060              	.LVL821:
 4061 0270 FFF7FEFF 		bl	sqrtf
 4062              	.LVL822:
 4063 0274 0146     		mov	r1, r0
 4064 0276 0646     		mov	r6, r0
 4065              	.LVL823:
 4066 0278 FFF7FEFF 		bl	__aeabi_fadd
 4067              	.LVL824:
 4068 027c A16E     		ldr	r1, [r4, #104]	@ float
 4069 027e 0546     		mov	r5, r0
 4070              	.LVL825:
 4071 0280 A06F     		ldr	r0, [r4, #120]	@ float
 4072              	.LVL826:
 4073 0282 FFF7FEFF 		bl	__aeabi_fsub
 4074              	.LVL827:
 4075 0286 2946     		mov	r1, r5
 4076 0288 FFF7FEFF 		bl	__aeabi_fdiv
 4077              	.LVL828:
 4078 028c E16E     		ldr	r1, [r4, #108]	@ float
 4079 028e 6064     		str	r0, [r4, #68]	@ float
 4080 0290 606E     		ldr	r0, [r4, #100]	@ float
 4081 0292 FFF7FEFF 		bl	__aeabi_fadd
 4082              	.LVL829:
 4083 0296 2946     		mov	r1, r5
 4084 0298 FFF7FEFF 		bl	__aeabi_fdiv
 4085              	.LVL830:
 4086 029c 4FF07C51 		mov	r1, #1056964608
 4087 02a0 A064     		str	r0, [r4, #72]	@ float
 4088 02a2 3046     		mov	r0, r6
 4089 02a4 FFF7FEFF 		bl	__aeabi_fmul
 4090              	.LVL831:
 4091 02a8 E16F     		ldr	r1, [r4, #124]	@ float
 4092 02aa E064     		str	r0, [r4, #76]	@ float
 4093 02ac 606F     		ldr	r0, [r4, #116]	@ float
 4094              	.LVL832:
 4095              	.L406:
 4096 02ae FFF7FEFF 		bl	__aeabi_fadd
 4097              	.LVL833:
 4098              	.L407:
 4099 02b2 2946     		mov	r1, r5
 4100 02b4 FFF7FEFF 		bl	__aeabi_fdiv
 4101              	.LVL834:
 4102 02b8 CAE0     		b	.L404
 4103              	.LVL835:
 4104              	.L403:
 4105              	.LBE75:
 4106              	.LBB76:
 4107              		.loc 1 146 0 discriminator 7
 4108 02ba 3946     		mov	r1, r7
 4109 02bc 4046     		mov	r0, r8
 4110 02be FFF7FEFF 		bl	__aeabi_fsub
 4111              	.LVL836:
 4112 02c2 3146     		mov	r1, r6
 4113              	.LVL837:
 4114              	.L408:
 4115 02c4 FFF7FEFF 		bl	__aeabi_fsub
 4116              	.LVL838:
 4117 02c8 4FF07E51 		mov	r1, #1065353216
 4118 02cc FFF7FEFF 		bl	__aeabi_fadd
 4119              	.LVL839:
 4120 02d0 FFF7FEFF 		bl	sqrtf
 4121              	.LVL840:
 4122 02d4 0146     		mov	r1, r0
 4123 02d6 0646     		mov	r6, r0
 4124              	.LVL841:
 4125 02d8 FFF7FEFF 		bl	__aeabi_fadd
 4126              	.LVL842:
 4127 02dc E16E     		ldr	r1, [r4, #108]	@ float
 4128 02de 0546     		mov	r5, r0
 4129              	.LVL843:
 4130 02e0 606E     		ldr	r0, [r4, #100]	@ float
 4131              	.LVL844:
 4132 02e2 FFF7FEFF 		bl	__aeabi_fsub
 4133              	.LVL845:
 4134 02e6 2946     		mov	r1, r5
 4135 02e8 FFF7FEFF 		bl	__aeabi_fdiv
 4136              	.LVL846:
 4137 02ec A16E     		ldr	r1, [r4, #104]	@ float
 4138 02ee 6064     		str	r0, [r4, #68]	@ float
 4139 02f0 A06F     		ldr	r0, [r4, #120]	@ float
 4140 02f2 FFF7FEFF 		bl	__aeabi_fadd
 4141              	.LVL847:
 4142 02f6 2946     		mov	r1, r5
 4143 02f8 FFF7FEFF 		bl	__aeabi_fdiv
 4144              	.LVL848:
 4145 02fc E16F     		ldr	r1, [r4, #124]	@ float
 4146 02fe A064     		str	r0, [r4, #72]	@ float
 4147 0300 606F     		ldr	r0, [r4, #116]	@ float
 4148 0302 FFF7FEFF 		bl	__aeabi_fadd
 4149              	.LVL849:
 4150 0306 2946     		mov	r1, r5
 4151 0308 FFF7FEFF 		bl	__aeabi_fdiv
 4152              	.LVL850:
 4153 030c 4FF07C51 		mov	r1, #1056964608
 4154 0310 E064     		str	r0, [r4, #76]	@ float
 4155 0312 3046     		mov	r0, r6
 4156              	.LVL851:
 4157              	.L409:
 4158 0314 FFF7FEFF 		bl	__aeabi_fmul
 4159              	.LVL852:
 4160 0318 9AE0     		b	.L404
 4161              	.L381:
 4162              	.LBE76:
 4163              	.LBE72:
 147:math/pprz_orientation_conversion.c ****   }
 148:math/pprz_orientation_conversion.c ****   else if (bit_is_set(orientation->status, ORREP_EULER_I)) {
 4164              		.loc 1 148 0 is_stmt 1
 4165 031a A907     		lsls	r1, r5, #30
 4166 031c 40F19980 		bpl	.L371
 149:math/pprz_orientation_conversion.c ****     EULERS_FLOAT_OF_BFP(orientation->eulers_f, orientation->eulers_i);
 4167              		.loc 1 149 0
 4168 0320 6069     		ldr	r0, [r4, #20]
 4169 0322 FFF7FEFF 		bl	__aeabi_i2f
 4170              	.LVL853:
 4171 0326 4FF06651 		mov	r1, #964689920
 4172 032a FFF7FEFF 		bl	__aeabi_fmul
 4173              	.LVL854:
 4174 032e 0746     		mov	r7, r0
 4175 0330 6065     		str	r0, [r4, #84]	@ float
 4176 0332 A069     		ldr	r0, [r4, #24]
 4177 0334 FFF7FEFF 		bl	__aeabi_i2f
 4178              	.LVL855:
 4179 0338 4FF06651 		mov	r1, #964689920
 4180 033c FFF7FEFF 		bl	__aeabi_fmul
 4181              	.LVL856:
 4182 0340 0646     		mov	r6, r0
 4183 0342 A065     		str	r0, [r4, #88]	@ float
 4184 0344 E069     		ldr	r0, [r4, #28]
 4185 0346 FFF7FEFF 		bl	__aeabi_i2f
 4186              	.LVL857:
 4187 034a 4FF06651 		mov	r1, #964689920
 4188 034e FFF7FEFF 		bl	__aeabi_fmul
 4189              	.LVL858:
 150:math/pprz_orientation_conversion.c ****     SetBit(orientation->status, ORREP_EULER_F);
 4190              		.loc 1 150 0
 4191 0352 45F01005 		orr	r5, r5, #16
 149:math/pprz_orientation_conversion.c ****     EULERS_FLOAT_OF_BFP(orientation->eulers_f, orientation->eulers_i);
 4192              		.loc 1 149 0
 4193 0356 8046     		mov	r8, r0
 4194 0358 E065     		str	r0, [r4, #92]	@ float
 4195              	.LBB77:
 151:math/pprz_orientation_conversion.c ****     FLOAT_QUAT_OF_EULERS(orientation->quat_f, orientation->eulers_f);
 4196              		.loc 1 151 0
 4197 035a 4FF07C51 		mov	r1, #1056964608
 4198 035e 3846     		mov	r0, r7
 4199              	.LBE77:
 150:math/pprz_orientation_conversion.c ****     SetBit(orientation->status, ORREP_EULER_F);
 4200              		.loc 1 150 0
 4201 0360 2570     		strb	r5, [r4, #0]
 4202              	.LBB78:
 4203              		.loc 1 151 0
 4204 0362 FFF7FEFF 		bl	__aeabi_fmul
 4205              	.LVL859:
 4206 0366 4FF07C51 		mov	r1, #1056964608
 4207 036a 0746     		mov	r7, r0
 4208              	.LVL860:
 4209 036c 3046     		mov	r0, r6
 4210              	.LVL861:
 4211 036e FFF7FEFF 		bl	__aeabi_fmul
 4212              	.LVL862:
 4213 0372 0646     		mov	r6, r0
 4214              	.LVL863:
 4215 0374 4046     		mov	r0, r8
 4216              	.LVL864:
 4217              	.L405:
 4218 0376 4FF07C51 		mov	r1, #1056964608
 4219 037a FFF7FEFF 		bl	__aeabi_fmul
 4220              	.LVL865:
 4221 037e 0546     		mov	r5, r0
 4222              	.LVL866:
 4223 0380 3846     		mov	r0, r7
 4224              	.LVL867:
 4225 0382 FFF7FEFF 		bl	sinf
 4226              	.LVL868:
 4227 0386 8346     		mov	fp, r0
 4228              	.LVL869:
 4229 0388 3846     		mov	r0, r7
 4230              	.LVL870:
 4231 038a FFF7FEFF 		bl	cosf
 4232              	.LVL871:
 4233 038e 8046     		mov	r8, r0
 4234              	.LVL872:
 4235 0390 3046     		mov	r0, r6
 4236              	.LVL873:
 4237 0392 FFF7FEFF 		bl	sinf
 4238              	.LVL874:
 4239 0396 0746     		mov	r7, r0
 4240              	.LVL875:
 4241 0398 3046     		mov	r0, r6
 4242              	.LVL876:
 4243 039a FFF7FEFF 		bl	cosf
 4244              	.LVL877:
 4245 039e 0190     		str	r0, [sp, #4]	@ float
 4246              	.LVL878:
 4247 03a0 2846     		mov	r0, r5
 4248              	.LVL879:
 4249 03a2 FFF7FEFF 		bl	sinf
 4250              	.LVL880:
 4251 03a6 0646     		mov	r6, r0
 4252              	.LVL881:
 4253 03a8 2846     		mov	r0, r5
 4254              	.LVL882:
 4255 03aa FFF7FEFF 		bl	cosf
 4256              	.LVL883:
 4257 03ae 0199     		ldr	r1, [sp, #4]	@ float
 4258 03b0 0546     		mov	r5, r0
 4259              	.LVL884:
 4260 03b2 4046     		mov	r0, r8
 4261              	.LVL885:
 4262 03b4 FFF7FEFF 		bl	__aeabi_fmul
 4263              	.LVL886:
 4264 03b8 3946     		mov	r1, r7
 4265 03ba 8246     		mov	sl, r0
 4266 03bc 5846     		mov	r0, fp
 4267 03be FFF7FEFF 		bl	__aeabi_fmul
 4268              	.LVL887:
 4269 03c2 2946     		mov	r1, r5
 4270 03c4 8146     		mov	r9, r0
 4271 03c6 5046     		mov	r0, sl
 4272 03c8 FFF7FEFF 		bl	__aeabi_fmul
 4273              	.LVL888:
 4274 03cc 3146     		mov	r1, r6
 4275 03ce 0346     		mov	r3, r0
 4276 03d0 4846     		mov	r0, r9
 4277 03d2 0093     		str	r3, [sp, #0]
 4278 03d4 FFF7FEFF 		bl	__aeabi_fmul
 4279              	.LVL889:
 4280 03d8 009A     		ldr	r2, [sp, #0]
 4281 03da 0146     		mov	r1, r0
 4282 03dc 1046     		mov	r0, r2
 4283 03de FFF7FEFF 		bl	__aeabi_fadd
 4284              	.LVL890:
 4285 03e2 0199     		ldr	r1, [sp, #4]	@ float
 4286 03e4 6064     		str	r0, [r4, #68]	@ float
 4287 03e6 5846     		mov	r0, fp
 4288 03e8 FFF7FEFF 		bl	__aeabi_fmul
 4289              	.LVL891:
 4290 03ec 3946     		mov	r1, r7
 4291 03ee 8346     		mov	fp, r0
 4292              	.LVL892:
 4293 03f0 08F10040 		add	r0, r8, #-2147483648
 4294 03f4 FFF7FEFF 		bl	__aeabi_fmul
 4295              	.LVL893:
 4296 03f8 3146     		mov	r1, r6
 4297 03fa FFF7FEFF 		bl	__aeabi_fmul
 4298              	.LVL894:
 4299 03fe 2946     		mov	r1, r5
 4300 0400 0346     		mov	r3, r0
 4301 0402 5846     		mov	r0, fp
 4302 0404 0093     		str	r3, [sp, #0]
 4303 0406 FFF7FEFF 		bl	__aeabi_fmul
 4304              	.LVL895:
 4305 040a 0146     		mov	r1, r0
 4306 040c 0098     		ldr	r0, [sp, #0]
 4307 040e FFF7FEFF 		bl	__aeabi_fadd
 4308              	.LVL896:
 4309 0412 3946     		mov	r1, r7
 4310 0414 A064     		str	r0, [r4, #72]	@ float
 4311 0416 4046     		mov	r0, r8
 4312 0418 FFF7FEFF 		bl	__aeabi_fmul
 4313              	.LVL897:
 4314 041c 2946     		mov	r1, r5
 4315 041e FFF7FEFF 		bl	__aeabi_fmul
 4316              	.LVL898:
 4317 0422 3146     		mov	r1, r6
 4318 0424 0746     		mov	r7, r0
 4319              	.LVL899:
 4320 0426 5846     		mov	r0, fp
 4321 0428 FFF7FEFF 		bl	__aeabi_fmul
 4322              	.LVL900:
 4323 042c 0146     		mov	r1, r0
 4324 042e 3846     		mov	r0, r7
 4325 0430 FFF7FEFF 		bl	__aeabi_fadd
 4326              	.LVL901:
 4327 0434 3146     		mov	r1, r6
 4328 0436 E064     		str	r0, [r4, #76]	@ float
 4329 0438 5046     		mov	r0, sl
 4330 043a FFF7FEFF 		bl	__aeabi_fmul
 4331              	.LVL902:
 4332 043e 2946     		mov	r1, r5
 4333 0440 0646     		mov	r6, r0
 4334              	.LVL903:
 4335 0442 4846     		mov	r0, r9
 4336 0444 FFF7FEFF 		bl	__aeabi_fmul
 4337              	.LVL904:
 4338 0448 0146     		mov	r1, r0
 4339 044a 3046     		mov	r0, r6
 4340 044c FFF7FEFF 		bl	__aeabi_fsub
 4341              	.LVL905:
 4342              	.L404:
 4343 0450 2065     		str	r0, [r4, #80]	@ float
 4344              	.L371:
 4345              	.LBE78:
 152:math/pprz_orientation_conversion.c ****   }
 153:math/pprz_orientation_conversion.c ****   /* set bit to indicate this representation is computed */
 154:math/pprz_orientation_conversion.c ****   SetBit(orientation->status, ORREP_QUAT_F);
 4346              		.loc 1 154 0
 4347 0452 2178     		ldrb	r1, [r4, #0]	@ zero_extendqisi2
 4348 0454 41F00802 		orr	r2, r1, #8
 4349 0458 2270     		strb	r2, [r4, #0]
 4350              	.L368:
 155:math/pprz_orientation_conversion.c **** }
 4351              		.loc 1 155 0
 4352 045a BDE8FE8F 		pop	{r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 4353              		.cfi_endproc
 4354              	.LFE18:
 4356              		.global	__aeabi_f2d
 4357              		.global	__aeabi_dmul
 4358              		.global	__aeabi_d2f
 4359              		.section	.text.orientationCalcRMat_f,"ax",%progbits
 4360              		.align	1
 4361              		.global	orientationCalcRMat_f
 4362              		.thumb
 4363              		.thumb_func
 4365              	orientationCalcRMat_f:
 4366              	.LFB19:
 156:math/pprz_orientation_conversion.c **** 
 157:math/pprz_orientation_conversion.c **** void orientationCalcRMat_f(struct OrientationReps* orientation) {
 4367              		.loc 1 157 0
 4368              		.cfi_startproc
 4369              		@ args = 0, pretend = 0, frame = 16
 4370              		@ frame_needed = 0, uses_anonymous_args = 0
 4371              	.LVL906:
 4372 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 4373              	.LCFI4:
 4374              		.cfi_def_cfa_offset 36
 4375              		.cfi_offset 4, -36
 4376              		.cfi_offset 5, -32
 4377              		.cfi_offset 6, -28
 4378              		.cfi_offset 7, -24
 4379              		.cfi_offset 8, -20
 4380              		.cfi_offset 9, -16
 4381              		.cfi_offset 10, -12
 4382              		.cfi_offset 11, -8
 4383              		.cfi_offset 14, -4
 158:math/pprz_orientation_conversion.c ****   if (bit_is_set(orientation->status, ORREP_RMAT_F))
 4384              		.loc 1 158 0
 4385 0004 0578     		ldrb	r5, [r0, #0]	@ zero_extendqisi2
 157:math/pprz_orientation_conversion.c **** void orientationCalcRMat_f(struct OrientationReps* orientation) {
 4386              		.loc 1 157 0
 4387 0006 85B0     		sub	sp, sp, #20
 4388              	.LCFI5:
 4389              		.cfi_def_cfa_offset 56
 4390              		.loc 1 158 0
 4391 0008 AA06     		lsls	r2, r5, #26
 157:math/pprz_orientation_conversion.c **** void orientationCalcRMat_f(struct OrientationReps* orientation) {
 4392              		.loc 1 157 0
 4393 000a 0446     		mov	r4, r0
 4394              		.loc 1 158 0
 4395 000c 00F1DA81 		bmi	.L413
 159:math/pprz_orientation_conversion.c ****     return;
 160:math/pprz_orientation_conversion.c **** 
 161:math/pprz_orientation_conversion.c ****   if (bit_is_set(orientation->status, ORREP_RMAT_I)) {
 4396              		.loc 1 161 0
 4397 0010 6B07     		lsls	r3, r5, #29
 4398 0012 45D5     		bpl	.L415
 162:math/pprz_orientation_conversion.c ****     RMAT_FLOAT_OF_BFP(orientation->rmat_f, orientation->rmat_i);
 4399              		.loc 1 162 0
 4400 0014 006A     		ldr	r0, [r0, #32]
 4401              	.LVL907:
 4402 0016 FFF7FEFF 		bl	__aeabi_i2f
 4403              	.LVL908:
 4404 001a 4FF06251 		mov	r1, #947912704
 4405 001e FFF7FEFF 		bl	__aeabi_fmul
 4406              	.LVL909:
 4407 0022 2066     		str	r0, [r4, #96]	@ float
 4408 0024 606A     		ldr	r0, [r4, #36]
 4409 0026 FFF7FEFF 		bl	__aeabi_i2f
 4410              	.LVL910:
 4411 002a 4FF06251 		mov	r1, #947912704
 4412 002e FFF7FEFF 		bl	__aeabi_fmul
 4413              	.LVL911:
 4414 0032 6066     		str	r0, [r4, #100]	@ float
 4415 0034 A06A     		ldr	r0, [r4, #40]
 4416 0036 FFF7FEFF 		bl	__aeabi_i2f
 4417              	.LVL912:
 4418 003a 4FF06251 		mov	r1, #947912704
 4419 003e FFF7FEFF 		bl	__aeabi_fmul
 4420              	.LVL913:
 4421 0042 A066     		str	r0, [r4, #104]	@ float
 4422 0044 E06A     		ldr	r0, [r4, #44]
 4423 0046 FFF7FEFF 		bl	__aeabi_i2f
 4424              	.LVL914:
 4425 004a 4FF06251 		mov	r1, #947912704
 4426 004e FFF7FEFF 		bl	__aeabi_fmul
 4427              	.LVL915:
 4428 0052 E066     		str	r0, [r4, #108]	@ float
 4429 0054 206B     		ldr	r0, [r4, #48]
 4430 0056 FFF7FEFF 		bl	__aeabi_i2f
 4431              	.LVL916:
 4432 005a 4FF06251 		mov	r1, #947912704
 4433 005e FFF7FEFF 		bl	__aeabi_fmul
 4434              	.LVL917:
 4435 0062 2067     		str	r0, [r4, #112]	@ float
 4436 0064 606B     		ldr	r0, [r4, #52]
 4437 0066 FFF7FEFF 		bl	__aeabi_i2f
 4438              	.LVL918:
 4439 006a 4FF06251 		mov	r1, #947912704
 4440 006e FFF7FEFF 		bl	__aeabi_fmul
 4441              	.LVL919:
 4442 0072 6067     		str	r0, [r4, #116]	@ float
 4443 0074 A06B     		ldr	r0, [r4, #56]
 4444 0076 FFF7FEFF 		bl	__aeabi_i2f
 4445              	.LVL920:
 4446 007a 4FF06251 		mov	r1, #947912704
 4447 007e FFF7FEFF 		bl	__aeabi_fmul
 4448              	.LVL921:
 4449 0082 A067     		str	r0, [r4, #120]	@ float
 4450 0084 E06B     		ldr	r0, [r4, #60]
 4451 0086 FFF7FEFF 		bl	__aeabi_i2f
 4452              	.LVL922:
 4453 008a 4FF06251 		mov	r1, #947912704
 4454 008e FFF7FEFF 		bl	__aeabi_fmul
 4455              	.LVL923:
 4456 0092 E067     		str	r0, [r4, #124]	@ float
 4457 0094 206C     		ldr	r0, [r4, #64]
 4458 0096 FFF7FEFF 		bl	__aeabi_i2f
 4459              	.LVL924:
 4460 009a 4FF06251 		mov	r1, #947912704
 4461 009e 89E1     		b	.L423
 4462              	.LVL925:
 4463              	.L415:
 163:math/pprz_orientation_conversion.c ****   }
 164:math/pprz_orientation_conversion.c ****   else if (bit_is_set(orientation->status, ORREP_QUAT_F)) {
 4464              		.loc 1 164 0
 4465 00a0 2807     		lsls	r0, r5, #28
 4466              	.LVL926:
 4467 00a2 22D5     		bpl	.L417
 4468              	.LBB79:
 165:math/pprz_orientation_conversion.c ****     FLOAT_RMAT_OF_QUAT(orientation->rmat_f, orientation->quat_f);
 4469              		.loc 1 165 0
 4470 00a4 606C     		ldr	r0, [r4, #68]	@ float
 4471 00a6 FFF7FEFF 		bl	__aeabi_f2d
 4472              	.LVL927:
 4473 00aa 79A3     		adr	r3, .L427
 4474 00ac D3E90023 		ldrd	r2, [r3]
 4475 00b0 FFF7FEFF 		bl	__aeabi_dmul
 4476              	.LVL928:
 4477 00b4 FFF7FEFF 		bl	__aeabi_d2f
 4478              	.LVL929:
 4479 00b8 8346     		mov	fp, r0
 4480              	.LVL930:
 4481 00ba A06C     		ldr	r0, [r4, #72]	@ float
 4482              	.LVL931:
 4483 00bc FFF7FEFF 		bl	__aeabi_f2d
 4484              	.LVL932:
 4485 00c0 73A3     		adr	r3, .L427
 4486 00c2 D3E90023 		ldrd	r2, [r3]
 4487 00c6 FFF7FEFF 		bl	__aeabi_dmul
 4488              	.LVL933:
 4489 00ca FFF7FEFF 		bl	__aeabi_d2f
 4490              	.LVL934:
 4491 00ce 0746     		mov	r7, r0
 4492              	.LVL935:
 4493 00d0 E06C     		ldr	r0, [r4, #76]	@ float
 4494              	.LVL936:
 4495 00d2 FFF7FEFF 		bl	__aeabi_f2d
 4496              	.LVL937:
 4497 00d6 6EA3     		adr	r3, .L427
 4498 00d8 D3E90023 		ldrd	r2, [r3]
 4499 00dc FFF7FEFF 		bl	__aeabi_dmul
 4500              	.LVL938:
 4501 00e0 FFF7FEFF 		bl	__aeabi_d2f
 4502              	.LVL939:
 4503 00e4 0646     		mov	r6, r0
 4504              	.LVL940:
 4505 00e6 206D     		ldr	r0, [r4, #80]	@ float
 4506              	.LVL941:
 4507 00e8 66E0     		b	.L426
 4508              	.LVL942:
 4509              	.L417:
 4510              	.LBE79:
 166:math/pprz_orientation_conversion.c ****   }
 167:math/pprz_orientation_conversion.c ****   else if (bit_is_set(orientation->status, ORREP_EULER_F)) {
 4511              		.loc 1 167 0
 4512 00ea E906     		lsls	r1, r5, #27
 4513 00ec 18D5     		bpl	.L418
 4514              	.LBB80:
 168:math/pprz_orientation_conversion.c ****     FLOAT_RMAT_OF_EULERS(orientation->rmat_f, orientation->eulers_f);
 4515              		.loc 1 168 0
 4516 00ee 656D     		ldr	r5, [r4, #84]	@ float
 4517 00f0 2846     		mov	r0, r5
 4518 00f2 FFF7FEFF 		bl	sinf
 4519              	.LVL943:
 4520 00f6 8146     		mov	r9, r0
 4521              	.LVL944:
 4522 00f8 2846     		mov	r0, r5
 4523              	.LVL945:
 4524 00fa FFF7FEFF 		bl	cosf
 4525              	.LVL946:
 4526 00fe A76D     		ldr	r7, [r4, #88]	@ float
 4527 0100 8046     		mov	r8, r0
 4528              	.LVL947:
 4529 0102 3846     		mov	r0, r7
 4530              	.LVL948:
 4531 0104 FFF7FEFF 		bl	sinf
 4532              	.LVL949:
 4533 0108 8246     		mov	sl, r0
 4534              	.LVL950:
 4535 010a 3846     		mov	r0, r7
 4536              	.LVL951:
 4537 010c FFF7FEFF 		bl	cosf
 4538              	.LVL952:
 4539 0110 E56D     		ldr	r5, [r4, #92]	@ float
 4540 0112 0746     		mov	r7, r0
 4541              	.LVL953:
 4542 0114 2846     		mov	r0, r5
 4543              	.LVL954:
 4544 0116 FFF7FEFF 		bl	sinf
 4545              	.LVL955:
 4546 011a 0646     		mov	r6, r0
 4547              	.LVL956:
 4548 011c 2846     		mov	r0, r5
 4549              	.LVL957:
 4550 011e F1E0     		b	.L425
 4551              	.LVL958:
 4552              	.L418:
 4553              	.LBE80:
 169:math/pprz_orientation_conversion.c ****   }
 170:math/pprz_orientation_conversion.c ****   else if (bit_is_set(orientation->status, ORREP_QUAT_I)) {
 4554              		.loc 1 170 0
 4555 0120 EA07     		lsls	r2, r5, #31
 4556 0122 40F1B980 		bpl	.L419
 171:math/pprz_orientation_conversion.c ****     QUAT_FLOAT_OF_BFP(orientation->quat_f, orientation->quat_i);
 4557              		.loc 1 171 0
 4558 0126 6068     		ldr	r0, [r4, #4]
 4559 0128 FFF7FEFF 		bl	__aeabi_i2f
 4560              	.LVL959:
 4561 012c 4FF06051 		mov	r1, #939524096
 4562 0130 FFF7FEFF 		bl	__aeabi_fmul
 4563              	.LVL960:
 4564 0134 8146     		mov	r9, r0
 4565 0136 6064     		str	r0, [r4, #68]	@ float
 4566 0138 A068     		ldr	r0, [r4, #8]
 4567 013a FFF7FEFF 		bl	__aeabi_i2f
 4568              	.LVL961:
 4569 013e 4FF06051 		mov	r1, #939524096
 4570 0142 FFF7FEFF 		bl	__aeabi_fmul
 4571              	.LVL962:
 4572 0146 0746     		mov	r7, r0
 4573 0148 A064     		str	r0, [r4, #72]	@ float
 4574 014a E068     		ldr	r0, [r4, #12]
 4575 014c FFF7FEFF 		bl	__aeabi_i2f
 4576              	.LVL963:
 4577 0150 4FF06051 		mov	r1, #939524096
 4578 0154 FFF7FEFF 		bl	__aeabi_fmul
 4579              	.LVL964:
 4580 0158 0646     		mov	r6, r0
 4581 015a E064     		str	r0, [r4, #76]	@ float
 4582 015c 2069     		ldr	r0, [r4, #16]
 4583 015e FFF7FEFF 		bl	__aeabi_i2f
 4584              	.LVL965:
 4585 0162 4FF06051 		mov	r1, #939524096
 4586 0166 FFF7FEFF 		bl	__aeabi_fmul
 4587              	.LVL966:
 4588 016a 8046     		mov	r8, r0
 4589 016c 2065     		str	r0, [r4, #80]	@ float
 172:math/pprz_orientation_conversion.c ****     SetBit(orientation->status, ORREP_QUAT_F);
 4590              		.loc 1 172 0
 4591 016e 45F00800 		orr	r0, r5, #8
 4592 0172 2070     		strb	r0, [r4, #0]
 4593              	.LBB81:
 173:math/pprz_orientation_conversion.c ****     FLOAT_RMAT_OF_QUAT(orientation->rmat_f, orientation->quat_f);
 4594              		.loc 1 173 0
 4595 0174 4846     		mov	r0, r9
 4596 0176 FFF7FEFF 		bl	__aeabi_f2d
 4597              	.LVL967:
 4598 017a 45A3     		adr	r3, .L427
 4599 017c D3E90023 		ldrd	r2, [r3]
 4600 0180 FFF7FEFF 		bl	__aeabi_dmul
 4601              	.LVL968:
 4602 0184 FFF7FEFF 		bl	__aeabi_d2f
 4603              	.LVL969:
 4604 0188 8346     		mov	fp, r0
 4605              	.LVL970:
 4606 018a 3846     		mov	r0, r7
 4607              	.LVL971:
 4608 018c FFF7FEFF 		bl	__aeabi_f2d
 4609              	.LVL972:
 4610 0190 3FA3     		adr	r3, .L427
 4611 0192 D3E90023 		ldrd	r2, [r3]
 4612 0196 FFF7FEFF 		bl	__aeabi_dmul
 4613              	.LVL973:
 4614 019a FFF7FEFF 		bl	__aeabi_d2f
 4615              	.LVL974:
 4616 019e 0746     		mov	r7, r0
 4617              	.LVL975:
 4618 01a0 3046     		mov	r0, r6
 4619              	.LVL976:
 4620 01a2 FFF7FEFF 		bl	__aeabi_f2d
 4621              	.LVL977:
 4622 01a6 3AA3     		adr	r3, .L427
 4623 01a8 D3E90023 		ldrd	r2, [r3]
 4624 01ac FFF7FEFF 		bl	__aeabi_dmul
 4625              	.LVL978:
 4626 01b0 FFF7FEFF 		bl	__aeabi_d2f
 4627              	.LVL979:
 4628 01b4 0646     		mov	r6, r0
 4629              	.LVL980:
 4630 01b6 4046     		mov	r0, r8
 4631              	.LVL981:
 4632              	.L426:
 4633 01b8 FFF7FEFF 		bl	__aeabi_f2d
 4634              	.LVL982:
 4635 01bc 34A3     		adr	r3, .L427
 4636 01be D3E90023 		ldrd	r2, [r3]
 4637 01c2 FFF7FEFF 		bl	__aeabi_dmul
 4638              	.LVL983:
 4639 01c6 FFF7FEFF 		bl	__aeabi_d2f
 4640              	.LVL984:
 4641 01ca 5946     		mov	r1, fp
 4642 01cc 0546     		mov	r5, r0
 4643              	.LVL985:
 4644 01ce 5846     		mov	r0, fp
 4645              	.LVL986:
 4646 01d0 FFF7FEFF 		bl	__aeabi_fmul
 4647              	.LVL987:
 4648 01d4 4FF07E51 		mov	r1, #1065353216
 4649 01d8 FFF7FEFF 		bl	__aeabi_fsub
 4650              	.LVL988:
 4651 01dc 3946     		mov	r1, r7
 4652 01de 8046     		mov	r8, r0
 4653              	.LVL989:
 4654 01e0 5846     		mov	r0, fp
 4655              	.LVL990:
 4656 01e2 FFF7FEFF 		bl	__aeabi_fmul
 4657              	.LVL991:
 4658 01e6 3146     		mov	r1, r6
 4659 01e8 0190     		str	r0, [sp, #4]	@ float
 4660              	.LVL992:
 4661 01ea 5846     		mov	r0, fp
 4662              	.LVL993:
 4663 01ec FFF7FEFF 		bl	__aeabi_fmul
 4664              	.LVL994:
 4665 01f0 2946     		mov	r1, r5
 4666 01f2 0290     		str	r0, [sp, #8]	@ float
 4667              	.LVL995:
 4668 01f4 5846     		mov	r0, fp
 4669              	.LVL996:
 4670 01f6 FFF7FEFF 		bl	__aeabi_fmul
 4671              	.LVL997:
 4672 01fa 3146     		mov	r1, r6
 4673 01fc 0390     		str	r0, [sp, #12]	@ float
 4674              	.LVL998:
 4675 01fe 3846     		mov	r0, r7
 4676              	.LVL999:
 4677 0200 FFF7FEFF 		bl	__aeabi_fmul
 4678              	.LVL1000:
 4679 0204 2946     		mov	r1, r5
 4680 0206 8346     		mov	fp, r0
 4681              	.LVL1001:
 4682 0208 3846     		mov	r0, r7
 4683              	.LVL1002:
 4684 020a FFF7FEFF 		bl	__aeabi_fmul
 4685              	.LVL1003:
 4686 020e 2946     		mov	r1, r5
 4687 0210 8246     		mov	sl, r0
 4688              	.LVL1004:
 4689 0212 3046     		mov	r0, r6
 4690              	.LVL1005:
 4691 0214 FFF7FEFF 		bl	__aeabi_fmul
 4692              	.LVL1006:
 4693 0218 3946     		mov	r1, r7
 4694 021a 8146     		mov	r9, r0
 4695              	.LVL1007:
 4696 021c 3846     		mov	r0, r7
 4697              	.LVL1008:
 4698 021e FFF7FEFF 		bl	__aeabi_fmul
 4699              	.LVL1009:
 4700 0222 0146     		mov	r1, r0
 4701 0224 4046     		mov	r0, r8
 4702 0226 FFF7FEFF 		bl	__aeabi_fadd
 4703              	.LVL1010:
 4704 022a 0399     		ldr	r1, [sp, #12]	@ float
 4705 022c 2066     		str	r0, [r4, #96]	@ float
 4706 022e 5846     		mov	r0, fp
 4707 0230 FFF7FEFF 		bl	__aeabi_fadd
 4708              	.LVL1011:
 4709 0234 0299     		ldr	r1, [sp, #8]	@ float
 4710 0236 6066     		str	r0, [r4, #100]	@ float
 4711 0238 5046     		mov	r0, sl
 4712 023a FFF7FEFF 		bl	__aeabi_fsub
 4713              	.LVL1012:
 4714 023e 0399     		ldr	r1, [sp, #12]	@ float
 4715 0240 A066     		str	r0, [r4, #104]	@ float
 4716 0242 5846     		mov	r0, fp
 4717 0244 FFF7FEFF 		bl	__aeabi_fsub
 4718              	.LVL1013:
 4719 0248 3146     		mov	r1, r6
 4720 024a E066     		str	r0, [r4, #108]	@ float
 4721 024c 3046     		mov	r0, r6
 4722 024e FFF7FEFF 		bl	__aeabi_fmul
 4723              	.LVL1014:
 4724 0252 0146     		mov	r1, r0
 4725 0254 4046     		mov	r0, r8
 4726 0256 FFF7FEFF 		bl	__aeabi_fadd
 4727              	.LVL1015:
 4728 025a 0199     		ldr	r1, [sp, #4]	@ float
 4729 025c 2067     		str	r0, [r4, #112]	@ float
 4730 025e 4846     		mov	r0, r9
 4731 0260 FFF7FEFF 		bl	__aeabi_fadd
 4732              	.LVL1016:
 4733 0264 0299     		ldr	r1, [sp, #8]	@ float
 4734 0266 6067     		str	r0, [r4, #116]	@ float
 4735 0268 5046     		mov	r0, sl
 4736 026a FFF7FEFF 		bl	__aeabi_fadd
 4737              	.LVL1017:
 4738 026e 0199     		ldr	r1, [sp, #4]	@ float
 4739 0270 A067     		str	r0, [r4, #120]	@ float
 4740 0272 4846     		mov	r0, r9
 4741 0274 FFF7FEFF 		bl	__aeabi_fsub
 4742              	.LVL1018:
 4743 0278 2946     		mov	r1, r5
 4744 027a E067     		str	r0, [r4, #124]	@ float
 4745 027c 2846     		mov	r0, r5
 4746 027e FFF7FEFF 		bl	__aeabi_fmul
 4747              	.LVL1019:
 4748 0282 0146     		mov	r1, r0
 4749 0284 4046     		mov	r0, r8
 4750 0286 FFF7FEFF 		bl	__aeabi_fadd
 4751              	.LVL1020:
 4752 028a 95E0     		b	.L424
 4753              	.L428:
 4754 028c AFF30080 		.align	3
 4755              	.L427:
 4756 0290 CD3B7F66 		.word	1719614413
 4757 0294 9EA0F63F 		.word	1073127582
 4758              	.LVL1021:
 4759              	.L419:
 4760              	.LBE81:
 174:math/pprz_orientation_conversion.c ****   }
 175:math/pprz_orientation_conversion.c ****   else if (bit_is_set(orientation->status, ORREP_EULER_I)) {
 4761              		.loc 1 175 0
 4762 0298 AB07     		lsls	r3, r5, #30
 4763 029a 40F18F80 		bpl	.L416
 176:math/pprz_orientation_conversion.c ****     EULERS_FLOAT_OF_BFP(orientation->eulers_f, orientation->eulers_i);
 4764              		.loc 1 176 0
 4765 029e 6069     		ldr	r0, [r4, #20]
 4766 02a0 FFF7FEFF 		bl	__aeabi_i2f
 4767              	.LVL1022:
 4768 02a4 4FF06651 		mov	r1, #964689920
 4769 02a8 FFF7FEFF 		bl	__aeabi_fmul
 4770              	.LVL1023:
 4771 02ac 0746     		mov	r7, r0
 4772 02ae 6065     		str	r0, [r4, #84]	@ float
 4773 02b0 A069     		ldr	r0, [r4, #24]
 4774 02b2 FFF7FEFF 		bl	__aeabi_i2f
 4775              	.LVL1024:
 4776 02b6 4FF06651 		mov	r1, #964689920
 4777 02ba FFF7FEFF 		bl	__aeabi_fmul
 4778              	.LVL1025:
 4779 02be 0646     		mov	r6, r0
 4780 02c0 A065     		str	r0, [r4, #88]	@ float
 4781 02c2 E069     		ldr	r0, [r4, #28]
 4782 02c4 FFF7FEFF 		bl	__aeabi_i2f
 4783              	.LVL1026:
 4784 02c8 4FF06651 		mov	r1, #964689920
 4785 02cc FFF7FEFF 		bl	__aeabi_fmul
 4786              	.LVL1027:
 177:math/pprz_orientation_conversion.c ****     SetBit(orientation->status, ORREP_EULER_F);
 4787              		.loc 1 177 0
 4788 02d0 45F01005 		orr	r5, r5, #16
 176:math/pprz_orientation_conversion.c ****     EULERS_FLOAT_OF_BFP(orientation->eulers_f, orientation->eulers_i);
 4789              		.loc 1 176 0
 4790 02d4 8346     		mov	fp, r0
 4791 02d6 E065     		str	r0, [r4, #92]	@ float
 4792              		.loc 1 177 0
 4793 02d8 2570     		strb	r5, [r4, #0]
 4794              	.LBB82:
 178:math/pprz_orientation_conversion.c ****     FLOAT_RMAT_OF_EULERS(orientation->rmat_f, orientation->eulers_f);
 4795              		.loc 1 178 0
 4796 02da 3846     		mov	r0, r7
 4797 02dc FFF7FEFF 		bl	sinf
 4798              	.LVL1028:
 4799 02e0 8146     		mov	r9, r0
 4800              	.LVL1029:
 4801 02e2 3846     		mov	r0, r7
 4802              	.LVL1030:
 4803 02e4 FFF7FEFF 		bl	cosf
 4804              	.LVL1031:
 4805 02e8 8046     		mov	r8, r0
 4806              	.LVL1032:
 4807 02ea 3046     		mov	r0, r6
 4808              	.LVL1033:
 4809 02ec FFF7FEFF 		bl	sinf
 4810              	.LVL1034:
 4811 02f0 8246     		mov	sl, r0
 4812              	.LVL1035:
 4813 02f2 3046     		mov	r0, r6
 4814              	.LVL1036:
 4815 02f4 FFF7FEFF 		bl	cosf
 4816              	.LVL1037:
 4817 02f8 0746     		mov	r7, r0
 4818              	.LVL1038:
 4819 02fa 5846     		mov	r0, fp
 4820              	.LVL1039:
 4821 02fc FFF7FEFF 		bl	sinf
 4822              	.LVL1040:
 4823 0300 0646     		mov	r6, r0
 4824              	.LVL1041:
 4825 0302 5846     		mov	r0, fp
 4826              	.LVL1042:
 4827              	.L425:
 4828 0304 FFF7FEFF 		bl	cosf
 4829              	.LVL1043:
 4830 0308 0546     		mov	r5, r0
 4831              	.LVL1044:
 4832 030a 2946     		mov	r1, r5
 4833 030c 3846     		mov	r0, r7
 4834              	.LVL1045:
 4835 030e FFF7FEFF 		bl	__aeabi_fmul
 4836              	.LVL1046:
 4837 0312 3146     		mov	r1, r6
 4838 0314 2066     		str	r0, [r4, #96]	@ float
 4839 0316 3846     		mov	r0, r7
 4840 0318 FFF7FEFF 		bl	__aeabi_fmul
 4841              	.LVL1047:
 4842 031c 0AF10043 		add	r3, sl, #-2147483648
 4843 0320 A366     		str	r3, [r4, #104]	@ float
 4844 0322 5146     		mov	r1, sl
 4845 0324 6066     		str	r0, [r4, #100]	@ float
 4846 0326 4846     		mov	r0, r9
 4847 0328 FFF7FEFF 		bl	__aeabi_fmul
 4848              	.LVL1048:
 4849 032c 2946     		mov	r1, r5
 4850 032e 8346     		mov	fp, r0
 4851 0330 FFF7FEFF 		bl	__aeabi_fmul
 4852              	.LVL1049:
 4853 0334 3146     		mov	r1, r6
 4854 0336 0246     		mov	r2, r0
 4855 0338 4046     		mov	r0, r8
 4856 033a 0092     		str	r2, [sp, #0]
 4857 033c FFF7FEFF 		bl	__aeabi_fmul
 4858              	.LVL1050:
 4859 0340 0146     		mov	r1, r0
 4860 0342 0098     		ldr	r0, [sp, #0]
 4861 0344 FFF7FEFF 		bl	__aeabi_fsub
 4862              	.LVL1051:
 4863 0348 3146     		mov	r1, r6
 4864 034a E066     		str	r0, [r4, #108]	@ float
 4865 034c 5846     		mov	r0, fp
 4866 034e FFF7FEFF 		bl	__aeabi_fmul
 4867              	.LVL1052:
 4868 0352 2946     		mov	r1, r5
 4869 0354 8346     		mov	fp, r0
 4870 0356 4046     		mov	r0, r8
 4871 0358 FFF7FEFF 		bl	__aeabi_fmul
 4872              	.LVL1053:
 4873 035c 0146     		mov	r1, r0
 4874 035e 5846     		mov	r0, fp
 4875 0360 FFF7FEFF 		bl	__aeabi_fadd
 4876              	.LVL1054:
 4877 0364 3946     		mov	r1, r7
 4878 0366 2067     		str	r0, [r4, #112]	@ float
 4879 0368 4846     		mov	r0, r9
 4880 036a FFF7FEFF 		bl	__aeabi_fmul
 4881              	.LVL1055:
 4882 036e 5146     		mov	r1, sl
 4883 0370 6067     		str	r0, [r4, #116]	@ float
 4884 0372 4046     		mov	r0, r8
 4885 0374 FFF7FEFF 		bl	__aeabi_fmul
 4886              	.LVL1056:
 4887 0378 2946     		mov	r1, r5
 4888 037a 8246     		mov	sl, r0
 4889 037c FFF7FEFF 		bl	__aeabi_fmul
 4890              	.LVL1057:
 4891 0380 3146     		mov	r1, r6
 4892 0382 8346     		mov	fp, r0
 4893 0384 4846     		mov	r0, r9
 4894 0386 FFF7FEFF 		bl	__aeabi_fmul
 4895              	.LVL1058:
 4896 038a 0146     		mov	r1, r0
 4897 038c 5846     		mov	r0, fp
 4898 038e FFF7FEFF 		bl	__aeabi_fadd
 4899              	.LVL1059:
 4900 0392 3146     		mov	r1, r6
 4901 0394 A067     		str	r0, [r4, #120]	@ float
 4902 0396 5046     		mov	r0, sl
 4903 0398 FFF7FEFF 		bl	__aeabi_fmul
 4904              	.LVL1060:
 4905 039c 2946     		mov	r1, r5
 4906 039e 0646     		mov	r6, r0
 4907 03a0 4846     		mov	r0, r9
 4908 03a2 FFF7FEFF 		bl	__aeabi_fmul
 4909              	.LVL1061:
 4910 03a6 0146     		mov	r1, r0
 4911 03a8 3046     		mov	r0, r6
 4912 03aa FFF7FEFF 		bl	__aeabi_fsub
 4913              	.LVL1062:
 4914 03ae 3946     		mov	r1, r7
 4915 03b0 E067     		str	r0, [r4, #124]	@ float
 4916 03b2 4046     		mov	r0, r8
 4917              	.LVL1063:
 4918              	.L423:
 4919 03b4 FFF7FEFF 		bl	__aeabi_fmul
 4920              	.LVL1064:
 4921              	.L424:
 4922 03b8 C4F88000 		str	r0, [r4, #128]	@ float
 4923              	.L416:
 4924              	.LBE82:
 179:math/pprz_orientation_conversion.c ****   }
 180:math/pprz_orientation_conversion.c ****   /* set bit to indicate this representation is computed */
 181:math/pprz_orientation_conversion.c ****   SetBit(orientation->status, ORREP_RMAT_F);
 4925              		.loc 1 181 0
 4926 03bc 2178     		ldrb	r1, [r4, #0]	@ zero_extendqisi2
 4927 03be 41F02003 		orr	r3, r1, #32
 4928 03c2 2370     		strb	r3, [r4, #0]
 4929              	.L413:
 182:math/pprz_orientation_conversion.c **** }
 4930              		.loc 1 182 0
 4931 03c4 05B0     		add	sp, sp, #20
 4932 03c6 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 4933              		.cfi_endproc
 4934              	.LFE19:
 4936              		.global	__aeabi_dsub
 4937 03ca 00BFAFF3 		.section	.text.orientationCalcEulers_f,"ax",%progbits
 4937      0080
 4938              		.align	1
 4939              		.global	orientationCalcEulers_f
 4940              		.thumb
 4941              		.thumb_func
 4943              	orientationCalcEulers_f:
 4944              	.LFB20:
 183:math/pprz_orientation_conversion.c **** 
 184:math/pprz_orientation_conversion.c **** void orientationCalcEulers_f(struct OrientationReps* orientation) {
 4945              		.loc 1 184 0
 4946              		.cfi_startproc
 4947              		@ args = 0, pretend = 0, frame = 0
 4948              		@ frame_needed = 0, uses_anonymous_args = 0
 4949              	.LVL1065:
 4950 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, sl, lr}
 4951              	.LCFI6:
 4952              		.cfi_def_cfa_offset 32
 4953              		.cfi_offset 4, -32
 4954              		.cfi_offset 5, -28
 4955              		.cfi_offset 6, -24
 4956              		.cfi_offset 7, -20
 4957              		.cfi_offset 8, -16
 4958              		.cfi_offset 9, -12
 4959              		.cfi_offset 10, -8
 4960              		.cfi_offset 14, -4
 185:math/pprz_orientation_conversion.c ****   if (bit_is_set(orientation->status, ORREP_EULER_F))
 4961              		.loc 1 185 0
 4962 0004 0578     		ldrb	r5, [r0, #0]	@ zero_extendqisi2
 184:math/pprz_orientation_conversion.c **** void orientationCalcEulers_f(struct OrientationReps* orientation) {
 4963              		.loc 1 184 0
 4964 0006 0446     		mov	r4, r0
 4965              		.loc 1 185 0
 4966 0008 E806     		lsls	r0, r5, #27
 4967              	.LVL1066:
 4968 000a 00F1A381 		bmi	.L429
 186:math/pprz_orientation_conversion.c ****     return;
 187:math/pprz_orientation_conversion.c **** 
 188:math/pprz_orientation_conversion.c ****   if (bit_is_set(orientation->status, ORREP_EULER_I)) {
 4969              		.loc 1 188 0
 4970 000e A907     		lsls	r1, r5, #30
 4971 0010 17D5     		bpl	.L431
 189:math/pprz_orientation_conversion.c ****     EULERS_FLOAT_OF_BFP(orientation->eulers_f, orientation->eulers_i);
 4972              		.loc 1 189 0
 4973 0012 6069     		ldr	r0, [r4, #20]
 4974 0014 FFF7FEFF 		bl	__aeabi_i2f
 4975              	.LVL1067:
 4976 0018 4FF06651 		mov	r1, #964689920
 4977 001c FFF7FEFF 		bl	__aeabi_fmul
 4978              	.LVL1068:
 4979 0020 6065     		str	r0, [r4, #84]	@ float
 4980 0022 A069     		ldr	r0, [r4, #24]
 4981 0024 FFF7FEFF 		bl	__aeabi_i2f
 4982              	.LVL1069:
 4983 0028 4FF06651 		mov	r1, #964689920
 4984 002c FFF7FEFF 		bl	__aeabi_fmul
 4985              	.LVL1070:
 4986 0030 A065     		str	r0, [r4, #88]	@ float
 4987 0032 E069     		ldr	r0, [r4, #28]
 4988 0034 FFF7FEFF 		bl	__aeabi_i2f
 4989              	.LVL1071:
 4990 0038 4FF06651 		mov	r1, #964689920
 4991 003c FFF7FEFF 		bl	__aeabi_fmul
 4992              	.LVL1072:
 4993 0040 83E1     		b	.L439
 4994              	.L431:
 190:math/pprz_orientation_conversion.c ****   }
 191:math/pprz_orientation_conversion.c ****   else if (bit_is_set(orientation->status, ORREP_RMAT_F)) {
 4995              		.loc 1 191 0
 4996 0042 AA06     		lsls	r2, r5, #26
 4997 0044 11D5     		bpl	.L433
 4998              	.LBB83:
 192:math/pprz_orientation_conversion.c ****     FLOAT_EULERS_OF_RMAT(orientation->eulers_f, orientation->rmat_f);
 4999              		.loc 1 192 0
 5000 0046 D4F88010 		ldr	r1, [r4, #128]	@ float
 5001 004a 606F     		ldr	r0, [r4, #116]	@ float
 5002 004c 256E     		ldr	r5, [r4, #96]	@ float
 5003              	.LVL1073:
 5004 004e 666E     		ldr	r6, [r4, #100]	@ float
 5005              	.LVL1074:
 5006 0050 A76E     		ldr	r7, [r4, #104]	@ float
 5007              	.LVL1075:
 5008 0052 FFF7FEFF 		bl	atan2f
 5009              	.LVL1076:
 5010 0056 6065     		str	r0, [r4, #84]	@ float
 5011 0058 3846     		mov	r0, r7
 5012 005a FFF7FEFF 		bl	asinf
 5013              	.LVL1077:
 5014 005e 00F10043 		add	r3, r0, #-2147483648
 5015 0062 A365     		str	r3, [r4, #88]	@ float
 5016 0064 3046     		mov	r0, r6
 5017 0066 2946     		mov	r1, r5
 5018 0068 6DE1     		b	.L440
 5019              	.LVL1078:
 5020              	.L433:
 5021              	.LBE83:
 193:math/pprz_orientation_conversion.c ****   }
 194:math/pprz_orientation_conversion.c ****   else if (bit_is_set(orientation->status, ORREP_QUAT_F)) {
 5022              		.loc 1 194 0
 5023 006a 2B07     		lsls	r3, r5, #28
 5024 006c 73D5     		bpl	.L434
 5025              	.LBB84:
 195:math/pprz_orientation_conversion.c ****     FLOAT_EULERS_OF_QUAT(orientation->eulers_f, orientation->quat_f);
 5026              		.loc 1 195 0
 5027 006e E66C     		ldr	r6, [r4, #76]	@ float
 5028 0070 A56C     		ldr	r5, [r4, #72]	@ float
 5029              	.LVL1079:
 5030 0072 3146     		mov	r1, r6
 5031 0074 3046     		mov	r0, r6
 5032 0076 FFF7FEFF 		bl	__aeabi_fmul
 5033              	.LVL1080:
 5034 007a 276D     		ldr	r7, [r4, #80]	@ float
 5035 007c 8146     		mov	r9, r0
 5036              	.LVL1081:
 5037 007e 3946     		mov	r1, r7
 5038 0080 3046     		mov	r0, r6
 5039              	.LVL1082:
 5040 0082 FFF7FEFF 		bl	__aeabi_fmul
 5041              	.LVL1083:
 5042 0086 D4F84480 		ldr	r8, [r4, #68]	@ float
 5043              	.LVL1084:
 5044 008a 8246     		mov	sl, r0
 5045 008c 2946     		mov	r1, r5
 5046 008e 4046     		mov	r0, r8
 5047 0090 FFF7FEFF 		bl	__aeabi_fmul
 5048              	.LVL1085:
 5049 0094 0146     		mov	r1, r0
 5050 0096 5046     		mov	r0, sl
 5051 0098 FFF7FEFF 		bl	__aeabi_fadd
 5052              	.LVL1086:
 5053 009c 0146     		mov	r1, r0
 5054 009e FFF7FEFF 		bl	__aeabi_fadd
 5055              	.LVL1087:
 5056 00a2 2946     		mov	r1, r5
 5057 00a4 8246     		mov	sl, r0
 5058 00a6 2846     		mov	r0, r5
 5059 00a8 FFF7FEFF 		bl	__aeabi_fmul
 5060              	.LVL1088:
 5061 00ac 4946     		mov	r1, r9
 5062 00ae FFF7FEFF 		bl	__aeabi_fadd
 5063              	.LVL1089:
 5064 00b2 FFF7FEFF 		bl	__aeabi_f2d
 5065              	.LVL1090:
 5066 00b6 0246     		mov	r2, r0
 5067 00b8 0B46     		mov	r3, r1
 5068 00ba FFF7FEFF 		bl	__aeabi_dadd
 5069              	.LVL1091:
 5070 00be 0B46     		mov	r3, r1
 5071 00c0 0246     		mov	r2, r0
 5072 00c2 A549     		ldr	r1, .L441
 5073 00c4 0020     		movs	r0, #0
 5074 00c6 FFF7FEFF 		bl	__aeabi_dsub
 5075              	.LVL1092:
 5076 00ca FFF7FEFF 		bl	__aeabi_d2f
 5077              	.LVL1093:
 5078 00ce 0146     		mov	r1, r0
 5079 00d0 5046     		mov	r0, sl
 5080 00d2 FFF7FEFF 		bl	atan2f
 5081              	.LVL1094:
 5082 00d6 3946     		mov	r1, r7
 5083 00d8 6065     		str	r0, [r4, #84]	@ float
 5084 00da 2846     		mov	r0, r5
 5085 00dc FFF7FEFF 		bl	__aeabi_fmul
 5086              	.LVL1095:
 5087 00e0 3146     		mov	r1, r6
 5088 00e2 8246     		mov	sl, r0
 5089 00e4 4046     		mov	r0, r8
 5090 00e6 FFF7FEFF 		bl	__aeabi_fmul
 5091              	.LVL1096:
 5092 00ea 0146     		mov	r1, r0
 5093 00ec 5046     		mov	r0, sl
 5094 00ee FFF7FEFF 		bl	__aeabi_fsub
 5095              	.LVL1097:
 5096 00f2 0146     		mov	r1, r0
 5097 00f4 FFF7FEFF 		bl	__aeabi_fadd
 5098              	.LVL1098:
 5099 00f8 FFF7FEFF 		bl	asinf
 5100              	.LVL1099:
 5101 00fc 00F10042 		add	r2, r0, #-2147483648
 5102 0100 A265     		str	r2, [r4, #88]	@ float
 5103 0102 2846     		mov	r0, r5
 5104 0104 3146     		mov	r1, r6
 5105 0106 FFF7FEFF 		bl	__aeabi_fmul
 5106              	.LVL1100:
 5107 010a 3946     		mov	r1, r7
 5108 010c 0546     		mov	r5, r0
 5109              	.LVL1101:
 5110 010e 4046     		mov	r0, r8
 5111 0110 FFF7FEFF 		bl	__aeabi_fmul
 5112              	.LVL1102:
 5113 0114 0146     		mov	r1, r0
 5114 0116 2846     		mov	r0, r5
 5115 0118 FFF7FEFF 		bl	__aeabi_fadd
 5116              	.LVL1103:
 5117 011c 0146     		mov	r1, r0
 5118 011e FFF7FEFF 		bl	__aeabi_fadd
 5119              	.LVL1104:
 5120 0122 3946     		mov	r1, r7
 5121 0124 0546     		mov	r5, r0
 5122 0126 3846     		mov	r0, r7
 5123 0128 FFF7FEFF 		bl	__aeabi_fmul
 5124              	.LVL1105:
 5125 012c 0146     		mov	r1, r0
 5126 012e 4846     		mov	r0, r9
 5127 0130 FFF7FEFF 		bl	__aeabi_fadd
 5128              	.LVL1106:
 5129 0134 FFF7FEFF 		bl	__aeabi_f2d
 5130              	.LVL1107:
 5131 0138 0246     		mov	r2, r0
 5132 013a 0B46     		mov	r3, r1
 5133 013c FFF7FEFF 		bl	__aeabi_dadd
 5134              	.LVL1108:
 5135 0140 0246     		mov	r2, r0
 5136 0142 0B46     		mov	r3, r1
 5137 0144 0020     		movs	r0, #0
 5138 0146 8449     		ldr	r1, .L441
 5139 0148 FFF7FEFF 		bl	__aeabi_dsub
 5140              	.LVL1109:
 5141 014c FFF7FEFF 		bl	__aeabi_d2f
 5142              	.LVL1110:
 5143 0150 0146     		mov	r1, r0
 5144 0152 2846     		mov	r0, r5
 5145 0154 F7E0     		b	.L440
 5146              	.LVL1111:
 5147              	.L434:
 5148              	.LBE84:
 196:math/pprz_orientation_conversion.c ****   }
 197:math/pprz_orientation_conversion.c ****   else if (bit_is_set(orientation->status, ORREP_RMAT_I)) {
 5149              		.loc 1 197 0
 5150 0156 6807     		lsls	r0, r5, #29
 5151 0158 5DD5     		bpl	.L435
 198:math/pprz_orientation_conversion.c ****     RMAT_FLOAT_OF_BFP(orientation->rmat_f, orientation->rmat_i);
 5152              		.loc 1 198 0
 5153 015a 206A     		ldr	r0, [r4, #32]
 5154 015c FFF7FEFF 		bl	__aeabi_i2f
 5155              	.LVL1112:
 5156 0160 4FF06251 		mov	r1, #947912704
 5157 0164 FFF7FEFF 		bl	__aeabi_fmul
 5158              	.LVL1113:
 5159 0168 0646     		mov	r6, r0
 5160 016a 2066     		str	r0, [r4, #96]	@ float
 5161 016c 606A     		ldr	r0, [r4, #36]
 5162 016e FFF7FEFF 		bl	__aeabi_i2f
 5163              	.LVL1114:
 5164 0172 4FF06251 		mov	r1, #947912704
 5165 0176 FFF7FEFF 		bl	__aeabi_fmul
 5166              	.LVL1115:
 5167 017a 0746     		mov	r7, r0
 5168 017c 6066     		str	r0, [r4, #100]	@ float
 5169 017e A06A     		ldr	r0, [r4, #40]
 5170 0180 FFF7FEFF 		bl	__aeabi_i2f
 5171              	.LVL1116:
 5172 0184 4FF06251 		mov	r1, #947912704
 5173 0188 FFF7FEFF 		bl	__aeabi_fmul
 5174              	.LVL1117:
 5175 018c 8046     		mov	r8, r0
 5176 018e A066     		str	r0, [r4, #104]	@ float
 5177 0190 E06A     		ldr	r0, [r4, #44]
 5178 0192 FFF7FEFF 		bl	__aeabi_i2f
 5179              	.LVL1118:
 5180 0196 4FF06251 		mov	r1, #947912704
 5181 019a FFF7FEFF 		bl	__aeabi_fmul
 5182              	.LVL1119:
 5183 019e E066     		str	r0, [r4, #108]	@ float
 5184 01a0 206B     		ldr	r0, [r4, #48]
 5185 01a2 FFF7FEFF 		bl	__aeabi_i2f
 5186              	.LVL1120:
 5187 01a6 4FF06251 		mov	r1, #947912704
 5188 01aa FFF7FEFF 		bl	__aeabi_fmul
 5189              	.LVL1121:
 5190 01ae 2067     		str	r0, [r4, #112]	@ float
 5191 01b0 606B     		ldr	r0, [r4, #52]
 5192 01b2 FFF7FEFF 		bl	__aeabi_i2f
 5193              	.LVL1122:
 5194 01b6 4FF06251 		mov	r1, #947912704
 5195 01ba FFF7FEFF 		bl	__aeabi_fmul
 5196              	.LVL1123:
 5197 01be 8146     		mov	r9, r0
 5198 01c0 6067     		str	r0, [r4, #116]	@ float
 5199 01c2 A06B     		ldr	r0, [r4, #56]
 5200 01c4 FFF7FEFF 		bl	__aeabi_i2f
 5201              	.LVL1124:
 5202 01c8 4FF06251 		mov	r1, #947912704
 5203 01cc FFF7FEFF 		bl	__aeabi_fmul
 5204              	.LVL1125:
 5205 01d0 A067     		str	r0, [r4, #120]	@ float
 5206 01d2 E06B     		ldr	r0, [r4, #60]
 5207 01d4 FFF7FEFF 		bl	__aeabi_i2f
 5208              	.LVL1126:
 5209 01d8 4FF06251 		mov	r1, #947912704
 5210 01dc FFF7FEFF 		bl	__aeabi_fmul
 5211              	.LVL1127:
 5212 01e0 E067     		str	r0, [r4, #124]	@ float
 5213 01e2 206C     		ldr	r0, [r4, #64]
 5214 01e4 FFF7FEFF 		bl	__aeabi_i2f
 5215              	.LVL1128:
 5216 01e8 4FF06251 		mov	r1, #947912704
 5217 01ec FFF7FEFF 		bl	__aeabi_fmul
 5218              	.LVL1129:
 199:math/pprz_orientation_conversion.c ****     SetBit(orientation->status, ORREP_RMAT_F);
 5219              		.loc 1 199 0
 5220 01f0 45F02005 		orr	r5, r5, #32
 198:math/pprz_orientation_conversion.c ****     RMAT_FLOAT_OF_BFP(orientation->rmat_f, orientation->rmat_i);
 5221              		.loc 1 198 0
 5222 01f4 0146     		mov	r1, r0
 5223 01f6 C4F88000 		str	r0, [r4, #128]	@ float
 5224              		.loc 1 199 0
 5225 01fa 2570     		strb	r5, [r4, #0]
 5226              	.LVL1130:
 5227              	.LBB85:
 200:math/pprz_orientation_conversion.c ****     FLOAT_EULERS_OF_RMAT(orientation->eulers_f, orientation->rmat_f);
 5228              		.loc 1 200 0
 5229 01fc 4846     		mov	r0, r9
 5230              	.LVL1131:
 5231 01fe FFF7FEFF 		bl	atan2f
 5232              	.LVL1132:
 5233 0202 6065     		str	r0, [r4, #84]	@ float
 5234 0204 4046     		mov	r0, r8
 5235 0206 FFF7FEFF 		bl	asinf
 5236              	.LVL1133:
 5237 020a 00F10041 		add	r1, r0, #-2147483648
 5238 020e A165     		str	r1, [r4, #88]	@ float
 5239 0210 3846     		mov	r0, r7
 5240 0212 3146     		mov	r1, r6
 5241 0214 97E0     		b	.L440
 5242              	.LVL1134:
 5243              	.L435:
 5244              	.LBE85:
 201:math/pprz_orientation_conversion.c ****   }
 202:math/pprz_orientation_conversion.c ****   else if (bit_is_set(orientation->status, ORREP_QUAT_I)) {
 5245              		.loc 1 202 0
 5246 0216 E907     		lsls	r1, r5, #31
 5247 0218 40F19880 		bpl	.L432
 203:math/pprz_orientation_conversion.c ****     QUAT_FLOAT_OF_BFP(orientation->quat_f, orientation->quat_i);
 5248              		.loc 1 203 0
 5249 021c 6068     		ldr	r0, [r4, #4]
 5250 021e FFF7FEFF 		bl	__aeabi_i2f
 5251              	.LVL1135:
 5252 0222 4FF06051 		mov	r1, #939524096
 5253 0226 FFF7FEFF 		bl	__aeabi_fmul
 5254              	.LVL1136:
 5255 022a 8146     		mov	r9, r0
 5256 022c 6064     		str	r0, [r4, #68]	@ float
 5257 022e A068     		ldr	r0, [r4, #8]
 5258 0230 FFF7FEFF 		bl	__aeabi_i2f
 5259              	.LVL1137:
 5260 0234 4FF06051 		mov	r1, #939524096
 5261 0238 FFF7FEFF 		bl	__aeabi_fmul
 5262              	.LVL1138:
 5263 023c 0746     		mov	r7, r0
 5264 023e A064     		str	r0, [r4, #72]	@ float
 5265 0240 E068     		ldr	r0, [r4, #12]
 5266 0242 FFF7FEFF 		bl	__aeabi_i2f
 5267              	.LVL1139:
 5268 0246 4FF06051 		mov	r1, #939524096
 5269 024a FFF7FEFF 		bl	__aeabi_fmul
 5270              	.LVL1140:
 5271 024e 0646     		mov	r6, r0
 5272 0250 E064     		str	r0, [r4, #76]	@ float
 5273 0252 2069     		ldr	r0, [r4, #16]
 5274 0254 FFF7FEFF 		bl	__aeabi_i2f
 5275              	.LVL1141:
 5276 0258 4FF06051 		mov	r1, #939524096
 5277 025c FFF7FEFF 		bl	__aeabi_fmul
 5278              	.LVL1142:
 204:math/pprz_orientation_conversion.c ****     SetBit(orientation->status, ORREP_QUAT_F);
 5279              		.loc 1 204 0
 5280 0260 45F00805 		orr	r5, r5, #8
 203:math/pprz_orientation_conversion.c ****     QUAT_FLOAT_OF_BFP(orientation->quat_f, orientation->quat_i);
 5281              		.loc 1 203 0
 5282 0264 8046     		mov	r8, r0
 5283              	.LBB86:
 205:math/pprz_orientation_conversion.c ****     FLOAT_EULERS_OF_QUAT(orientation->eulers_f, orientation->quat_f);
 5284              		.loc 1 205 0
 5285 0266 3146     		mov	r1, r6
 5286              	.LBE86:
 203:math/pprz_orientation_conversion.c ****     QUAT_FLOAT_OF_BFP(orientation->quat_f, orientation->quat_i);
 5287              		.loc 1 203 0
 5288 0268 2065     		str	r0, [r4, #80]	@ float
 204:math/pprz_orientation_conversion.c ****     SetBit(orientation->status, ORREP_QUAT_F);
 5289              		.loc 1 204 0
 5290 026a 2570     		strb	r5, [r4, #0]
 5291              	.LVL1143:
 5292              	.LBB87:
 5293              		.loc 1 205 0
 5294 026c 3046     		mov	r0, r6
 5295 026e FFF7FEFF 		bl	__aeabi_fmul
 5296              	.LVL1144:
 5297 0272 4146     		mov	r1, r8
 5298 0274 0546     		mov	r5, r0
 5299              	.LVL1145:
 5300 0276 3046     		mov	r0, r6
 5301              	.LVL1146:
 5302 0278 FFF7FEFF 		bl	__aeabi_fmul
 5303              	.LVL1147:
 5304 027c 3946     		mov	r1, r7
 5305 027e 8246     		mov	sl, r0
 5306 0280 4846     		mov	r0, r9
 5307 0282 FFF7FEFF 		bl	__aeabi_fmul
 5308              	.LVL1148:
 5309 0286 0146     		mov	r1, r0
 5310 0288 5046     		mov	r0, sl
 5311 028a FFF7FEFF 		bl	__aeabi_fadd
 5312              	.LVL1149:
 5313 028e 0146     		mov	r1, r0
 5314 0290 FFF7FEFF 		bl	__aeabi_fadd
 5315              	.LVL1150:
 5316 0294 3946     		mov	r1, r7
 5317 0296 8246     		mov	sl, r0
 5318 0298 3846     		mov	r0, r7
 5319 029a FFF7FEFF 		bl	__aeabi_fmul
 5320              	.LVL1151:
 5321 029e 2946     		mov	r1, r5
 5322 02a0 FFF7FEFF 		bl	__aeabi_fadd
 5323              	.LVL1152:
 5324 02a4 FFF7FEFF 		bl	__aeabi_f2d
 5325              	.LVL1153:
 5326 02a8 0246     		mov	r2, r0
 5327 02aa 0B46     		mov	r3, r1
 5328 02ac FFF7FEFF 		bl	__aeabi_dadd
 5329              	.LVL1154:
 5330 02b0 0246     		mov	r2, r0
 5331 02b2 0B46     		mov	r3, r1
 5332 02b4 0020     		movs	r0, #0
 5333 02b6 2849     		ldr	r1, .L441
 5334 02b8 FFF7FEFF 		bl	__aeabi_dsub
 5335              	.LVL1155:
 5336 02bc FFF7FEFF 		bl	__aeabi_d2f
 5337              	.LVL1156:
 5338 02c0 0146     		mov	r1, r0
 5339 02c2 5046     		mov	r0, sl
 5340 02c4 FFF7FEFF 		bl	atan2f
 5341              	.LVL1157:
 5342 02c8 4146     		mov	r1, r8
 5343 02ca 6065     		str	r0, [r4, #84]	@ float
 5344 02cc 3846     		mov	r0, r7
 5345 02ce FFF7FEFF 		bl	__aeabi_fmul
 5346              	.LVL1158:
 5347 02d2 3146     		mov	r1, r6
 5348 02d4 8246     		mov	sl, r0
 5349 02d6 4846     		mov	r0, r9
 5350 02d8 FFF7FEFF 		bl	__aeabi_fmul
 5351              	.LVL1159:
 5352 02dc 0146     		mov	r1, r0
 5353 02de 5046     		mov	r0, sl
 5354 02e0 FFF7FEFF 		bl	__aeabi_fsub
 5355              	.LVL1160:
 5356 02e4 0146     		mov	r1, r0
 5357 02e6 FFF7FEFF 		bl	__aeabi_fadd
 5358              	.LVL1161:
 5359 02ea FFF7FEFF 		bl	asinf
 5360              	.LVL1162:
 5361 02ee 00F10040 		add	r0, r0, #-2147483648
 5362 02f2 3146     		mov	r1, r6
 5363 02f4 A065     		str	r0, [r4, #88]	@ float
 5364 02f6 3846     		mov	r0, r7
 5365 02f8 FFF7FEFF 		bl	__aeabi_fmul
 5366              	.LVL1163:
 5367 02fc 4146     		mov	r1, r8
 5368 02fe 0646     		mov	r6, r0
 5369              	.LVL1164:
 5370 0300 4846     		mov	r0, r9
 5371 0302 FFF7FEFF 		bl	__aeabi_fmul
 5372              	.LVL1165:
 5373 0306 0146     		mov	r1, r0
 5374 0308 3046     		mov	r0, r6
 5375 030a FFF7FEFF 		bl	__aeabi_fadd
 5376              	.LVL1166:
 5377 030e 0146     		mov	r1, r0
 5378 0310 FFF7FEFF 		bl	__aeabi_fadd
 5379              	.LVL1167:
 5380 0314 4146     		mov	r1, r8
 5381 0316 0646     		mov	r6, r0
 5382 0318 4046     		mov	r0, r8
 5383 031a FFF7FEFF 		bl	__aeabi_fmul
 5384              	.LVL1168:
 5385 031e 0146     		mov	r1, r0
 5386 0320 2846     		mov	r0, r5
 5387 0322 FFF7FEFF 		bl	__aeabi_fadd
 5388              	.LVL1169:
 5389 0326 FFF7FEFF 		bl	__aeabi_f2d
 5390              	.LVL1170:
 5391 032a 0246     		mov	r2, r0
 5392 032c 0B46     		mov	r3, r1
 5393 032e FFF7FEFF 		bl	__aeabi_dadd
 5394              	.LVL1171:
 5395 0332 0246     		mov	r2, r0
 5396 0334 0B46     		mov	r3, r1
 5397 0336 0020     		movs	r0, #0
 5398 0338 0749     		ldr	r1, .L441
 5399 033a FFF7FEFF 		bl	__aeabi_dsub
 5400              	.LVL1172:
 5401 033e FFF7FEFF 		bl	__aeabi_d2f
 5402              	.LVL1173:
 5403 0342 0146     		mov	r1, r0
 5404 0344 3046     		mov	r0, r6
 5405              	.LVL1174:
 5406              	.L440:
 5407 0346 FFF7FEFF 		bl	atan2f
 5408              	.LVL1175:
 5409              	.L439:
 5410 034a E065     		str	r0, [r4, #92]	@ float
 5411              	.L432:
 5412              	.LBE87:
 206:math/pprz_orientation_conversion.c ****   }
 207:math/pprz_orientation_conversion.c ****   /* set bit to indicate this representation is computed */
 208:math/pprz_orientation_conversion.c ****   SetBit(orientation->status, ORREP_EULER_F);
 5413              		.loc 1 208 0
 5414 034c 2078     		ldrb	r0, [r4, #0]	@ zero_extendqisi2
 5415 034e 40F01001 		orr	r1, r0, #16
 5416 0352 2170     		strb	r1, [r4, #0]
 5417              	.L429:
 5418 0354 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, sl, pc}
 5419              	.L442:
 5420              		.align	2
 5421              	.L441:
 5422 0358 0000F03F 		.word	1072693248
 5423              		.cfi_endproc
 5424              	.LFE20:
 5426              		.text
 5427              	.Letext0:
 5428              		.file 2 "/opt/local/bin/../lib/gcc/arm-none-eabi/4.7.3/../../../../arm-none-eabi/include/stdint.h"
 5429              		.file 3 "./math/pprz_algebra_int.h"
 5430              		.file 4 "./math/pprz_algebra_float.h"
 5431              		.file 5 "math/pprz_orientation_conversion.h"
 5432              		.file 6 "/opt/local/bin/../lib/gcc/arm-none-eabi/4.7.3/../../../../arm-none-eabi/include/math.h"
 5433              		.file 7 "./math/pprz_trig_int.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 pprz_orientation_conversion.c
/var/tmp//cczFHGtr.s:24     .text.orientationCalcQuat_i:0000000000000000 $t
/var/tmp//cczFHGtr.s:29     .text.orientationCalcQuat_i:0000000000000000 orientationCalcQuat_i
/var/tmp//cczFHGtr.s:678    .text.orientationCalcQuat_i:0000000000000364 $d
/var/tmp//cczFHGtr.s:684    .text.orientationCalcQuat_i:0000000000000370 $t
/var/tmp//cczFHGtr.s:1216   .text.orientationCalcQuat_i:0000000000000684 $d
/var/tmp//cczFHGtr.s:1223   .text.orientationCalcQuat_i:0000000000000690 $t
/var/tmp//cczFHGtr.s:1791   .text.orientationCalcQuat_i:0000000000000994 $d
/var/tmp//cczFHGtr.s:1797   .text.orientationCalcQuat_i:00000000000009a0 $t
/var/tmp//cczFHGtr.s:1860   .text.orientationCalcRMat_i:0000000000000000 $t
/var/tmp//cczFHGtr.s:1865   .text.orientationCalcRMat_i:0000000000000000 orientationCalcRMat_i
/var/tmp//cczFHGtr.s:2509   .text.orientationCalcRMat_i:00000000000003c4 $d
/var/tmp//cczFHGtr.s:2515   .text.orientationCalcRMat_i:00000000000003cc $t
/var/tmp//cczFHGtr.s:3139   .text.orientationCalcRMat_i:0000000000000774 $d
/var/tmp//cczFHGtr.s:3146   .text.orientationCalcEulers_i:0000000000000000 $t
/var/tmp//cczFHGtr.s:3151   .text.orientationCalcEulers_i:0000000000000000 orientationCalcEulers_i
/var/tmp//cczFHGtr.s:3674   .text.orientationCalcQuat_f:0000000000000000 $t
/var/tmp//cczFHGtr.s:3679   .text.orientationCalcQuat_f:0000000000000000 orientationCalcQuat_f
/var/tmp//cczFHGtr.s:4360   .text.orientationCalcRMat_f:0000000000000000 $t
/var/tmp//cczFHGtr.s:4365   .text.orientationCalcRMat_f:0000000000000000 orientationCalcRMat_f
/var/tmp//cczFHGtr.s:4756   .text.orientationCalcRMat_f:0000000000000290 $d
/var/tmp//cczFHGtr.s:4762   .text.orientationCalcRMat_f:0000000000000298 $t
/var/tmp//cczFHGtr.s:4938   .text.orientationCalcEulers_f:0000000000000000 $t
/var/tmp//cczFHGtr.s:4943   .text.orientationCalcEulers_f:0000000000000000 orientationCalcEulers_f
/var/tmp//cczFHGtr.s:5422   .text.orientationCalcEulers_f:0000000000000358 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
__aeabi_fmul
__aeabi_f2iz
__aeabi_i2d
__aeabi_dadd
__aeabi_d2iz
pprz_trig_int
__aeabi_i2f
atan2f
asinf
__aeabi_fadd
__aeabi_fcmpgt
__aeabi_fsub
__aeabi_fdiv
sqrtf
sinf
cosf
__aeabi_f2d
__aeabi_dmul
__aeabi_d2f
__aeabi_dsub
