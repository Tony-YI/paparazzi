   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"navigation.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.stateGetPositionEnu_i,"ax",%progbits
  19              		.align	1
  20              		.thumb
  21              		.thumb_func
  23              	stateGetPositionEnu_i:
  24              	.LFB51:
  25              		.file 1 "./state.h"
   1:./state.h     **** /*
   2:./state.h     ****  * Copyright (C) 2011-2012 Felix Ruess <felix.ruess@gmail.com>
   3:./state.h     ****  *
   4:./state.h     ****  * This file is part of paparazzi.
   5:./state.h     ****  *
   6:./state.h     ****  * paparazzi is free software; you can redistribute it and/or modify
   7:./state.h     ****  * it under the terms of the GNU General Public License as published by
   8:./state.h     ****  * the Free Software Foundation; either version 2, or (at your option)
   9:./state.h     ****  * any later version.
  10:./state.h     ****  *
  11:./state.h     ****  * paparazzi is distributed in the hope that it will be useful,
  12:./state.h     ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:./state.h     ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:./state.h     ****  * GNU General Public License for more details.
  15:./state.h     ****  *
  16:./state.h     ****  * You should have received a copy of the GNU General Public License
  17:./state.h     ****  * along with paparazzi; see the file COPYING.  If not, see
  18:./state.h     ****  * <http://www.gnu.org/licenses/>.
  19:./state.h     ****  */
  20:./state.h     **** 
  21:./state.h     **** /**
  22:./state.h     ****  * @file state.h
  23:./state.h     ****  *
  24:./state.h     ****  * API to get/set the generic vehicle states.
  25:./state.h     ****  *
  26:./state.h     ****  * Also see the @ref state_interface "State Interface" page.
  27:./state.h     ****  *
  28:./state.h     ****  * @author Felix Ruess <felix.ruess@gmail.com>
  29:./state.h     ****  */
  30:./state.h     **** 
  31:./state.h     **** #ifndef STATE_H
  32:./state.h     **** #define STATE_H
  33:./state.h     **** 
  34:./state.h     **** #include "math/pprz_algebra_int.h"
  35:./state.h     **** #include "math/pprz_algebra_float.h"
  36:./state.h     **** #include "math/pprz_geodetic_int.h"
  37:./state.h     **** #include "math/pprz_geodetic_float.h"
  38:./state.h     **** #include "math/pprz_orientation_conversion.h"
  39:./state.h     **** 
  40:./state.h     **** #include "std.h"
  41:./state.h     **** #include <string.h>
  42:./state.h     **** 
  43:./state.h     **** /**
  44:./state.h     ****  * This general state interface holds all the most important vehicle states like
  45:./state.h     ****  * position, velocity, attitude, etc. It handles coordinate system and
  46:./state.h     ****  * fixed-/floating-point conversion on the fly when needed.
  47:./state.h     ****  *
  48:./state.h     ****  * You can set e.g. the position in any coordinate system you wish:
  49:./state.h     ****  * stateSetPositionNed_i() to set the position in fixed-point NED coordinates.
  50:./state.h     ****  * If you need to read the position somewhere else in a different representation,
  51:./state.h     ****  * call: stateGetPositionLla_f() and only then the LLA float position representation
  52:./state.h     ****  * is calculated on the fly and returned. It's also only calculated once,
  53:./state.h     ****  * until a new position is set which invalidates all the other representations again.
  54:./state.h     ****  */
  55:./state.h     **** 
  56:./state.h     **** /**
  57:./state.h     ****  * @defgroup state_interface State interface
  58:./state.h     ****  * @{
  59:./state.h     ****  */
  60:./state.h     **** 
  61:./state.h     **** /**
  62:./state.h     ****  * @defgroup state_position Position representations
  63:./state.h     ****  * @{
  64:./state.h     ****  */
  65:./state.h     **** #define POS_ECEF_I 0
  66:./state.h     **** #define POS_NED_I  1
  67:./state.h     **** #define POS_ENU_I  2
  68:./state.h     **** #define POS_LLA_I  3
  69:./state.h     **** #define POS_UTM_I  4
  70:./state.h     **** #define POS_ECEF_F 5
  71:./state.h     **** #define POS_NED_F  6
  72:./state.h     **** #define POS_ENU_F  7
  73:./state.h     **** #define POS_LLA_F  8
  74:./state.h     **** #define POS_UTM_F  9
  75:./state.h     **** #define POS_LOCAL_COORD ((1<<POS_NED_I)|(1<<POS_NED_F)|(1<<POS_ENU_I)|(1<<POS_ENU_F))
  76:./state.h     **** #define POS_GLOBAL_COORD ((1<<POS_ECEF_I)|(1<<POS_ECEF_F)|(1<<POS_LLA_I)|(1<<POS_LLA_F)|(1<<POS_UTM
  77:./state.h     **** /**@}*/
  78:./state.h     **** 
  79:./state.h     **** /**
  80:./state.h     ****  * @defgroup state_velocity Speed representations
  81:./state.h     ****  * @{
  82:./state.h     ****  */
  83:./state.h     **** #define SPEED_ECEF_I  0
  84:./state.h     **** #define SPEED_NED_I   1
  85:./state.h     **** #define SPEED_ENU_I   2
  86:./state.h     **** #define SPEED_HNORM_I 3
  87:./state.h     **** #define SPEED_HDIR_I  4
  88:./state.h     **** #define SPEED_ECEF_F  5
  89:./state.h     **** #define SPEED_NED_F   6
  90:./state.h     **** #define SPEED_ENU_F   7
  91:./state.h     **** #define SPEED_HNORM_F 8
  92:./state.h     **** #define SPEED_HDIR_F  9
  93:./state.h     **** #define SPEED_LOCAL_COORD ((1<<SPEED_NED_I)|(1<<SPEED_ENU_I)|(1<<SPEED_NED_F)|(1<<SPEED_ENU_F))
  94:./state.h     **** /**@}*/
  95:./state.h     **** 
  96:./state.h     **** /**
  97:./state.h     ****  * @defgroup state_acceleration Acceleration representations
  98:./state.h     ****  * @{
  99:./state.h     ****  */
 100:./state.h     **** #define ACCEL_ECEF_I 0
 101:./state.h     **** #define ACCEL_NED_I  1
 102:./state.h     **** #define ACCEL_ECEF_F 2
 103:./state.h     **** #define ACCEL_NED_F  3
 104:./state.h     **** /**@}*/
 105:./state.h     **** 
 106:./state.h     **** /**
 107:./state.h     ****  * @defgroup state_rate Angular rate representations
 108:./state.h     ****  * @{
 109:./state.h     ****  */
 110:./state.h     **** #define RATE_I 0
 111:./state.h     **** #define RATE_F 1
 112:./state.h     **** /**@}*/
 113:./state.h     **** 
 114:./state.h     **** /**
 115:./state.h     ****  * @defgroup state_wind_airspeed Wind- and airspeed representations
 116:./state.h     ****  * @{
 117:./state.h     ****  */
 118:./state.h     **** #define WINDSPEED_I 0
 119:./state.h     **** #define AIRSPEED_I  1
 120:./state.h     **** #define WINDSPEED_F 2
 121:./state.h     **** #define AIRSPEED_F  3
 122:./state.h     **** #define AOA_F       4
 123:./state.h     **** #define SIDESLIP_F  5
 124:./state.h     **** /**@}*/
 125:./state.h     **** 
 126:./state.h     **** 
 127:./state.h     **** /**
 128:./state.h     ****  * Structure holding vehicle state data.
 129:./state.h     ****  */
 130:./state.h     **** struct State {
 131:./state.h     **** 
 132:./state.h     ****   /** @addtogroup state_position
 133:./state.h     ****    *  @{ */
 134:./state.h     **** 
 135:./state.h     ****   /**
 136:./state.h     ****    * Holds the status bits for all position representations.
 137:./state.h     ****    * When the corresponding bit is set the representation
 138:./state.h     ****    * is already computed.
 139:./state.h     ****    */
 140:./state.h     ****   uint16_t pos_status;
 141:./state.h     **** 
 142:./state.h     ****   /**
 143:./state.h     ****    * Position in EarthCenteredEarthFixed coordinates.
 144:./state.h     ****    * Units: centimeters
 145:./state.h     ****    */
 146:./state.h     ****   struct EcefCoor_i ecef_pos_i;
 147:./state.h     **** 
 148:./state.h     ****   /**
 149:./state.h     ****    * Position in Latitude, Longitude and Altitude.
 150:./state.h     ****    * Units lat,lon: radians*1e7
 151:./state.h     ****    * Units alt: milimeters above reference ellipsoid
 152:./state.h     ****    */
 153:./state.h     ****   struct LlaCoor_i lla_pos_i;
 154:./state.h     **** 
 155:./state.h     ****   /**
 156:./state.h     ****    * Definition of the local (flat earth) coordinate system.
 157:./state.h     ****    * Defines the origin of the local NorthEastDown coordinate system
 158:./state.h     ****    * in ECEF (EarthCenteredEarthFixed) and LLA (LatitudeLongitudeAlt)
 159:./state.h     ****    * coordinates and the roation matrix from ECEF to local frame.
 160:./state.h     ****    * (int version)
 161:./state.h     ****    */
 162:./state.h     ****   struct LtpDef_i ned_origin_i;
 163:./state.h     **** 
 164:./state.h     ****   /**
 165:./state.h     ****    * true if local int coordinate frame is initialsed
 166:./state.h     ****    */
 167:./state.h     ****   bool_t ned_initialized_i;
 168:./state.h     **** 
 169:./state.h     ****   /**
 170:./state.h     ****    * Position in North East Down coordinates.
 171:./state.h     ****    * with respect to ned_origin_i (flat earth)
 172:./state.h     ****    * Units: m in BFP with INT32_POS_FRAC
 173:./state.h     ****    */
 174:./state.h     ****   struct NedCoor_i ned_pos_i;
 175:./state.h     **** 
 176:./state.h     ****   /**
 177:./state.h     ****    * Position in East North Up coordinates.
 178:./state.h     ****    * with respect to ned_origin_i (flat earth)
 179:./state.h     ****    * Units: m in BFP with INT32_POS_FRAC
 180:./state.h     ****    */
 181:./state.h     ****   struct EnuCoor_i enu_pos_i;
 182:./state.h     **** 
 183:./state.h     ****   /**
 184:./state.h     ****    * Position in UTM coordinates.
 185:./state.h     ****    * Units x,y: meters.
 186:./state.h     ****    * Units z: meters above MSL
 187:./state.h     ****    */
 188:./state.h     ****   struct UtmCoor_f utm_pos_f;
 189:./state.h     **** 
 190:./state.h     ****   /**
 191:./state.h     ****    * Altitude above ground level.
 192:./state.h     ****    * Unit: meters
 193:./state.h     ****    */
 194:./state.h     ****   float alt_agl_f;
 195:./state.h     **** 
 196:./state.h     ****   /**
 197:./state.h     ****    * Position in Latitude, Longitude and Altitude.
 198:./state.h     ****    * Units lat,lon: radians
 199:./state.h     ****    * Units alt: meters above reference ellipsoid
 200:./state.h     ****    */
 201:./state.h     ****   struct LlaCoor_f lla_pos_f;
 202:./state.h     **** 
 203:./state.h     ****   /**
 204:./state.h     ****    * Position in EarthCenteredEarthFixed coordinates.
 205:./state.h     ****    * Units: meters
 206:./state.h     ****    */
 207:./state.h     ****   struct EcefCoor_f ecef_pos_f;
 208:./state.h     **** 
 209:./state.h     ****   /**
 210:./state.h     ****    * Definition of the local (flat earth) coordinate system.
 211:./state.h     ****    * Defines the origin of the local NorthEastDown coordinate system
 212:./state.h     ****    * in ECEF (EarthCenteredEarthFixed) and LLA (LatitudeLongitudeAlt)
 213:./state.h     ****    * coordinates and the roation matrix from ECEF to local frame.
 214:./state.h     ****    * (float version)
 215:./state.h     ****    */
 216:./state.h     ****   struct LtpDef_f ned_origin_f;
 217:./state.h     **** 
 218:./state.h     ****   /// True if local float coordinate frame is initialsed
 219:./state.h     ****   bool_t ned_initialized_f;
 220:./state.h     **** 
 221:./state.h     ****   /**
 222:./state.h     ****    * Definition of the origin of Utm coordinate system.
 223:./state.h     ****    * Defines the origin of the local NorthEastDown coordinate system
 224:./state.h     ****    * in UTM coordinates, used as a reference when ned_origin is not
 225:./state.h     ****    * initialized.
 226:./state.h     ****    * (float version)
 227:./state.h     ****    */
 228:./state.h     ****   struct UtmCoor_f utm_origin_f;
 229:./state.h     **** 
 230:./state.h     ****   /// True if utm origin (float) coordinate frame is initialsed
 231:./state.h     ****   bool_t utm_initialized_f;
 232:./state.h     **** 
 233:./state.h     ****   /**
 234:./state.h     ****    * Position in North East Down coordinates.
 235:./state.h     ****    * with respect to ned_origin_i (flat earth)
 236:./state.h     ****    * Units: meters
 237:./state.h     ****    */
 238:./state.h     ****   struct NedCoor_f ned_pos_f;
 239:./state.h     **** 
 240:./state.h     ****   /**
 241:./state.h     ****    * Position in East North Up coordinates.
 242:./state.h     ****    * with respect to ned_origin_i (flat earth)
 243:./state.h     ****    * Units: meters
 244:./state.h     ****    */
 245:./state.h     ****   struct EnuCoor_f enu_pos_f;
 246:./state.h     ****   /** @}*/
 247:./state.h     **** 
 248:./state.h     **** 
 249:./state.h     ****   /** @addtogroup state_velocity
 250:./state.h     ****    *  @{ */
 251:./state.h     ****   /**
 252:./state.h     ****    * Holds the status bits for all ground speed representations.
 253:./state.h     ****    * When the corresponding bit is one the representation
 254:./state.h     ****    * is already computed.
 255:./state.h     ****    */
 256:./state.h     ****   uint16_t speed_status;
 257:./state.h     **** 
 258:./state.h     ****   /**
 259:./state.h     ****    * Velocity in EarthCenteredEarthFixed coordinates.
 260:./state.h     ****    * Units: m/s in BFP with #INT32_SPEED_FRAC
 261:./state.h     ****    */
 262:./state.h     ****   struct EcefCoor_i ecef_speed_i;
 263:./state.h     **** 
 264:./state.h     ****   /**
 265:./state.h     ****    * Velocity in North East Down coordinates.
 266:./state.h     ****    * Units: m/s in BFP with #INT32_SPEED_FRAC
 267:./state.h     ****    */
 268:./state.h     ****   struct NedCoor_i ned_speed_i;
 269:./state.h     **** 
 270:./state.h     ****   /**
 271:./state.h     ****    * Velocity in East North Up coordinates.
 272:./state.h     ****    * Units: m/s in BFP with #INT32_SPEED_FRAC
 273:./state.h     ****    */
 274:./state.h     ****   struct EnuCoor_i enu_speed_i;
 275:./state.h     **** 
 276:./state.h     ****   /**
 277:./state.h     ****    * Norm of horizontal ground speed.
 278:./state.h     ****    * Unit: m/s in BFP with #INT32_SPEED_FRAC
 279:./state.h     ****    */
 280:./state.h     ****   int32_t h_speed_norm_i;
 281:./state.h     **** 
 282:./state.h     ****   /**
 283:./state.h     ****    * Direction of horizontal ground speed.
 284:./state.h     ****    * Unit: rad in BFP with #INT32_ANGLE_FRAC
 285:./state.h     ****    * (clockwise, zero=north)
 286:./state.h     ****    */
 287:./state.h     ****   int32_t h_speed_dir_i;
 288:./state.h     **** 
 289:./state.h     ****   /**
 290:./state.h     ****    * Velocity in EarthCenteredEarthFixed coordinates.
 291:./state.h     ****    * Units: m/s
 292:./state.h     ****    */
 293:./state.h     ****   struct EcefCoor_f ecef_speed_f;
 294:./state.h     **** 
 295:./state.h     ****   /**
 296:./state.h     ****    * @brief speed in North East Down coordinates
 297:./state.h     ****    * @details Units: m/s */
 298:./state.h     ****   struct NedCoor_f ned_speed_f;
 299:./state.h     **** 
 300:./state.h     ****   /**
 301:./state.h     ****    * Velocity in East North Up coordinates.
 302:./state.h     ****    * Units: m/s
 303:./state.h     ****    */
 304:./state.h     ****   struct EnuCoor_f enu_speed_f;
 305:./state.h     **** 
 306:./state.h     ****   /**
 307:./state.h     ****    * Norm of horizontal ground speed.
 308:./state.h     ****    * Unit: m/s
 309:./state.h     ****    */
 310:./state.h     ****   float h_speed_norm_f;
 311:./state.h     **** 
 312:./state.h     ****   /**
 313:./state.h     ****    * Direction of horizontal ground speed.
 314:./state.h     ****    * Unit: rad (clockwise, zero=north)
 315:./state.h     ****    */
 316:./state.h     ****   float h_speed_dir_f;
 317:./state.h     ****   /** @}*/
 318:./state.h     **** 
 319:./state.h     **** 
 320:./state.h     ****   /** @addtogroup state_acceleration
 321:./state.h     ****    *  @{ */
 322:./state.h     ****   /**
 323:./state.h     ****    * Holds the status bits for all acceleration representations.
 324:./state.h     ****    * When the corresponding bit is one the representation
 325:./state.h     ****    * is already computed.
 326:./state.h     ****    */
 327:./state.h     ****   uint8_t accel_status;
 328:./state.h     **** 
 329:./state.h     ****   /**
 330:./state.h     ****    * Acceleration in North East Down coordinates.
 331:./state.h     ****    * Units: m/s^2 in BFP with #INT32_ACCEL_FRAC
 332:./state.h     ****    */
 333:./state.h     ****   struct NedCoor_i ned_accel_i;
 334:./state.h     **** 
 335:./state.h     ****   /**
 336:./state.h     ****    * Acceleration in EarthCenteredEarthFixed coordinates.
 337:./state.h     ****    * Units: m/s^2 in BFP with INT32_ACCEL_FRAC
 338:./state.h     ****    */
 339:./state.h     ****   struct EcefCoor_i ecef_accel_i;
 340:./state.h     **** 
 341:./state.h     ****   /**
 342:./state.h     ****    * Acceleration in North East Down coordinates.
 343:./state.h     ****    * Units: m/s^2
 344:./state.h     ****    */
 345:./state.h     ****   struct NedCoor_f ned_accel_f;
 346:./state.h     **** 
 347:./state.h     ****   /**
 348:./state.h     ****    * Acceleration in EarthCenteredEarthFixed coordinates.
 349:./state.h     ****    * Units: m/s^2
 350:./state.h     ****    */
 351:./state.h     ****   struct EcefCoor_f ecef_accel_f;
 352:./state.h     ****   /** @}*/
 353:./state.h     **** 
 354:./state.h     **** 
 355:./state.h     ****   /** @defgroup state_attitude Attitude representations
 356:./state.h     ****    */
 357:./state.h     ****   struct OrientationReps ned_to_body_orientation;
 358:./state.h     **** 
 359:./state.h     **** 
 360:./state.h     ****   /** @addtogroup state_rate
 361:./state.h     ****    *  @{ */
 362:./state.h     ****   /**
 363:./state.h     ****    * Holds the status bits for all angular rate representations.
 364:./state.h     ****    * When the corresponding bit is one the representation
 365:./state.h     ****    * is already computed.
 366:./state.h     ****    */
 367:./state.h     ****   uint8_t rate_status;
 368:./state.h     **** 
 369:./state.h     ****   /**
 370:./state.h     ****    * Angular rates in body frame.
 371:./state.h     ****    * Units: rad/s in BFP with #INT32_RATE_FRAC
 372:./state.h     ****    */
 373:./state.h     ****   struct Int32Rates  body_rates_i;
 374:./state.h     **** 
 375:./state.h     ****   /**
 376:./state.h     ****    * Angular rates in body frame.
 377:./state.h     ****    * Units: rad/s
 378:./state.h     ****    */
 379:./state.h     ****   struct FloatRates  body_rates_f;
 380:./state.h     ****   /** @}*/
 381:./state.h     **** 
 382:./state.h     **** 
 383:./state.h     ****   /** @addtogroup state_wind_airspeed
 384:./state.h     ****    *  @{ */
 385:./state.h     ****   /**
 386:./state.h     ****    * Holds the status bits for all wind- and airspeed representations.
 387:./state.h     ****    * When the corresponding bit is one the representation
 388:./state.h     ****    * is already computed.
 389:./state.h     ****    */
 390:./state.h     ****   uint8_t wind_air_status;
 391:./state.h     **** 
 392:./state.h     ****   /**
 393:./state.h     ****    * Horizontal windspeed in north/east.
 394:./state.h     ****    * Units: m/s in BFP with #INT32_SPEED_FRAC
 395:./state.h     ****    */
 396:./state.h     ****   struct Int32Vect2 h_windspeed_i;
 397:./state.h     **** 
 398:./state.h     ****   /**
 399:./state.h     ****    * Norm of horizontal ground speed.
 400:./state.h     ****    * @details Unit: m/s in BFP with #INT32_SPEED_FRAC
 401:./state.h     ****    */
 402:./state.h     ****   int32_t airspeed_i;
 403:./state.h     **** 
 404:./state.h     ****   /**
 405:./state.h     ****    * Horizontal windspeed.
 406:./state.h     ****    * Units: m/s with x=north, y=east
 407:./state.h     ****    */
 408:./state.h     ****   struct FloatVect2 h_windspeed_f;
 409:./state.h     **** 
 410:./state.h     ****   /**
 411:./state.h     ****    * Norm of relative air speed.
 412:./state.h     ****    * Unit: m/s
 413:./state.h     ****    */
 414:./state.h     ****   float airspeed_f;
 415:./state.h     **** 
 416:./state.h     ****   /**
 417:./state.h     ****    * Angle of attack
 418:./state.h     ****    * Unit: rad
 419:./state.h     ****    */
 420:./state.h     ****   float angle_of_attack_f;
 421:./state.h     **** 
 422:./state.h     ****   /**
 423:./state.h     ****    * Sideslip angle
 424:./state.h     ****    * Unit: rad
 425:./state.h     ****    */
 426:./state.h     ****   float sideslip_f;
 427:./state.h     **** 
 428:./state.h     ****   /** @}*/
 429:./state.h     **** 
 430:./state.h     **** };
 431:./state.h     **** 
 432:./state.h     **** extern struct State state;
 433:./state.h     **** 
 434:./state.h     **** extern void stateInit(void);
 435:./state.h     **** 
 436:./state.h     **** /** @addtogroup state_position
 437:./state.h     ****  *  @{ */
 438:./state.h     **** 
 439:./state.h     **** /// Set the local (flat earth) coordinate frame origin (int).
 440:./state.h     **** static inline void stateSetLocalOrigin_i(struct LtpDef_i* ltp_def) {
 441:./state.h     ****   memcpy(&state.ned_origin_i, ltp_def, sizeof(struct LtpDef_i));
 442:./state.h     ****   /* convert to float */
 443:./state.h     ****   ECEF_FLOAT_OF_BFP(state.ned_origin_f.ecef, state.ned_origin_i.ecef);
 444:./state.h     ****   LLA_FLOAT_OF_BFP(state.ned_origin_f.lla, state.ned_origin_i.lla);
 445:./state.h     ****   RMAT_FLOAT_OF_BFP(state.ned_origin_f.ltp_of_ecef, state.ned_origin_i.ltp_of_ecef);
 446:./state.h     ****   state.ned_origin_f.hmsl = M_OF_MM(state.ned_origin_i.hmsl);
 447:./state.h     **** 
 448:./state.h     ****   /* clear bits for all local frame representations */
 449:./state.h     ****   state.pos_status &= ~(POS_LOCAL_COORD);
 450:./state.h     ****   state.speed_status &= ~(SPEED_LOCAL_COORD);
 451:./state.h     ****   ClearBit(state.accel_status, ACCEL_NED_I);
 452:./state.h     ****   ClearBit(state.accel_status, ACCEL_NED_F);
 453:./state.h     **** 
 454:./state.h     ****   state.ned_initialized_i = TRUE;
 455:./state.h     ****   state.ned_initialized_f = TRUE;
 456:./state.h     **** }
 457:./state.h     **** 
 458:./state.h     **** /// Set the local (flat earth) coordinate frame origin from UTM (float).
 459:./state.h     **** static inline void stateSetLocalUtmOrigin_f(struct UtmCoor_f* utm_def) {
 460:./state.h     ****   memcpy(&state.utm_origin_f, utm_def, sizeof(struct UtmCoor_f));
 461:./state.h     ****   state.utm_initialized_f = TRUE;
 462:./state.h     **** 
 463:./state.h     ****   /* clear bits for all local frame representations */
 464:./state.h     ****   state.pos_status &= ~(POS_LOCAL_COORD);
 465:./state.h     ****   state.speed_status &= ~(SPEED_LOCAL_COORD);
 466:./state.h     ****   ClearBit(state.accel_status, ACCEL_NED_I);
 467:./state.h     ****   ClearBit(state.accel_status, ACCEL_NED_F);
 468:./state.h     **** }
 469:./state.h     **** /*******************************************************************************
 470:./state.h     ****  *                                                                             *
 471:./state.h     ****  * Set and Get functions for the POSITION representations                      *
 472:./state.h     ****  *                                                                             *
 473:./state.h     ****  ******************************************************************************/
 474:./state.h     **** 
 475:./state.h     **** /************* declaration of transformation functions ************/
 476:./state.h     **** extern void stateCalcPositionEcef_i(void);
 477:./state.h     **** extern void stateCalcPositionNed_i(void);
 478:./state.h     **** extern void stateCalcPositionEnu_i(void);
 479:./state.h     **** extern void stateCalcPositionLla_i(void);
 480:./state.h     **** extern void stateCalcPositionUtm_f(void);
 481:./state.h     **** extern void stateCalcPositionEcef_f(void);
 482:./state.h     **** extern void stateCalcPositionNed_f(void);
 483:./state.h     **** extern void stateCalcPositionEnu_f(void);
 484:./state.h     **** extern void stateCalcPositionLla_f(void);
 485:./state.h     **** 
 486:./state.h     **** /*********************** validity test functions ******************/
 487:./state.h     **** 
 488:./state.h     **** /// Test if local coordinates are valid.
 489:./state.h     **** static inline bool_t stateIsLocalCoordinateValid(void) {
 490:./state.h     ****   return ((state.ned_initialized_i || state.utm_initialized_f) && (state.pos_status & (POS_LOCAL_CO
 491:./state.h     **** }
 492:./state.h     **** 
 493:./state.h     **** /// Test if global coordinates are valid.
 494:./state.h     **** static inline bool_t stateIsGlobalCoordinateValid(void) {
 495:./state.h     ****   return ((state.pos_status & (POS_GLOBAL_COORD)) || stateIsLocalCoordinateValid());
 496:./state.h     **** }
 497:./state.h     **** 
 498:./state.h     **** /************************ Set functions ****************************/
 499:./state.h     **** 
 500:./state.h     **** /// Set position from ECEF coordinates (int).
 501:./state.h     **** static inline void stateSetPositionEcef_i(struct EcefCoor_i* ecef_pos) {
 502:./state.h     ****   INT32_VECT3_COPY(state.ecef_pos_i, *ecef_pos);
 503:./state.h     ****   /* clear bits for all position representations and only set the new one */
 504:./state.h     ****   state.pos_status = (1 << POS_ECEF_I);
 505:./state.h     **** }
 506:./state.h     **** 
 507:./state.h     **** /// Set position from local NED coordinates (int).
 508:./state.h     **** static inline void stateSetPositionNed_i(struct NedCoor_i* ned_pos) {
 509:./state.h     ****   INT32_VECT3_COPY(state.ned_pos_i, *ned_pos);
 510:./state.h     ****   /* clear bits for all position representations and only set the new one */
 511:./state.h     ****   state.pos_status = (1 << POS_NED_I);
 512:./state.h     **** }
 513:./state.h     **** 
 514:./state.h     **** /// Set position from local ENU coordinates (int).
 515:./state.h     **** static inline void stateSetPositionEnu_i(struct EnuCoor_i* enu_pos) {
 516:./state.h     ****   INT32_VECT3_COPY(state.enu_pos_i, *enu_pos);
 517:./state.h     ****   /* clear bits for all position representations and only set the new one */
 518:./state.h     ****   state.pos_status = (1 << POS_ENU_I);
 519:./state.h     **** }
 520:./state.h     **** 
 521:./state.h     **** /// Set position from LLA coordinates (int).
 522:./state.h     **** static inline void stateSetPositionLla_i(struct LlaCoor_i* lla_pos) {
 523:./state.h     ****   LLA_COPY(state.lla_pos_i, *lla_pos);
 524:./state.h     ****   /* clear bits for all position representations and only set the new one */
 525:./state.h     ****   state.pos_status = (1 << POS_LLA_I);
 526:./state.h     **** }
 527:./state.h     **** 
 528:./state.h     **** /// Set multiple position coordinates (int).
 529:./state.h     **** static inline void stateSetPosition_i(
 530:./state.h     ****     struct EcefCoor_i* ecef_pos,
 531:./state.h     ****     struct NedCoor_i* ned_pos,
 532:./state.h     ****     struct EnuCoor_i* enu_pos,
 533:./state.h     ****     struct LlaCoor_i* lla_pos) {
 534:./state.h     ****   /* clear all status bit */
 535:./state.h     ****   state.pos_status = 0;
 536:./state.h     ****   if (ecef_pos != NULL) {
 537:./state.h     ****     INT32_VECT3_COPY(state.ecef_pos_i, *ecef_pos);
 538:./state.h     ****     state.pos_status |= (1 << POS_ECEF_I);
 539:./state.h     ****   }
 540:./state.h     ****   if (ned_pos != NULL) {
 541:./state.h     ****     INT32_VECT3_COPY(state.ned_pos_i, *ned_pos);
 542:./state.h     ****     state.pos_status |= (1 << POS_NED_I);
 543:./state.h     ****   }
 544:./state.h     ****   if (enu_pos != NULL) {
 545:./state.h     ****     INT32_VECT3_COPY(state.enu_pos_i, *enu_pos);
 546:./state.h     ****     state.pos_status |= (1 << POS_ENU_I);
 547:./state.h     ****   }
 548:./state.h     ****   if (lla_pos != NULL) {
 549:./state.h     ****     LLA_COPY(state.lla_pos_i, *lla_pos);
 550:./state.h     ****     state.pos_status |= (1 << POS_LLA_I);
 551:./state.h     ****   }
 552:./state.h     **** }
 553:./state.h     **** 
 554:./state.h     **** /// Set position from UTM coordinates (float).
 555:./state.h     **** static inline void stateSetPositionUtm_f(struct UtmCoor_f* utm_pos) {
 556:./state.h     ****   memcpy(&state.utm_pos_f, utm_pos, sizeof(struct UtmCoor_f));
 557:./state.h     ****   /* clear bits for all position representations and only set the new one */
 558:./state.h     ****   state.pos_status = (1 << POS_UTM_F);
 559:./state.h     **** }
 560:./state.h     **** 
 561:./state.h     **** /// Set position from ECEF coordinates (float).
 562:./state.h     **** static inline void stateSetPositionEcef_f(struct EcefCoor_f* ecef_pos) {
 563:./state.h     ****   VECT3_COPY(state.ecef_pos_f, *ecef_pos);
 564:./state.h     ****   /* clear bits for all position representations and only set the new one */
 565:./state.h     ****   state.pos_status = (1 << POS_ECEF_F);
 566:./state.h     **** }
 567:./state.h     **** 
 568:./state.h     **** /// Set position from local NED coordinates (float).
 569:./state.h     **** static inline void stateSetPositionNed_f(struct NedCoor_f* ned_pos) {
 570:./state.h     ****   VECT3_COPY(state.ned_pos_f, *ned_pos);
 571:./state.h     ****   /* clear bits for all position representations and only set the new one */
 572:./state.h     ****   state.pos_status = (1 << POS_NED_F);
 573:./state.h     **** }
 574:./state.h     **** 
 575:./state.h     **** /// Set position from local ENU coordinates (float).
 576:./state.h     **** static inline void stateSetPositionEnu_f(struct EnuCoor_f* enu_pos) {
 577:./state.h     ****   VECT3_COPY(state.enu_pos_f, *enu_pos);
 578:./state.h     ****   /* clear bits for all position representations and only set the new one */
 579:./state.h     ****   state.pos_status = (1 << POS_ENU_F);
 580:./state.h     **** }
 581:./state.h     **** 
 582:./state.h     **** /// Set position from LLA coordinates (float).
 583:./state.h     **** static inline void stateSetPositionLla_f(struct LlaCoor_f* lla_pos) {
 584:./state.h     ****   LLA_COPY(state.lla_pos_f, *lla_pos);
 585:./state.h     ****   /* clear bits for all position representations and only set the new one */
 586:./state.h     ****   state.pos_status = (1 << POS_LLA_F);
 587:./state.h     **** }
 588:./state.h     **** 
 589:./state.h     **** /// Set multiple position coordinates (float).
 590:./state.h     **** static inline void stateSetPosition_f(
 591:./state.h     ****     struct EcefCoor_f* ecef_pos,
 592:./state.h     ****     struct NedCoor_f* ned_pos,
 593:./state.h     ****     struct EnuCoor_f* enu_pos,
 594:./state.h     ****     struct LlaCoor_f* lla_pos,
 595:./state.h     ****     struct UtmCoor_f* utm_pos) {
 596:./state.h     ****   /* clear all status bit */
 597:./state.h     ****   state.pos_status = 0;
 598:./state.h     ****   if (ecef_pos != NULL) {
 599:./state.h     ****     VECT3_COPY(state.ecef_pos_f, *ecef_pos);
 600:./state.h     ****     state.pos_status |= (1 << POS_ECEF_F);
 601:./state.h     ****   }
 602:./state.h     ****   if (ned_pos != NULL) {
 603:./state.h     ****     VECT3_COPY(state.ned_pos_f, *ned_pos);
 604:./state.h     ****     state.pos_status |= (1 << POS_NED_F);
 605:./state.h     ****   }
 606:./state.h     ****   if (enu_pos != NULL) {
 607:./state.h     ****     VECT3_COPY(state.enu_pos_f, *enu_pos);
 608:./state.h     ****     state.pos_status |= (1 << POS_ENU_F);
 609:./state.h     ****   }
 610:./state.h     ****   if (lla_pos != NULL) {
 611:./state.h     ****     LLA_COPY(state.lla_pos_f, *lla_pos);
 612:./state.h     ****     state.pos_status |= (1 << POS_LLA_F);
 613:./state.h     ****   }
 614:./state.h     ****   if (utm_pos != NULL) {
 615:./state.h     ****     memcpy(&state.utm_pos_f, utm_pos, sizeof(struct UtmCoor_f));
 616:./state.h     ****     state.pos_status |= (1 << POS_UTM_F);
 617:./state.h     ****   }
 618:./state.h     **** }
 619:./state.h     **** 
 620:./state.h     **** /************************ Get functions ****************************/
 621:./state.h     **** 
 622:./state.h     **** /// Get position in ECEF coordinates (int).
 623:./state.h     **** static inline struct EcefCoor_i* stateGetPositionEcef_i(void) {
 624:./state.h     ****   if (!bit_is_set(state.pos_status, POS_ECEF_I))
 625:./state.h     ****     stateCalcPositionEcef_i();
 626:./state.h     ****   return &state.ecef_pos_i;
 627:./state.h     **** }
 628:./state.h     **** 
 629:./state.h     **** /// Get position in local NED coordinates (int).
 630:./state.h     **** static inline struct NedCoor_i* stateGetPositionNed_i(void) {
 631:./state.h     ****   if (!bit_is_set(state.pos_status, POS_NED_I))
 632:./state.h     ****     stateCalcPositionNed_i();
 633:./state.h     ****   return &state.ned_pos_i;
 634:./state.h     **** }
 635:./state.h     **** 
 636:./state.h     **** /// Get position in local ENU coordinates (int).
 637:./state.h     **** static inline struct EnuCoor_i* stateGetPositionEnu_i(void) {
  26              		.loc 1 637 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 08B5     		push	{r3, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 3, -8
  34              		.cfi_offset 14, -4
 638:./state.h     ****   if (!bit_is_set(state.pos_status, POS_ENU_I))
  35              		.loc 1 638 0
  36 0002 044B     		ldr	r3, .L4
  37 0004 1888     		ldrh	r0, [r3, #0]
  38 0006 4307     		lsls	r3, r0, #29
  39 0008 01D4     		bmi	.L2
 639:./state.h     ****     stateCalcPositionEnu_i();
  40              		.loc 1 639 0
  41 000a FFF7FEFF 		bl	stateCalcPositionEnu_i
  42              	.LVL0:
  43              	.L2:
 640:./state.h     ****   return &state.enu_pos_i;
 641:./state.h     **** }
  44              		.loc 1 641 0
  45 000e 0248     		ldr	r0, .L4+4
  46 0010 08BD     		pop	{r3, pc}
  47              	.L5:
  48 0012 00BF     		.align	2
  49              	.L4:
  50 0014 00000000 		.word	state
  51 0018 6C000000 		.word	state+108
  52              		.cfi_endproc
  53              	.LFE51:
  55              		.global	__aeabi_fmul
  56              		.global	__aeabi_f2iz
  57              		.global	__aeabi_f2d
  58              		.global	__aeabi_dmul
  59              		.global	__aeabi_d2iz
  60              		.section	.text.nav_init,"ax",%progbits
  61              		.align	1
  62              		.global	nav_init
  63              		.thumb
  64              		.thumb_func
  66              	nav_init:
  67              	.LFB122:
  68              		.file 2 "firmwares/rotorcraft/navigation.c"
   1:firmwares/rotorcraft/navigation.c **** /*
   2:firmwares/rotorcraft/navigation.c ****  * Copyright (C) 2008-2009 Antoine Drouin <poinix@gmail.com>
   3:firmwares/rotorcraft/navigation.c ****  *
   4:firmwares/rotorcraft/navigation.c ****  * This file is part of paparazzi.
   5:firmwares/rotorcraft/navigation.c ****  *
   6:firmwares/rotorcraft/navigation.c ****  * paparazzi is free software; you can redistribute it and/or modify
   7:firmwares/rotorcraft/navigation.c ****  * it under the terms of the GNU General Public License as published by
   8:firmwares/rotorcraft/navigation.c ****  * the Free Software Foundation; either version 2, or (at your option)
   9:firmwares/rotorcraft/navigation.c ****  * any later version.
  10:firmwares/rotorcraft/navigation.c ****  *
  11:firmwares/rotorcraft/navigation.c ****  * paparazzi is distributed in the hope that it will be useful,
  12:firmwares/rotorcraft/navigation.c ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:firmwares/rotorcraft/navigation.c ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:firmwares/rotorcraft/navigation.c ****  * GNU General Public License for more details.
  15:firmwares/rotorcraft/navigation.c ****  *
  16:firmwares/rotorcraft/navigation.c ****  * You should have received a copy of the GNU General Public License
  17:firmwares/rotorcraft/navigation.c ****  * along with paparazzi; see the file COPYING.  If not, write to
  18:firmwares/rotorcraft/navigation.c ****  * the Free Software Foundation, 59 Temple Place - Suite 330,
  19:firmwares/rotorcraft/navigation.c ****  * Boston, MA 02111-1307, USA.
  20:firmwares/rotorcraft/navigation.c ****  */
  21:firmwares/rotorcraft/navigation.c **** 
  22:firmwares/rotorcraft/navigation.c **** /**
  23:firmwares/rotorcraft/navigation.c ****  * @file firmwares/rotorcraft/navigation.c
  24:firmwares/rotorcraft/navigation.c ****  *
  25:firmwares/rotorcraft/navigation.c ****  * Rotorcraft navigation functions.
  26:firmwares/rotorcraft/navigation.c ****  */
  27:firmwares/rotorcraft/navigation.c **** 
  28:firmwares/rotorcraft/navigation.c **** 
  29:firmwares/rotorcraft/navigation.c **** #define NAV_C
  30:firmwares/rotorcraft/navigation.c **** 
  31:firmwares/rotorcraft/navigation.c **** #include "firmwares/rotorcraft/navigation.h"
  32:firmwares/rotorcraft/navigation.c **** 
  33:firmwares/rotorcraft/navigation.c **** #include "pprz_debug.h"
  34:firmwares/rotorcraft/navigation.c **** #include "subsystems/gps.h"
  35:firmwares/rotorcraft/navigation.c **** #include "subsystems/ins.h"
  36:firmwares/rotorcraft/navigation.c **** #include "state.h"
  37:firmwares/rotorcraft/navigation.c **** 
  38:firmwares/rotorcraft/navigation.c **** #include "firmwares/rotorcraft/autopilot.h"
  39:firmwares/rotorcraft/navigation.c **** #include "generated/modules.h"
  40:firmwares/rotorcraft/navigation.c **** #include "generated/flight_plan.h"
  41:firmwares/rotorcraft/navigation.c **** 
  42:firmwares/rotorcraft/navigation.c **** /* for default GUIDANCE_H_USE_REF */
  43:firmwares/rotorcraft/navigation.c **** #include "firmwares/rotorcraft/guidance/guidance_h.h"
  44:firmwares/rotorcraft/navigation.c **** 
  45:firmwares/rotorcraft/navigation.c **** #include "math/pprz_algebra_int.h"
  46:firmwares/rotorcraft/navigation.c **** 
  47:firmwares/rotorcraft/navigation.c **** const uint8_t nb_waypoint = NB_WAYPOINT;
  48:firmwares/rotorcraft/navigation.c **** struct EnuCoor_i waypoints[NB_WAYPOINT];
  49:firmwares/rotorcraft/navigation.c **** 
  50:firmwares/rotorcraft/navigation.c **** struct EnuCoor_i navigation_target;
  51:firmwares/rotorcraft/navigation.c **** struct EnuCoor_i navigation_carrot;
  52:firmwares/rotorcraft/navigation.c **** 
  53:firmwares/rotorcraft/navigation.c **** struct EnuCoor_i nav_last_point;
  54:firmwares/rotorcraft/navigation.c **** 
  55:firmwares/rotorcraft/navigation.c **** uint8_t last_wp __attribute__ ((unused));
  56:firmwares/rotorcraft/navigation.c **** 
  57:firmwares/rotorcraft/navigation.c **** int32_t ground_alt;
  58:firmwares/rotorcraft/navigation.c **** 
  59:firmwares/rotorcraft/navigation.c **** uint8_t horizontal_mode;
  60:firmwares/rotorcraft/navigation.c **** uint8_t nav_segment_start, nav_segment_end;
  61:firmwares/rotorcraft/navigation.c **** uint8_t nav_circle_centre;
  62:firmwares/rotorcraft/navigation.c **** int32_t nav_circle_radius, nav_circle_qdr, nav_circle_radians;
  63:firmwares/rotorcraft/navigation.c **** 
  64:firmwares/rotorcraft/navigation.c **** int32_t nav_leg_progress;
  65:firmwares/rotorcraft/navigation.c **** int32_t nav_leg_length;
  66:firmwares/rotorcraft/navigation.c **** 
  67:firmwares/rotorcraft/navigation.c **** int32_t nav_roll, nav_pitch;
  68:firmwares/rotorcraft/navigation.c **** int32_t nav_heading, nav_course;
  69:firmwares/rotorcraft/navigation.c **** float nav_radius;
  70:firmwares/rotorcraft/navigation.c **** 
  71:firmwares/rotorcraft/navigation.c **** #ifndef DEFAULT_CIRCLE_RADIUS
  72:firmwares/rotorcraft/navigation.c **** #define DEFAULT_CIRCLE_RADIUS 0.
  73:firmwares/rotorcraft/navigation.c **** #endif
  74:firmwares/rotorcraft/navigation.c **** 
  75:firmwares/rotorcraft/navigation.c **** uint8_t vertical_mode;
  76:firmwares/rotorcraft/navigation.c **** uint32_t nav_throttle;
  77:firmwares/rotorcraft/navigation.c **** int32_t nav_climb, nav_altitude, nav_flight_altitude;
  78:firmwares/rotorcraft/navigation.c **** float flight_altitude;
  79:firmwares/rotorcraft/navigation.c **** 
  80:firmwares/rotorcraft/navigation.c **** static inline void nav_set_altitude( void );
  81:firmwares/rotorcraft/navigation.c **** 
  82:firmwares/rotorcraft/navigation.c **** #define CLOSE_TO_WAYPOINT (15 << 8)
  83:firmwares/rotorcraft/navigation.c **** #define ARRIVED_AT_WAYPOINT (3 << 8)
  84:firmwares/rotorcraft/navigation.c **** #define CARROT_DIST (12 << 8)
  85:firmwares/rotorcraft/navigation.c **** 
  86:firmwares/rotorcraft/navigation.c **** void nav_init(void) {
  69              		.loc 2 86 0
  70              		.cfi_startproc
  71              		@ args = 0, pretend = 0, frame = 72
  72              		@ frame_needed = 0, uses_anonymous_args = 0
  73 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  74              	.LCFI1:
  75              		.cfi_def_cfa_offset 20
  76              		.cfi_offset 4, -20
  77              		.cfi_offset 5, -16
  78              		.cfi_offset 6, -12
  79              		.cfi_offset 7, -8
  80              		.cfi_offset 14, -4
  81 0002 93B0     		sub	sp, sp, #76
  82              	.LCFI2:
  83              		.cfi_def_cfa_offset 96
  87:firmwares/rotorcraft/navigation.c ****   // convert to
  88:firmwares/rotorcraft/navigation.c ****   const struct EnuCoor_f wp_tmp_float[NB_WAYPOINT] = WAYPOINTS;
  84              		.loc 2 88 0
  85 0004 6846     		mov	r0, sp
  86 0006 2E49     		ldr	r1, .L9
  87 0008 4822     		movs	r2, #72
  88 000a FFF7FEFF 		bl	memcpy
  89              	.LVL1:
  90 000e 0024     		movs	r4, #0
  91              	.LVL2:
  92              	.L7:
  89:firmwares/rotorcraft/navigation.c ****   // init int32 waypoints
  90:firmwares/rotorcraft/navigation.c ****   uint8_t i = 0;
  91:firmwares/rotorcraft/navigation.c ****   for (i = 0; i < nb_waypoint; i++) {
  92:firmwares/rotorcraft/navigation.c ****     waypoints[i].x = POS_BFP_OF_REAL(wp_tmp_float[i].x);
  93              		.loc 2 92 0 discriminator 2
  94 0010 4FF08741 		mov	r1, #1132462080
  95 0014 5DF80400 		ldr	r0, [sp, r4]	@ float
  96 0018 FFF7FEFF 		bl	__aeabi_fmul
  97              	.LVL3:
  98 001c FFF7FEFF 		bl	__aeabi_f2iz
  99              	.LVL4:
 100 0020 284D     		ldr	r5, .L9+4
  86:firmwares/rotorcraft/navigation.c **** void nav_init(void) {
 101              		.loc 2 86 0 discriminator 2
 102 0022 00AB     		add	r3, sp, #0
 103 0024 1F19     		adds	r7, r3, r4
 104              		.loc 2 92 0 discriminator 2
 105 0026 2851     		str	r0, [r5, r4]
  93:firmwares/rotorcraft/navigation.c ****     waypoints[i].y = POS_BFP_OF_REAL(wp_tmp_float[i].y);
 106              		.loc 2 93 0 discriminator 2
 107 0028 4FF08741 		mov	r1, #1132462080
 108 002c 7868     		ldr	r0, [r7, #4]	@ float
 109 002e FFF7FEFF 		bl	__aeabi_fmul
 110              	.LVL5:
 111 0032 FFF7FEFF 		bl	__aeabi_f2iz
 112              	.LVL6:
  86:firmwares/rotorcraft/navigation.c **** void nav_init(void) {
 113              		.loc 2 86 0 discriminator 2
 114 0036 2E19     		adds	r6, r5, r4
 115              		.loc 2 93 0 discriminator 2
 116 0038 7060     		str	r0, [r6, #4]
  94:firmwares/rotorcraft/navigation.c ****     waypoints[i].z = POS_BFP_OF_REAL((wp_tmp_float[i].z - GROUND_ALT));
 117              		.loc 2 94 0 discriminator 2
 118 003a B868     		ldr	r0, [r7, #8]	@ float
 119 003c FFF7FEFF 		bl	__aeabi_f2d
 120              	.LVL7:
 121 0040 0022     		movs	r2, #0
 122 0042 214B     		ldr	r3, .L9+8
 123 0044 FFF7FEFF 		bl	__aeabi_dmul
 124              	.LVL8:
 125 0048 FFF7FEFF 		bl	__aeabi_d2iz
 126              	.LVL9:
 127 004c 0C34     		adds	r4, r4, #12
  91:firmwares/rotorcraft/navigation.c ****   for (i = 0; i < nb_waypoint; i++) {
 128              		.loc 2 91 0 discriminator 2
 129 004e 482C     		cmp	r4, #72
 130              		.loc 2 94 0 discriminator 2
 131 0050 B060     		str	r0, [r6, #8]
  91:firmwares/rotorcraft/navigation.c ****   for (i = 0; i < nb_waypoint; i++) {
 132              		.loc 2 91 0 discriminator 2
 133 0052 DDD1     		bne	.L7
  95:firmwares/rotorcraft/navigation.c ****   }
  96:firmwares/rotorcraft/navigation.c ****   nav_block = 0;
 134              		.loc 2 96 0
 135 0054 1D4A     		ldr	r2, .L9+12
  97:firmwares/rotorcraft/navigation.c ****   nav_stage = 0;
 136              		.loc 2 97 0
 137 0056 1E48     		ldr	r0, .L9+16
  96:firmwares/rotorcraft/navigation.c ****   nav_block = 0;
 138              		.loc 2 96 0
 139 0058 0023     		movs	r3, #0
 140 005a 1370     		strb	r3, [r2, #0]
 141              		.loc 2 97 0
 142 005c 0370     		strb	r3, [r0, #0]
  98:firmwares/rotorcraft/navigation.c ****   ground_alt = POS_BFP_OF_REAL(GROUND_ALT);
 143              		.loc 2 98 0
 144 005e 1D49     		ldr	r1, .L9+20
  99:firmwares/rotorcraft/navigation.c ****   nav_altitude = POS_BFP_OF_REAL(SECURITY_HEIGHT);
 145              		.loc 2 99 0
 146 0060 1D4A     		ldr	r2, .L9+24
 100:firmwares/rotorcraft/navigation.c ****   nav_flight_altitude = nav_altitude;
 147              		.loc 2 100 0
 148 0062 1E48     		ldr	r0, .L9+28
  99:firmwares/rotorcraft/navigation.c ****   nav_altitude = POS_BFP_OF_REAL(SECURITY_HEIGHT);
 149              		.loc 2 99 0
 150 0064 4FF44074 		mov	r4, #768
 151 0068 1460     		str	r4, [r2, #0]
 152              		.loc 2 100 0
 153 006a 0460     		str	r4, [r0, #0]
  98:firmwares/rotorcraft/navigation.c ****   ground_alt = POS_BFP_OF_REAL(GROUND_ALT);
 154              		.loc 2 98 0
 155 006c 0B60     		str	r3, [r1, #0]
 101:firmwares/rotorcraft/navigation.c ****   flight_altitude = SECURITY_ALT;
 156              		.loc 2 101 0
 157 006e 1C4C     		ldr	r4, .L9+32
 158 0070 1C49     		ldr	r1, .L9+36
 102:firmwares/rotorcraft/navigation.c ****   INT32_VECT3_COPY( navigation_target, waypoints[WP_HOME]);
 159              		.loc 2 102 0
 160 0072 1D4A     		ldr	r2, .L9+40
 161 0074 2869     		ldr	r0, [r5, #16]
 101:firmwares/rotorcraft/navigation.c ****   flight_altitude = SECURITY_ALT;
 162              		.loc 2 101 0
 163 0076 2160     		str	r1, [r4, #0]	@ float
 164              		.loc 2 102 0
 165 0078 6969     		ldr	r1, [r5, #20]
 166 007a EC68     		ldr	r4, [r5, #12]
 167 007c 5060     		str	r0, [r2, #4]
 168 007e 1460     		str	r4, [r2, #0]
 169 0080 9160     		str	r1, [r2, #8]
 103:firmwares/rotorcraft/navigation.c ****   INT32_VECT3_COPY( navigation_carrot, waypoints[WP_HOME]);
 170              		.loc 2 103 0
 171 0082 1A4A     		ldr	r2, .L9+44
 172 0084 1460     		str	r4, [r2, #0]
 173 0086 5060     		str	r0, [r2, #4]
 174 0088 9160     		str	r1, [r2, #8]
 104:firmwares/rotorcraft/navigation.c **** 
 105:firmwares/rotorcraft/navigation.c ****   horizontal_mode = HORIZONTAL_MODE_WAYPOINT;
 175              		.loc 2 105 0
 176 008a 1948     		ldr	r0, .L9+48
 106:firmwares/rotorcraft/navigation.c ****   vertical_mode = VERTICAL_MODE_ALT;
 177              		.loc 2 106 0
 178 008c 194A     		ldr	r2, .L9+52
 179 008e 0221     		movs	r1, #2
 105:firmwares/rotorcraft/navigation.c ****   horizontal_mode = HORIZONTAL_MODE_WAYPOINT;
 180              		.loc 2 105 0
 181 0090 0370     		strb	r3, [r0, #0]
 182              		.loc 2 106 0
 183 0092 1170     		strb	r1, [r2, #0]
 107:firmwares/rotorcraft/navigation.c **** 
 108:firmwares/rotorcraft/navigation.c ****   nav_roll = 0;
 184              		.loc 2 108 0
 185 0094 1848     		ldr	r0, .L9+56
 109:firmwares/rotorcraft/navigation.c ****   nav_pitch = 0;
 110:firmwares/rotorcraft/navigation.c ****   nav_heading = 0;
 186              		.loc 2 110 0
 187 0096 194A     		ldr	r2, .L9+60
 109:firmwares/rotorcraft/navigation.c ****   nav_pitch = 0;
 188              		.loc 2 109 0
 189 0098 1949     		ldr	r1, .L9+64
 108:firmwares/rotorcraft/navigation.c ****   nav_roll = 0;
 190              		.loc 2 108 0
 191 009a 0360     		str	r3, [r0, #0]
 192              		.loc 2 110 0
 193 009c 1360     		str	r3, [r2, #0]
 111:firmwares/rotorcraft/navigation.c ****   nav_course = 0;
 194              		.loc 2 111 0
 195 009e 1948     		ldr	r0, .L9+68
 112:firmwares/rotorcraft/navigation.c ****   nav_radius = DEFAULT_CIRCLE_RADIUS;
 196              		.loc 2 112 0
 197 00a0 194A     		ldr	r2, .L9+72
 109:firmwares/rotorcraft/navigation.c ****   nav_pitch = 0;
 198              		.loc 2 109 0
 199 00a2 0B60     		str	r3, [r1, #0]
 200              		.loc 2 112 0
 201 00a4 0021     		movs	r1, #0
 111:firmwares/rotorcraft/navigation.c ****   nav_course = 0;
 202              		.loc 2 111 0
 203 00a6 0360     		str	r3, [r0, #0]
 204              		.loc 2 112 0
 205 00a8 1160     		str	r1, [r2, #0]	@ float
 113:firmwares/rotorcraft/navigation.c ****   nav_throttle = 0;
 206              		.loc 2 113 0
 207 00aa 1848     		ldr	r0, .L9+76
 114:firmwares/rotorcraft/navigation.c ****   nav_climb = 0;
 208              		.loc 2 114 0
 209 00ac 1849     		ldr	r1, .L9+80
 115:firmwares/rotorcraft/navigation.c ****   nav_leg_progress = 0;
 210              		.loc 2 115 0
 211 00ae 194A     		ldr	r2, .L9+84
 113:firmwares/rotorcraft/navigation.c ****   nav_throttle = 0;
 212              		.loc 2 113 0
 213 00b0 0360     		str	r3, [r0, #0]
 114:firmwares/rotorcraft/navigation.c ****   nav_climb = 0;
 214              		.loc 2 114 0
 215 00b2 0B60     		str	r3, [r1, #0]
 216              		.loc 2 115 0
 217 00b4 1360     		str	r3, [r2, #0]
 116:firmwares/rotorcraft/navigation.c ****   nav_leg_length = 1;
 218              		.loc 2 116 0
 219 00b6 184B     		ldr	r3, .L9+88
 220 00b8 0120     		movs	r0, #1
 221 00ba 1860     		str	r0, [r3, #0]
 117:firmwares/rotorcraft/navigation.c **** 
 118:firmwares/rotorcraft/navigation.c **** }
 222              		.loc 2 118 0
 223 00bc 13B0     		add	sp, sp, #76
 224 00be F0BD     		pop	{r4, r5, r6, r7, pc}
 225              	.L10:
 226              		.align	2
 227              	.L9:
 228 00c0 00000000 		.word	.LANCHOR0
 229 00c4 00000000 		.word	.LANCHOR1
 230 00c8 00007040 		.word	1081081856
 231 00cc 00000000 		.word	nav_block
 232 00d0 00000000 		.word	nav_stage
 233 00d4 00000000 		.word	.LANCHOR2
 234 00d8 00000000 		.word	.LANCHOR3
 235 00dc 00000000 		.word	.LANCHOR4
 236 00e0 00000000 		.word	.LANCHOR5
 237 00e4 00004040 		.word	1077936128
 238 00e8 00000000 		.word	.LANCHOR6
 239 00ec 00000000 		.word	.LANCHOR7
 240 00f0 00000000 		.word	.LANCHOR8
 241 00f4 00000000 		.word	.LANCHOR9
 242 00f8 00000000 		.word	.LANCHOR10
 243 00fc 00000000 		.word	.LANCHOR12
 244 0100 00000000 		.word	.LANCHOR11
 245 0104 00000000 		.word	.LANCHOR13
 246 0108 00000000 		.word	.LANCHOR14
 247 010c 00000000 		.word	.LANCHOR15
 248 0110 00000000 		.word	.LANCHOR16
 249 0114 00000000 		.word	.LANCHOR17
 250 0118 00000000 		.word	.LANCHOR18
 251              		.cfi_endproc
 252              	.LFE122:
 254              		.global	__aeabi_i2d
 255              		.global	__aeabi_dcmpgt
 256              		.section	.text.nav_run,"ax",%progbits
 257              		.align	1
 258              		.global	nav_run
 259              		.thumb
 260              		.thumb_func
 262              	nav_run:
 263              	.LFB124:
 119:firmwares/rotorcraft/navigation.c **** 
 120:firmwares/rotorcraft/navigation.c **** static inline void nav_advance_carrot(void) {
 121:firmwares/rotorcraft/navigation.c ****   /* compute a vector to the waypoint */
 122:firmwares/rotorcraft/navigation.c ****   struct Int32Vect2 path_to_waypoint;
 123:firmwares/rotorcraft/navigation.c ****   VECT2_DIFF(path_to_waypoint, navigation_target, *stateGetPositionEnu_i());
 124:firmwares/rotorcraft/navigation.c **** 
 125:firmwares/rotorcraft/navigation.c ****   /* saturate it */
 126:firmwares/rotorcraft/navigation.c ****   VECT2_STRIM(path_to_waypoint, -(1<<15), (1<<15));
 127:firmwares/rotorcraft/navigation.c **** 
 128:firmwares/rotorcraft/navigation.c ****   int32_t dist_to_waypoint;
 129:firmwares/rotorcraft/navigation.c ****   INT32_VECT2_NORM(dist_to_waypoint, path_to_waypoint);
 130:firmwares/rotorcraft/navigation.c **** 
 131:firmwares/rotorcraft/navigation.c ****   if (dist_to_waypoint < CLOSE_TO_WAYPOINT) {
 132:firmwares/rotorcraft/navigation.c ****     VECT2_COPY(navigation_carrot, navigation_target);
 133:firmwares/rotorcraft/navigation.c ****   }
 134:firmwares/rotorcraft/navigation.c ****   else {
 135:firmwares/rotorcraft/navigation.c ****     struct Int32Vect2 path_to_carrot;
 136:firmwares/rotorcraft/navigation.c ****     VECT2_SMUL(path_to_carrot, path_to_waypoint, CARROT_DIST);
 137:firmwares/rotorcraft/navigation.c ****     VECT2_SDIV(path_to_carrot, path_to_carrot, dist_to_waypoint);
 138:firmwares/rotorcraft/navigation.c ****     VECT2_SUM(navigation_carrot, path_to_carrot, *stateGetPositionEnu_i());
 139:firmwares/rotorcraft/navigation.c ****   }
 140:firmwares/rotorcraft/navigation.c **** }
 141:firmwares/rotorcraft/navigation.c **** 
 142:firmwares/rotorcraft/navigation.c **** void nav_run(void) {
 264              		.loc 2 142 0
 265              		.cfi_startproc
 266              		@ args = 0, pretend = 0, frame = 0
 267              		@ frame_needed = 0, uses_anonymous_args = 0
 143:firmwares/rotorcraft/navigation.c **** 
 144:firmwares/rotorcraft/navigation.c **** #if !GUIDANCE_H_USE_REF
 145:firmwares/rotorcraft/navigation.c ****   PRINT_CONFIG_MSG("NOT using horizontal guidance reference :-(")
 146:firmwares/rotorcraft/navigation.c ****   nav_advance_carrot();
 147:firmwares/rotorcraft/navigation.c **** #else
 148:firmwares/rotorcraft/navigation.c ****   PRINT_CONFIG_MSG("Using horizontal guidance reference :-)")
 149:firmwares/rotorcraft/navigation.c ****   // if H_REF is used, CARROT_DIST is not used
 150:firmwares/rotorcraft/navigation.c ****   VECT2_COPY(navigation_carrot, navigation_target);
 268              		.loc 2 150 0
 269 0000 0F4A     		ldr	r2, .L15+8
 142:firmwares/rotorcraft/navigation.c **** void nav_run(void) {
 270              		.loc 2 142 0
 271 0002 38B5     		push	{r3, r4, r5, lr}
 272              	.LCFI3:
 273              		.cfi_def_cfa_offset 16
 274              		.cfi_offset 3, -16
 275              		.cfi_offset 4, -12
 276              		.cfi_offset 5, -8
 277              		.cfi_offset 14, -4
 278              		.loc 2 150 0
 279 0004 1168     		ldr	r1, [r2, #0]
 280 0006 0F4B     		ldr	r3, .L15+12
 281 0008 5268     		ldr	r2, [r2, #4]
 282 000a 1960     		str	r1, [r3, #0]
 283 000c 5A60     		str	r2, [r3, #4]
 284              	.LBB12:
 285              	.LBB13:
 151:firmwares/rotorcraft/navigation.c **** #endif
 152:firmwares/rotorcraft/navigation.c **** 
 153:firmwares/rotorcraft/navigation.c ****   nav_set_altitude();
 154:firmwares/rotorcraft/navigation.c **** }
 155:firmwares/rotorcraft/navigation.c **** 
 156:firmwares/rotorcraft/navigation.c **** void nav_circle(uint8_t wp_center, int32_t radius) {
 157:firmwares/rotorcraft/navigation.c ****   if (radius == 0) {
 158:firmwares/rotorcraft/navigation.c ****     VECT2_COPY(navigation_target, waypoints[wp_center]);
 159:firmwares/rotorcraft/navigation.c ****   }
 160:firmwares/rotorcraft/navigation.c ****   else {
 161:firmwares/rotorcraft/navigation.c ****     struct Int32Vect2 pos_diff;
 162:firmwares/rotorcraft/navigation.c ****     VECT2_DIFF(pos_diff, *stateGetPositionEnu_i(), waypoints[wp_center]);
 163:firmwares/rotorcraft/navigation.c ****     // go back to half metric precision or values are too large
 164:firmwares/rotorcraft/navigation.c ****     //INT32_VECT2_RSHIFT(pos_diff,pos_diff,INT32_POS_FRAC/2);
 165:firmwares/rotorcraft/navigation.c ****     // store last qdr
 166:firmwares/rotorcraft/navigation.c ****     int32_t last_qdr = nav_circle_qdr;
 167:firmwares/rotorcraft/navigation.c ****     // compute qdr
 168:firmwares/rotorcraft/navigation.c ****     INT32_ATAN2(nav_circle_qdr, pos_diff.y, pos_diff.x);
 169:firmwares/rotorcraft/navigation.c ****     // increment circle radians
 170:firmwares/rotorcraft/navigation.c ****     if (nav_circle_radians != 0) {
 171:firmwares/rotorcraft/navigation.c ****       int32_t angle_diff = nav_circle_qdr - last_qdr;
 172:firmwares/rotorcraft/navigation.c ****       INT32_ANGLE_NORMALIZE(angle_diff);
 173:firmwares/rotorcraft/navigation.c ****       nav_circle_radians += angle_diff;
 174:firmwares/rotorcraft/navigation.c ****     }
 175:firmwares/rotorcraft/navigation.c ****     else {
 176:firmwares/rotorcraft/navigation.c ****       // Smallest angle to increment at next step
 177:firmwares/rotorcraft/navigation.c ****       nav_circle_radians = 1;
 178:firmwares/rotorcraft/navigation.c ****     }
 179:firmwares/rotorcraft/navigation.c **** 
 180:firmwares/rotorcraft/navigation.c ****     // direction of rotation
 181:firmwares/rotorcraft/navigation.c ****     int8_t sign_radius = radius > 0 ? 1 : -1;
 182:firmwares/rotorcraft/navigation.c ****     // absolute radius
 183:firmwares/rotorcraft/navigation.c ****     int32_t abs_radius = abs(radius);
 184:firmwares/rotorcraft/navigation.c ****     // carrot_angle
 185:firmwares/rotorcraft/navigation.c ****     int32_t carrot_angle = ((CARROT_DIST<<INT32_ANGLE_FRAC) / abs_radius);
 186:firmwares/rotorcraft/navigation.c ****     Bound(carrot_angle, (INT32_ANGLE_PI / 16), INT32_ANGLE_PI_4);
 187:firmwares/rotorcraft/navigation.c ****     carrot_angle = nav_circle_qdr - sign_radius * carrot_angle;
 188:firmwares/rotorcraft/navigation.c ****     int32_t s_carrot, c_carrot;
 189:firmwares/rotorcraft/navigation.c ****     PPRZ_ITRIG_SIN(s_carrot, carrot_angle);
 190:firmwares/rotorcraft/navigation.c ****     PPRZ_ITRIG_COS(c_carrot, carrot_angle);
 191:firmwares/rotorcraft/navigation.c ****     // compute setpoint
 192:firmwares/rotorcraft/navigation.c ****     VECT2_ASSIGN(pos_diff, abs_radius * c_carrot, abs_radius * s_carrot);
 193:firmwares/rotorcraft/navigation.c ****     INT32_VECT2_RSHIFT(pos_diff, pos_diff, INT32_TRIG_FRAC);
 194:firmwares/rotorcraft/navigation.c ****     VECT2_SUM(navigation_target, waypoints[wp_center], pos_diff);
 195:firmwares/rotorcraft/navigation.c ****   }
 196:firmwares/rotorcraft/navigation.c ****   nav_circle_centre = wp_center;
 197:firmwares/rotorcraft/navigation.c ****   nav_circle_radius = radius;
 198:firmwares/rotorcraft/navigation.c ****   horizontal_mode = HORIZONTAL_MODE_CIRCLE;
 199:firmwares/rotorcraft/navigation.c **** }
 200:firmwares/rotorcraft/navigation.c **** 
 201:firmwares/rotorcraft/navigation.c **** 
 202:firmwares/rotorcraft/navigation.c **** //#include "stdio.h"
 203:firmwares/rotorcraft/navigation.c **** void nav_route(uint8_t wp_start, uint8_t wp_end) {
 204:firmwares/rotorcraft/navigation.c ****   struct Int32Vect2 wp_diff,pos_diff;
 205:firmwares/rotorcraft/navigation.c ****   VECT2_DIFF(wp_diff, waypoints[wp_end],waypoints[wp_start]);
 206:firmwares/rotorcraft/navigation.c ****   VECT2_DIFF(pos_diff, *stateGetPositionEnu_i(), waypoints[wp_start]);
 207:firmwares/rotorcraft/navigation.c ****   // go back to metric precision or values are too large
 208:firmwares/rotorcraft/navigation.c ****   INT32_VECT2_RSHIFT(wp_diff,wp_diff,INT32_POS_FRAC);
 209:firmwares/rotorcraft/navigation.c ****   INT32_VECT2_RSHIFT(pos_diff,pos_diff,INT32_POS_FRAC);
 210:firmwares/rotorcraft/navigation.c ****   int32_t leg_length2 = Max((wp_diff.x * wp_diff.x + wp_diff.y * wp_diff.y),1);
 211:firmwares/rotorcraft/navigation.c ****   INT32_SQRT(nav_leg_length,leg_length2);
 212:firmwares/rotorcraft/navigation.c ****   nav_leg_progress = (pos_diff.x * wp_diff.x + pos_diff.y * wp_diff.y) / nav_leg_length;
 213:firmwares/rotorcraft/navigation.c ****   int32_t progress = Max((CARROT_DIST >> INT32_POS_FRAC), 0);
 214:firmwares/rotorcraft/navigation.c ****   nav_leg_progress += progress;
 215:firmwares/rotorcraft/navigation.c ****   int32_t prog_2 = nav_leg_length;// + progress / 2;
 216:firmwares/rotorcraft/navigation.c ****   Bound(nav_leg_progress, 0, prog_2);
 217:firmwares/rotorcraft/navigation.c ****   struct Int32Vect2 progress_pos;
 218:firmwares/rotorcraft/navigation.c ****   VECT2_SMUL(progress_pos, wp_diff, nav_leg_progress);
 219:firmwares/rotorcraft/navigation.c ****   VECT2_SDIV(progress_pos, progress_pos, nav_leg_length);
 220:firmwares/rotorcraft/navigation.c ****   INT32_VECT2_LSHIFT(progress_pos,progress_pos,INT32_POS_FRAC);
 221:firmwares/rotorcraft/navigation.c ****   VECT2_SUM(navigation_target,waypoints[wp_start],progress_pos);
 222:firmwares/rotorcraft/navigation.c ****   //printf("target %d %d | p %d %d | s %d %d | l %d %d %d\n",
 223:firmwares/rotorcraft/navigation.c ****   //    navigation_target.x,
 224:firmwares/rotorcraft/navigation.c ****   //    navigation_target.y,
 225:firmwares/rotorcraft/navigation.c ****   //    progress_pos.x,
 226:firmwares/rotorcraft/navigation.c ****   //    progress_pos.y,
 227:firmwares/rotorcraft/navigation.c ****   //    waypoints[wp_start].x,
 228:firmwares/rotorcraft/navigation.c ****   //    waypoints[wp_start].y,
 229:firmwares/rotorcraft/navigation.c ****   //    leg_length, leg_length2, nav_leg_progress);
 230:firmwares/rotorcraft/navigation.c ****   //fflush(stdout);
 231:firmwares/rotorcraft/navigation.c **** 
 232:firmwares/rotorcraft/navigation.c ****   nav_segment_start = wp_start;
 233:firmwares/rotorcraft/navigation.c ****   nav_segment_end = wp_end;
 234:firmwares/rotorcraft/navigation.c ****   horizontal_mode = HORIZONTAL_MODE_ROUTE;
 235:firmwares/rotorcraft/navigation.c **** }
 236:firmwares/rotorcraft/navigation.c **** 
 237:firmwares/rotorcraft/navigation.c **** bool_t nav_approaching_from(uint8_t wp_idx, uint8_t from_idx) {
 238:firmwares/rotorcraft/navigation.c ****   int32_t dist_to_point;
 239:firmwares/rotorcraft/navigation.c ****   struct Int32Vect2 diff;
 240:firmwares/rotorcraft/navigation.c ****   static uint8_t time_at_wp = 0;
 241:firmwares/rotorcraft/navigation.c ****   VECT2_DIFF(diff, waypoints[wp_idx], *stateGetPositionEnu_i());
 242:firmwares/rotorcraft/navigation.c ****   INT32_VECT2_RSHIFT(diff,diff,INT32_POS_FRAC);
 243:firmwares/rotorcraft/navigation.c ****   INT32_VECT2_NORM(dist_to_point, diff);
 244:firmwares/rotorcraft/navigation.c ****   //printf("dist %d | %d %d\n", dist_to_point,diff.x,diff.y);
 245:firmwares/rotorcraft/navigation.c ****   //fflush(stdout);
 246:firmwares/rotorcraft/navigation.c ****   //if (dist_to_point < (ARRIVED_AT_WAYPOINT >> INT32_POS_FRAC)) return TRUE;
 247:firmwares/rotorcraft/navigation.c ****   if (dist_to_point < (ARRIVED_AT_WAYPOINT >> INT32_POS_FRAC)) time_at_wp++;
 248:firmwares/rotorcraft/navigation.c ****   else time_at_wp = 0;
 249:firmwares/rotorcraft/navigation.c ****   if (time_at_wp > 20) return TRUE;
 250:firmwares/rotorcraft/navigation.c ****   if (from_idx > 0 && from_idx < NB_WAYPOINT) {
 251:firmwares/rotorcraft/navigation.c ****     struct Int32Vect2 from_diff;
 252:firmwares/rotorcraft/navigation.c ****     VECT2_DIFF(from_diff, waypoints[wp_idx],waypoints[from_idx]);
 253:firmwares/rotorcraft/navigation.c ****     INT32_VECT2_RSHIFT(from_diff,from_diff,INT32_POS_FRAC);
 254:firmwares/rotorcraft/navigation.c ****     return (diff.x * from_diff.x + diff.y * from_diff.y < 0);
 255:firmwares/rotorcraft/navigation.c ****   }
 256:firmwares/rotorcraft/navigation.c ****   else return FALSE;
 257:firmwares/rotorcraft/navigation.c **** }
 258:firmwares/rotorcraft/navigation.c **** 
 259:firmwares/rotorcraft/navigation.c **** static inline void nav_set_altitude( void ) {
 260:firmwares/rotorcraft/navigation.c ****   static int32_t last_nav_alt = 0;
 261:firmwares/rotorcraft/navigation.c ****   if (abs(nav_altitude - last_nav_alt) > (POS_BFP_OF_REAL(0.2))) {
 286              		.loc 2 261 0
 287 000e 0E4D     		ldr	r5, .L15+16
 288 0010 0E4B     		ldr	r3, .L15+20
 289 0012 2868     		ldr	r0, [r5, #0]
 290 0014 1C68     		ldr	r4, [r3, #0]
 291 0016 201A     		subs	r0, r4, r0
 292 0018 0028     		cmp	r0, #0
 293 001a B8BF     		it	lt
 294 001c 4042     		rsblt	r0, r0, #0
 295 001e FFF7FEFF 		bl	__aeabi_i2d
 296              	.LVL10:
 297 0022 05A3     		adr	r3, .L15
 298 0024 D3E90023 		ldrd	r2, [r3]
 299 0028 FFF7FEFF 		bl	__aeabi_dcmpgt
 300              	.LVL11:
 301 002c 10B1     		cbz	r0, .L11
 262:firmwares/rotorcraft/navigation.c ****     nav_flight_altitude = nav_altitude;
 302              		.loc 2 262 0
 303 002e 084B     		ldr	r3, .L15+24
 263:firmwares/rotorcraft/navigation.c ****     last_nav_alt = nav_altitude;
 304              		.loc 2 263 0
 305 0030 2C60     		str	r4, [r5, #0]
 262:firmwares/rotorcraft/navigation.c ****     nav_flight_altitude = nav_altitude;
 306              		.loc 2 262 0
 307 0032 1C60     		str	r4, [r3, #0]
 308              	.L11:
 309 0034 38BD     		pop	{r3, r4, r5, pc}
 310              	.L16:
 311 0036 00BF     		.align	3
 312              	.L15:
 313 0038 9A999999 		.word	2576980378
 314 003c 99994940 		.word	1078565273
 315 0040 00000000 		.word	.LANCHOR6
 316 0044 00000000 		.word	.LANCHOR7
 317 0048 00000000 		.word	.LANCHOR19
 318 004c 00000000 		.word	.LANCHOR3
 319 0050 00000000 		.word	.LANCHOR4
 320              	.LBE13:
 321              	.LBE12:
 322              		.cfi_endproc
 323              	.LFE124:
 325 0054 AFF30080 		.section	.text.nav_circle,"ax",%progbits
 326              		.align	1
 327              		.global	nav_circle
 328              		.thumb
 329              		.thumb_func
 331              	nav_circle:
 332              	.LFB125:
 156:firmwares/rotorcraft/navigation.c **** void nav_circle(uint8_t wp_center, int32_t radius) {
 333              		.loc 2 156 0
 334              		.cfi_startproc
 335              		@ args = 0, pretend = 0, frame = 0
 336              		@ frame_needed = 0, uses_anonymous_args = 0
 337              	.LVL12:
 338 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 339              	.LCFI4:
 340              		.cfi_def_cfa_offset 24
 341              		.cfi_offset 4, -24
 342              		.cfi_offset 5, -20
 343              		.cfi_offset 6, -16
 344              		.cfi_offset 7, -12
 345              		.cfi_offset 8, -8
 346              		.cfi_offset 14, -4
 156:firmwares/rotorcraft/navigation.c **** void nav_circle(uint8_t wp_center, int32_t radius) {
 347              		.loc 2 156 0
 348 0004 0446     		mov	r4, r0
 157:firmwares/rotorcraft/navigation.c ****   if (radius == 0) {
 349              		.loc 2 157 0
 350 0006 0D46     		mov	r5, r1
 351 0008 764F     		ldr	r7, .L60
 352 000a 0C26     		movs	r6, #12
 353 000c 39B9     		cbnz	r1, .L18
 158:firmwares/rotorcraft/navigation.c ****     VECT2_COPY(navigation_target, waypoints[wp_center]);
 354              		.loc 2 158 0
 355 000e 4643     		muls	r6, r0, r6
 356 0010 B919     		adds	r1, r7, r6
 357              	.LVL13:
 358 0012 754B     		ldr	r3, .L60+4
 359 0014 BA59     		ldr	r2, [r7, r6]
 360 0016 4868     		ldr	r0, [r1, #4]
 361              	.LVL14:
 362 0018 1A60     		str	r2, [r3, #0]
 363 001a 5860     		str	r0, [r3, #4]
 364 001c D9E0     		b	.L19
 365              	.LVL15:
 366              	.L18:
 367              	.LBB14:
 162:firmwares/rotorcraft/navigation.c ****     VECT2_DIFF(pos_diff, *stateGetPositionEnu_i(), waypoints[wp_center]);
 368              		.loc 2 162 0
 369 001e FFF7FEFF 		bl	stateGetPositionEnu_i
 370              	.LVL16:
 371 0022 06FB04F3 		mul	r3, r6, r4
 372 0026 0668     		ldr	r6, [r0, #0]
 373 0028 F858     		ldr	r0, [r7, r3]
 374 002a 07EB0308 		add	r8, r7, r3
 375 002e 361A     		subs	r6, r6, r0
 376              	.LVL17:
 377 0030 FFF7FEFF 		bl	stateGetPositionEnu_i
 378              	.LVL18:
 379 0034 D8F80470 		ldr	r7, [r8, #4]
 380 0038 4168     		ldr	r1, [r0, #4]
 166:firmwares/rotorcraft/navigation.c ****     int32_t last_qdr = nav_circle_qdr;
 381              		.loc 2 166 0
 382 003a 6C4A     		ldr	r2, .L60+8
 162:firmwares/rotorcraft/navigation.c ****     VECT2_DIFF(pos_diff, *stateGetPositionEnu_i(), waypoints[wp_center]);
 383              		.loc 2 162 0
 384 003c C91B     		subs	r1, r1, r7
 385              	.LVL19:
 386              	.LBB15:
 168:firmwares/rotorcraft/navigation.c ****     INT32_ATAN2(nav_circle_qdr, pos_diff.y, pos_diff.x);
 387              		.loc 2 168 0
 388 003e 81EAE170 		eor	r0, r1, r1, asr #31
 389 0042 A0EBE170 		sub	r0, r0, r1, asr #31
 390 0046 0130     		adds	r0, r0, #1
 391 0048 002E     		cmp	r6, #0
 392              	.LBE15:
 166:firmwares/rotorcraft/navigation.c ****     int32_t last_qdr = nav_circle_qdr;
 393              		.loc 2 166 0
 394 004a 1368     		ldr	r3, [r2, #0]
 395              	.LVL20:
 396 004c 06EB000C 		add	ip, r6, r0
 397              	.LBB16:
 168:firmwares/rotorcraft/navigation.c ****     INT32_ATAN2(nav_circle_qdr, pos_diff.y, pos_diff.x);
 398              		.loc 2 168 0
 399 0050 0BDB     		blt	.L20
 400              	.LVL21:
 168:firmwares/rotorcraft/navigation.c ****     INT32_ATAN2(nav_circle_qdr, pos_diff.y, pos_diff.x);
 401              		.loc 2 168 0 is_stmt 0 discriminator 1
 402 0052 301A     		subs	r0, r6, r0
 403              	.LVL22:
 404 0054 8603     		lsls	r6, r0, #14
 405              	.LVL23:
 406 0056 96FBFCFC 		sdiv	ip, r6, ip
 407              	.LVL24:
 408 005a 4FF44960 		mov	r0, #3216
 409 005e 00FB0CF6 		mul	r6, r0, ip
 410 0062 B013     		asrs	r0, r6, #14
 411 0064 C0F54966 		rsb	r6, r0, #3216
 412 0068 0BE0     		b	.L55
 413              	.LVL25:
 414              	.L20:
 168:firmwares/rotorcraft/navigation.c ****     INT32_ATAN2(nav_circle_qdr, pos_diff.y, pos_diff.x);
 415              		.loc 2 168 0 discriminator 2
 416 006a 861B     		subs	r6, r0, r6
 417              	.LVL26:
 418 006c 4FEA8C3E 		lsl	lr, ip, #14
 419 0070 9EFBF6F0 		sdiv	r0, lr, r6
 420              	.LVL27:
 421 0074 4FF44966 		mov	r6, #3216
 422 0078 7043     		muls	r0, r6, r0
 423 007a 8013     		asrs	r0, r0, #14
 424 007c C0F51656 		rsb	r6, r0, #9600
 425 0080 3036     		adds	r6, r6, #48
 426              	.L55:
 427 0082 0029     		cmp	r1, #0
 428 0084 1660     		str	r6, [r2, #0]
 429 0086 03DA     		bge	.L22
 168:firmwares/rotorcraft/navigation.c ****     INT32_ATAN2(nav_circle_qdr, pos_diff.y, pos_diff.x);
 430              		.loc 2 168 0 discriminator 4
 431 0088 584A     		ldr	r2, .L60+8
 432 008a 1168     		ldr	r1, [r2, #0]
 433              	.LVL28:
 434 008c 4E42     		negs	r6, r1
 435 008e 1660     		str	r6, [r2, #0]
 436              	.L22:
 437              	.LBE16:
 170:firmwares/rotorcraft/navigation.c ****     if (nav_circle_radians != 0) {
 438              		.loc 2 170 0 is_stmt 1
 439 0090 5748     		ldr	r0, .L60+12
 440 0092 0168     		ldr	r1, [r0, #0]
 441 0094 A1B1     		cbz	r1, .L23
 442              	.LBB17:
 171:firmwares/rotorcraft/navigation.c ****       int32_t angle_diff = nav_circle_qdr - last_qdr;
 443              		.loc 2 171 0
 444 0096 554A     		ldr	r2, .L60+8
 445 0098 1668     		ldr	r6, [r2, #0]
 446 009a F31A     		subs	r3, r6, r3
 447              	.LVL29:
 448              	.L24:
 172:firmwares/rotorcraft/navigation.c ****       INT32_ANGLE_NORMALIZE(angle_diff);
 449              		.loc 2 172 0 discriminator 1
 450 009c 43F24320 		movw	r0, #12867
 451 00a0 8342     		cmp	r3, r0
 452 00a2 03DD     		ble	.L52
 453              	.L25:
 172:firmwares/rotorcraft/navigation.c ****       INT32_ANGLE_NORMALIZE(angle_diff);
 454              		.loc 2 172 0 is_stmt 0 discriminator 2
 455 00a4 A3F5C940 		sub	r0, r3, #25728
 456 00a8 C31F     		subs	r3, r0, #7
 457              	.LVL30:
 458 00aa F7E7     		b	.L24
 459              	.LVL31:
 460              	.L52:
 172:firmwares/rotorcraft/navigation.c ****       INT32_ANGLE_NORMALIZE(angle_diff);
 461              		.loc 2 172 0 discriminator 4
 462 00ac 514A     		ldr	r2, .L60+16
 463 00ae 9342     		cmp	r3, r2
 464 00b0 03DA     		bge	.L57
 465              	.L27:
 172:firmwares/rotorcraft/navigation.c ****       INT32_ANGLE_NORMALIZE(angle_diff);
 466              		.loc 2 172 0 discriminator 5
 467 00b2 03F5C946 		add	r6, r3, #25728
 468 00b6 F31D     		adds	r3, r6, #7
 469              	.LVL32:
 470 00b8 F8E7     		b	.L52
 471              	.LVL33:
 472              	.L57:
 173:firmwares/rotorcraft/navigation.c ****       nav_circle_radians += angle_diff;
 473              		.loc 2 173 0 is_stmt 1
 474 00ba CB18     		adds	r3, r1, r3
 475              	.LVL34:
 476 00bc 4C48     		ldr	r0, .L60+12
 477 00be 00E0     		b	.L56
 478              	.LVL35:
 479              	.L23:
 480              	.LBE17:
 177:firmwares/rotorcraft/navigation.c ****       nav_circle_radians = 1;
 481              		.loc 2 177 0
 482 00c0 0123     		movs	r3, #1
 483              	.LVL36:
 484              	.L56:
 183:firmwares/rotorcraft/navigation.c ****     int32_t abs_radius = abs(radius);
 485              		.loc 2 183 0
 486 00c2 85EAE571 		eor	r1, r5, r5, asr #31
 487 00c6 A1EBE571 		sub	r1, r1, r5, asr #31
 185:firmwares/rotorcraft/navigation.c ****     int32_t carrot_angle = ((CARROT_DIST<<INT32_ANGLE_FRAC) / abs_radius);
 488              		.loc 2 185 0
 489 00ca 4FF44006 		mov	r6, #12582912
 490 00ce 96FBF1F2 		sdiv	r2, r6, r1
 177:firmwares/rotorcraft/navigation.c ****       nav_circle_radians = 1;
 491              		.loc 2 177 0
 492 00d2 0360     		str	r3, [r0, #0]
 181:firmwares/rotorcraft/navigation.c ****     int8_t sign_radius = radius > 0 ? 1 : -1;
 493              		.loc 2 181 0
 494 00d4 002D     		cmp	r5, #0
 495 00d6 D4BF     		ite	le
 496 00d8 FF23     		movle	r3, #255
 497 00da 0123     		movgt	r3, #1
 498              	.LVL37:
 186:firmwares/rotorcraft/navigation.c ****     Bound(carrot_angle, (INT32_ANGLE_PI / 16), INT32_ANGLE_PI_4);
 499              		.loc 2 186 0
 500 00dc B2F5496F 		cmp	r2, #3216
 501 00e0 05DC     		bgt	.L50
 186:firmwares/rotorcraft/navigation.c ****     Bound(carrot_angle, (INT32_ANGLE_PI / 16), INT32_ANGLE_PI_4);
 502              		.loc 2 186 0 is_stmt 0 discriminator 2
 503 00e2 B2F5497F 		cmp	r2, #804
 504 00e6 B8BF     		it	lt
 505 00e8 4FF44972 		movlt	r2, #804
 506              	.LVL38:
 507 00ec 01E0     		b	.L30
 508              	.LVL39:
 509              	.L50:
 186:firmwares/rotorcraft/navigation.c ****     Bound(carrot_angle, (INT32_ANGLE_PI / 16), INT32_ANGLE_PI_4);
 510              		.loc 2 186 0
 511 00ee 4FF44962 		mov	r2, #3216
 512              	.LVL40:
 513              	.L30:
 187:firmwares/rotorcraft/navigation.c ****     carrot_angle = nav_circle_qdr - sign_radius * carrot_angle;
 514              		.loc 2 187 0 is_stmt 1
 515 00f2 3E48     		ldr	r0, .L60+8
 516 00f4 5BB2     		sxtb	r3, r3
 517              	.LVL41:
 518 00f6 0668     		ldr	r6, [r0, #0]
 519 00f8 02FB1363 		mls	r3, r2, r3, r6
 520              	.LVL42:
 521              	.LBB18:
 189:firmwares/rotorcraft/navigation.c ****     PPRZ_ITRIG_SIN(s_carrot, carrot_angle);
 522              		.loc 2 189 0
 523 00fc 1A46     		mov	r2, r3
 524              	.LVL43:
 525              	.L31:
 189:firmwares/rotorcraft/navigation.c ****     PPRZ_ITRIG_SIN(s_carrot, carrot_angle);
 526              		.loc 2 189 0 is_stmt 0 discriminator 1
 527 00fe 43F24320 		movw	r0, #12867
 528 0102 8242     		cmp	r2, r0
 529 0104 03DD     		ble	.L53
 530              	.L32:
 189:firmwares/rotorcraft/navigation.c ****     PPRZ_ITRIG_SIN(s_carrot, carrot_angle);
 531              		.loc 2 189 0 discriminator 2
 532 0106 A2F5C942 		sub	r2, r2, #25728
 533              	.LVL44:
 534 010a 073A     		subs	r2, r2, #7
 535              	.LVL45:
 536 010c F7E7     		b	.L31
 537              	.LVL46:
 538              	.L53:
 189:firmwares/rotorcraft/navigation.c ****     PPRZ_ITRIG_SIN(s_carrot, carrot_angle);
 539              		.loc 2 189 0 discriminator 4
 540 010e 394E     		ldr	r6, .L60+16
 541 0110 B242     		cmp	r2, r6
 542 0112 03DA     		bge	.L58
 543              	.L34:
 189:firmwares/rotorcraft/navigation.c ****     PPRZ_ITRIG_SIN(s_carrot, carrot_angle);
 544              		.loc 2 189 0 discriminator 5
 545 0114 02F5C940 		add	r0, r2, #25728
 546 0118 C21D     		adds	r2, r0, #7
 547              	.LVL47:
 548 011a F8E7     		b	.L53
 549              	.LVL48:
 550              	.L58:
 189:firmwares/rotorcraft/navigation.c ****     PPRZ_ITRIG_SIN(s_carrot, carrot_angle);
 551              		.loc 2 189 0 discriminator 6
 552 011c 41F62110 		movw	r0, #6433
 553 0120 8242     		cmp	r2, r0
 554 0122 3548     		ldr	r0, .L60+20
 555 0124 03DD     		ble	.L35
 189:firmwares/rotorcraft/navigation.c ****     PPRZ_ITRIG_SIN(s_carrot, carrot_angle);
 556              		.loc 2 189 0 discriminator 7
 557 0126 C2F54952 		rsb	r2, r2, #12864
 558              	.LVL49:
 559 012a 0332     		adds	r2, r2, #3
 560              	.LVL50:
 561 012c 0CE0     		b	.L36
 562              	.L35:
 189:firmwares/rotorcraft/navigation.c ****     PPRZ_ITRIG_SIN(s_carrot, carrot_angle);
 563              		.loc 2 189 0 discriminator 8
 564 012e 6FF4C956 		mvn	r6, #6432
 565 0132 B242     		cmp	r2, r6
 566 0134 06DA     		bge	.L37
 189:firmwares/rotorcraft/navigation.c ****     PPRZ_ITRIG_SIN(s_carrot, carrot_angle);
 567              		.loc 2 189 0 discriminator 9
 568 0136 C2F17F42 		rsb	r2, r2, #-16777216
 569              	.LVL51:
 570 013a 02F57F06 		add	r6, r2, #16711680
 571 013e 06F54D42 		add	r2, r6, #52480
 572 0142 BD32     		adds	r2, r2, #189
 573              	.LVL52:
 574              	.L37:
 189:firmwares/rotorcraft/navigation.c ****     PPRZ_ITRIG_SIN(s_carrot, carrot_angle);
 575              		.loc 2 189 0 discriminator 10
 576 0144 002A     		cmp	r2, #0
 577 0146 02DB     		blt	.L38
 578              	.L36:
 189:firmwares/rotorcraft/navigation.c ****     PPRZ_ITRIG_SIN(s_carrot, carrot_angle);
 579              		.loc 2 189 0 discriminator 11
 580 0148 30F91220 		ldrsh	r2, [r0, r2, lsl #1]
 581              	.LVL53:
 582 014c 03E0     		b	.L39
 583              	.LVL54:
 584              	.L38:
 189:firmwares/rotorcraft/navigation.c ****     PPRZ_ITRIG_SIN(s_carrot, carrot_angle);
 585              		.loc 2 189 0 discriminator 12
 586 014e 5642     		negs	r6, r2
 587 0150 30F91600 		ldrsh	r0, [r0, r6, lsl #1]
 588 0154 4242     		negs	r2, r0
 589              	.LVL55:
 590              	.L39:
 591              	.LBE18:
 592              	.LBB19:
 190:firmwares/rotorcraft/navigation.c ****     PPRZ_ITRIG_COS(c_carrot, carrot_angle);
 593              		.loc 2 190 0 is_stmt 1
 594 0156 03F5C953 		add	r3, r3, #6432
 595              	.LVL56:
 596 015a 0133     		adds	r3, r3, #1
 597              	.LVL57:
 598              	.L40:
 190:firmwares/rotorcraft/navigation.c ****     PPRZ_ITRIG_COS(c_carrot, carrot_angle);
 599              		.loc 2 190 0 is_stmt 0 discriminator 1
 600 015c 43F24326 		movw	r6, #12867
 601 0160 B342     		cmp	r3, r6
 602 0162 03DD     		ble	.L54
 603              	.L41:
 190:firmwares/rotorcraft/navigation.c ****     PPRZ_ITRIG_COS(c_carrot, carrot_angle);
 604              		.loc 2 190 0 discriminator 2
 605 0164 A3F5C946 		sub	r6, r3, #25728
 606 0168 F31F     		subs	r3, r6, #7
 607              	.LVL58:
 608 016a F7E7     		b	.L40
 609              	.LVL59:
 610              	.L54:
 190:firmwares/rotorcraft/navigation.c ****     PPRZ_ITRIG_COS(c_carrot, carrot_angle);
 611              		.loc 2 190 0 discriminator 4
 612 016c 2148     		ldr	r0, .L60+16
 613 016e 8342     		cmp	r3, r0
 614 0170 03DA     		bge	.L59
 615              	.L43:
 190:firmwares/rotorcraft/navigation.c ****     PPRZ_ITRIG_COS(c_carrot, carrot_angle);
 616              		.loc 2 190 0 discriminator 5
 617 0172 03F5C943 		add	r3, r3, #25728
 618              	.LVL60:
 619 0176 0733     		adds	r3, r3, #7
 620              	.LVL61:
 621 0178 F8E7     		b	.L54
 622              	.LVL62:
 623              	.L59:
 190:firmwares/rotorcraft/navigation.c ****     PPRZ_ITRIG_COS(c_carrot, carrot_angle);
 624              		.loc 2 190 0 discriminator 6
 625 017a 41F62116 		movw	r6, #6433
 626 017e B342     		cmp	r3, r6
 627 0180 1D48     		ldr	r0, .L60+20
 628 0182 03DD     		ble	.L44
 190:firmwares/rotorcraft/navigation.c ****     PPRZ_ITRIG_COS(c_carrot, carrot_angle);
 629              		.loc 2 190 0 discriminator 7
 630 0184 C3F54953 		rsb	r3, r3, #12864
 631              	.LVL63:
 632 0188 0333     		adds	r3, r3, #3
 633              	.LVL64:
 634 018a 0CE0     		b	.L45
 635              	.L44:
 190:firmwares/rotorcraft/navigation.c ****     PPRZ_ITRIG_COS(c_carrot, carrot_angle);
 636              		.loc 2 190 0 discriminator 8
 637 018c 6FF4C956 		mvn	r6, #6432
 638 0190 B342     		cmp	r3, r6
 639 0192 06DA     		bge	.L46
 190:firmwares/rotorcraft/navigation.c ****     PPRZ_ITRIG_COS(c_carrot, carrot_angle);
 640              		.loc 2 190 0 discriminator 9
 641 0194 C3F17F43 		rsb	r3, r3, #-16777216
 642              	.LVL65:
 643 0198 03F57F06 		add	r6, r3, #16711680
 644 019c 06F54D43 		add	r3, r6, #52480
 645 01a0 BD33     		adds	r3, r3, #189
 646              	.LVL66:
 647              	.L46:
 190:firmwares/rotorcraft/navigation.c ****     PPRZ_ITRIG_COS(c_carrot, carrot_angle);
 648              		.loc 2 190 0 discriminator 10
 649 01a2 002B     		cmp	r3, #0
 650 01a4 02DB     		blt	.L47
 651              	.L45:
 190:firmwares/rotorcraft/navigation.c ****     PPRZ_ITRIG_COS(c_carrot, carrot_angle);
 652              		.loc 2 190 0 discriminator 11
 653 01a6 30F91300 		ldrsh	r0, [r0, r3, lsl #1]
 654              	.LVL67:
 655 01aa 03E0     		b	.L48
 656              	.LVL68:
 657              	.L47:
 190:firmwares/rotorcraft/navigation.c ****     PPRZ_ITRIG_COS(c_carrot, carrot_angle);
 658              		.loc 2 190 0 discriminator 12
 659 01ac 5E42     		negs	r6, r3
 660 01ae 30F91600 		ldrsh	r0, [r0, r6, lsl #1]
 661 01b2 4042     		negs	r0, r0
 662              	.LVL69:
 663              	.L48:
 664              	.LBE19:
 194:firmwares/rotorcraft/navigation.c ****     VECT2_SUM(navigation_target, waypoints[wp_center], pos_diff);
 665              		.loc 2 194 0 is_stmt 1
 666 01b4 0C26     		movs	r6, #12
 667 01b6 6643     		muls	r6, r4, r6
 192:firmwares/rotorcraft/navigation.c ****     VECT2_ASSIGN(pos_diff, abs_radius * c_carrot, abs_radius * s_carrot);
 668              		.loc 2 192 0
 669 01b8 4843     		muls	r0, r1, r0
 670              	.LVL70:
 194:firmwares/rotorcraft/navigation.c ****     VECT2_SUM(navigation_target, waypoints[wp_center], pos_diff);
 671              		.loc 2 194 0
 672 01ba DFF828E0 		ldr	lr, .L60
 192:firmwares/rotorcraft/navigation.c ****     VECT2_ASSIGN(pos_diff, abs_radius * c_carrot, abs_radius * s_carrot);
 673              		.loc 2 192 0
 674 01be 5143     		muls	r1, r2, r1
 675              	.LVL71:
 194:firmwares/rotorcraft/navigation.c ****     VECT2_SUM(navigation_target, waypoints[wp_center], pos_diff);
 676              		.loc 2 194 0
 677 01c0 5EF80660 		ldr	r6, [lr, r6]
 678 01c4 084B     		ldr	r3, .L60+4
 679              	.LVL72:
 680 01c6 06EBA030 		add	r0, r6, r0, asr #14
 681 01ca 07EBA137 		add	r7, r7, r1, asr #14
 682 01ce 1860     		str	r0, [r3, #0]
 683 01d0 5F60     		str	r7, [r3, #4]
 684              	.LVL73:
 685              	.L19:
 686              	.LBE14:
 196:firmwares/rotorcraft/navigation.c ****   nav_circle_centre = wp_center;
 687              		.loc 2 196 0
 688 01d2 0A4B     		ldr	r3, .L60+24
 197:firmwares/rotorcraft/navigation.c ****   nav_circle_radius = radius;
 689              		.loc 2 197 0
 690 01d4 0A49     		ldr	r1, .L60+28
 198:firmwares/rotorcraft/navigation.c ****   horizontal_mode = HORIZONTAL_MODE_CIRCLE;
 691              		.loc 2 198 0
 692 01d6 0B48     		ldr	r0, .L60+32
 693 01d8 0222     		movs	r2, #2
 196:firmwares/rotorcraft/navigation.c ****   nav_circle_centre = wp_center;
 694              		.loc 2 196 0
 695 01da 1C70     		strb	r4, [r3, #0]
 197:firmwares/rotorcraft/navigation.c ****   nav_circle_radius = radius;
 696              		.loc 2 197 0
 697 01dc 0D60     		str	r5, [r1, #0]
 198:firmwares/rotorcraft/navigation.c ****   horizontal_mode = HORIZONTAL_MODE_CIRCLE;
 698              		.loc 2 198 0
 699 01de 0270     		strb	r2, [r0, #0]
 700 01e0 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 701              	.L61:
 702              		.align	2
 703              	.L60:
 704 01e4 00000000 		.word	.LANCHOR1
 705 01e8 00000000 		.word	.LANCHOR6
 706 01ec 00000000 		.word	.LANCHOR20
 707 01f0 00000000 		.word	.LANCHOR21
 708 01f4 BDCDFFFF 		.word	-12867
 709 01f8 00000000 		.word	pprz_trig_int
 710 01fc 00000000 		.word	.LANCHOR22
 711 0200 00000000 		.word	.LANCHOR23
 712 0204 00000000 		.word	.LANCHOR8
 713              		.cfi_endproc
 714              	.LFE125:
 716              		.section	.text.nav_route,"ax",%progbits
 717              		.align	1
 718              		.global	nav_route
 719              		.thumb
 720              		.thumb_func
 722              	nav_route:
 723              	.LFB126:
 203:firmwares/rotorcraft/navigation.c **** void nav_route(uint8_t wp_start, uint8_t wp_end) {
 724              		.loc 2 203 0
 725              		.cfi_startproc
 726              		@ args = 0, pretend = 0, frame = 0
 727              		@ frame_needed = 0, uses_anonymous_args = 0
 728              	.LVL74:
 729 0000 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 730              	.LCFI5:
 731              		.cfi_def_cfa_offset 40
 732              		.cfi_offset 3, -40
 733              		.cfi_offset 4, -36
 734              		.cfi_offset 5, -32
 735              		.cfi_offset 6, -28
 736              		.cfi_offset 7, -24
 737              		.cfi_offset 8, -20
 738              		.cfi_offset 9, -16
 739              		.cfi_offset 10, -12
 740              		.cfi_offset 11, -8
 741              		.cfi_offset 14, -4
 205:firmwares/rotorcraft/navigation.c ****   VECT2_DIFF(wp_diff, waypoints[wp_end],waypoints[wp_start]);
 742              		.loc 2 205 0
 743 0004 0C25     		movs	r5, #12
 744 0006 05FB01F3 		mul	r3, r5, r1
 745 000a 4543     		muls	r5, r0, r5
 746 000c 354C     		ldr	r4, .L73
 203:firmwares/rotorcraft/navigation.c **** void nav_route(uint8_t wp_start, uint8_t wp_end) {
 747              		.loc 2 203 0
 748 000e 0646     		mov	r6, r0
 205:firmwares/rotorcraft/navigation.c ****   VECT2_DIFF(wp_diff, waypoints[wp_end],waypoints[wp_start]);
 749              		.loc 2 205 0
 750 0010 04EB0508 		add	r8, r4, r5
 751 0014 E218     		adds	r2, r4, r3
 752 0016 6059     		ldr	r0, [r4, r5]
 753              	.LVL75:
 754 0018 5268     		ldr	r2, [r2, #4]
 203:firmwares/rotorcraft/navigation.c **** void nav_route(uint8_t wp_start, uint8_t wp_end) {
 755              		.loc 2 203 0
 756 001a 0F46     		mov	r7, r1
 205:firmwares/rotorcraft/navigation.c ****   VECT2_DIFF(wp_diff, waypoints[wp_end],waypoints[wp_start]);
 757              		.loc 2 205 0
 758 001c E158     		ldr	r1, [r4, r3]
 759              	.LVL76:
 760 001e D8F80430 		ldr	r3, [r8, #4]
 761 0022 C0EB010B 		rsb	fp, r0, r1
 762              	.LVL77:
 763 0026 C3EB020A 		rsb	sl, r3, r2
 764              	.LVL78:
 206:firmwares/rotorcraft/navigation.c ****   VECT2_DIFF(pos_diff, *stateGetPositionEnu_i(), waypoints[wp_start]);
 765              		.loc 2 206 0
 766 002a FFF7FEFF 		bl	stateGetPositionEnu_i
 767              	.LVL79:
 768 002e 6459     		ldr	r4, [r4, r5]
 769 0030 0168     		ldr	r1, [r0, #0]
 770 0032 C4EB0109 		rsb	r9, r4, r1
 771              	.LVL80:
 772 0036 FFF7FEFF 		bl	stateGetPositionEnu_i
 773              	.LVL81:
 208:firmwares/rotorcraft/navigation.c ****   INT32_VECT2_RSHIFT(wp_diff,wp_diff,INT32_POS_FRAC);
 774              		.loc 2 208 0
 775 003a 4FEA2A22 		asr	r2, sl, #8
 210:firmwares/rotorcraft/navigation.c ****   int32_t leg_length2 = Max((wp_diff.x * wp_diff.x + wp_diff.y * wp_diff.y),1);
 776              		.loc 2 210 0
 777 003e 02FB02FC 		mul	ip, r2, r2
 208:firmwares/rotorcraft/navigation.c ****   INT32_VECT2_RSHIFT(wp_diff,wp_diff,INT32_POS_FRAC);
 778              		.loc 2 208 0
 779 0042 4FEA2B24 		asr	r4, fp, #8
 206:firmwares/rotorcraft/navigation.c ****   VECT2_DIFF(pos_diff, *stateGetPositionEnu_i(), waypoints[wp_start]);
 780              		.loc 2 206 0
 781 0046 D8F80410 		ldr	r1, [r8, #4]
 782              	.LVL82:
 210:firmwares/rotorcraft/navigation.c ****   int32_t leg_length2 = Max((wp_diff.x * wp_diff.x + wp_diff.y * wp_diff.y),1);
 783              		.loc 2 210 0
 784 004a 04FB04C8 		mla	r8, r4, r4, ip
 206:firmwares/rotorcraft/navigation.c ****   VECT2_DIFF(pos_diff, *stateGetPositionEnu_i(), waypoints[wp_start]);
 785              		.loc 2 206 0
 786 004e 4568     		ldr	r5, [r0, #4]
 210:firmwares/rotorcraft/navigation.c ****   int32_t leg_length2 = Max((wp_diff.x * wp_diff.x + wp_diff.y * wp_diff.y),1);
 787              		.loc 2 210 0
 788 0050 B8F1010F 		cmp	r8, #1
 789 0054 B8BF     		it	lt
 790 0056 4FF00108 		movlt	r8, #1
 206:firmwares/rotorcraft/navigation.c ****   VECT2_DIFF(pos_diff, *stateGetPositionEnu_i(), waypoints[wp_start]);
 791              		.loc 2 206 0
 792 005a 681A     		subs	r0, r5, r1
 793              	.LVL83:
 209:firmwares/rotorcraft/navigation.c ****   INT32_VECT2_RSHIFT(pos_diff,pos_diff,INT32_POS_FRAC);
 794              		.loc 2 209 0
 795 005c 4FEA2929 		asr	r9, r9, #8
 796              	.LVL84:
 797 0060 0012     		asrs	r0, r0, #8
 798              	.LVL85:
 799              	.LBB20:
 211:firmwares/rotorcraft/navigation.c ****   INT32_SQRT(nav_leg_length,leg_length2);
 800              		.loc 2 211 0
 801 0062 4546     		mov	r5, r8
 802 0064 4FF0280C 		mov	ip, #40
 803              	.LVL86:
 804              	.L66:
 211:firmwares/rotorcraft/navigation.c ****   INT32_SQRT(nav_leg_length,leg_length2);
 805              		.loc 2 211 0 is_stmt 0 discriminator 3
 806 0068 B8FBF5F3 		udiv	r3, r8, r5
 807              	.LVL87:
 808 006c 5B19     		adds	r3, r3, r5
 809              	.LVL88:
 810 006e 5B08     		lsrs	r3, r3, #1
 811              	.LVL89:
 812 0070 ED1A     		subs	r5, r5, r3
 813              	.LVL90:
 814 0072 012D     		cmp	r5, #1
 815 0074 0CD8     		bhi	.L63
 816              	.L67:
 817              	.LBE20:
 212:firmwares/rotorcraft/navigation.c ****   nav_leg_progress = (pos_diff.x * wp_diff.x + pos_diff.y * wp_diff.y) / nav_leg_length;
 818              		.loc 2 212 0 is_stmt 1
 819 0076 5043     		muls	r0, r2, r0
 820              	.LVL91:
 821 0078 04FB0900 		mla	r0, r4, r9, r0
 822 007c 90FBF3F0 		sdiv	r0, r0, r3
 823              	.LBB21:
 211:firmwares/rotorcraft/navigation.c ****   INT32_SQRT(nav_leg_length,leg_length2);
 824              		.loc 2 211 0
 825 0080 194D     		ldr	r5, .L73+4
 826              	.LBE21:
 214:firmwares/rotorcraft/navigation.c ****   nav_leg_progress += progress;
 827              		.loc 2 214 0
 828 0082 0C30     		adds	r0, r0, #12
 216:firmwares/rotorcraft/navigation.c ****   Bound(nav_leg_progress, 0, prog_2);
 829              		.loc 2 216 0
 830 0084 9842     		cmp	r0, r3
 831              	.LBB22:
 211:firmwares/rotorcraft/navigation.c ****   INT32_SQRT(nav_leg_length,leg_length2);
 832              		.loc 2 211 0
 833 0086 2B60     		str	r3, [r5, #0]
 834              	.LVL92:
 835 0088 184D     		ldr	r5, .L73+8
 836              	.LBE22:
 216:firmwares/rotorcraft/navigation.c ****   Bound(nav_leg_progress, 0, prog_2);
 837              		.loc 2 216 0
 838 008a 08DD     		ble	.L71
 839              	.LVL93:
 216:firmwares/rotorcraft/navigation.c ****   Bound(nav_leg_progress, 0, prog_2);
 840              		.loc 2 216 0 is_stmt 0 discriminator 1
 841 008c 2B60     		str	r3, [r5, #0]
 842 008e 0AE0     		b	.L68
 843              	.LVL94:
 844              	.L63:
 845 0090 0CF1FF3E 		add	lr, ip, #-1
 846              	.LBB23:
 211:firmwares/rotorcraft/navigation.c ****   INT32_SQRT(nav_leg_length,leg_length2);
 847              		.loc 2 211 0 is_stmt 1 discriminator 4
 848 0094 1EF0FF0C 		ands	ip, lr, #255
 849              	.LBE23:
 850 0098 1D46     		mov	r5, r3
 851              	.LBB24:
 852 009a E5D1     		bne	.L66
 853 009c EBE7     		b	.L67
 854              	.LVL95:
 855              	.L71:
 856              	.LBE24:
 216:firmwares/rotorcraft/navigation.c ****   Bound(nav_leg_progress, 0, prog_2);
 857              		.loc 2 216 0 discriminator 2
 858 009e 0028     		cmp	r0, #0
 859 00a0 B8BF     		it	lt
 860 00a2 0020     		movlt	r0, #0
 861 00a4 2860     		str	r0, [r5, #0]
 862              	.L68:
 218:firmwares/rotorcraft/navigation.c ****   VECT2_SMUL(progress_pos, wp_diff, nav_leg_progress);
 863              		.loc 2 218 0
 864 00a6 2D68     		ldr	r5, [r5, #0]
 865              	.LVL96:
 221:firmwares/rotorcraft/navigation.c ****   VECT2_SUM(navigation_target,waypoints[wp_start],progress_pos);
 866              		.loc 2 221 0
 867 00a8 4FF00C08 		mov	r8, #12
 868              	.LVL97:
 218:firmwares/rotorcraft/navigation.c ****   VECT2_SMUL(progress_pos, wp_diff, nav_leg_progress);
 869              		.loc 2 218 0
 870 00ac 6C43     		muls	r4, r5, r4
 871              	.LVL98:
 221:firmwares/rotorcraft/navigation.c ****   VECT2_SUM(navigation_target,waypoints[wp_start],progress_pos);
 872              		.loc 2 221 0
 873 00ae 08FB06F8 		mul	r8, r8, r6
 218:firmwares/rotorcraft/navigation.c ****   VECT2_SMUL(progress_pos, wp_diff, nav_leg_progress);
 874              		.loc 2 218 0
 875 00b2 6A43     		muls	r2, r5, r2
 876              	.LVL99:
 219:firmwares/rotorcraft/navigation.c ****   VECT2_SDIV(progress_pos, progress_pos, nav_leg_length);
 877              		.loc 2 219 0
 878 00b4 94FBF3FE 		sdiv	lr, r4, r3
 221:firmwares/rotorcraft/navigation.c ****   VECT2_SUM(navigation_target,waypoints[wp_start],progress_pos);
 879              		.loc 2 221 0
 880 00b8 0A4C     		ldr	r4, .L73
 881 00ba 0D48     		ldr	r0, .L73+12
 882 00bc 54F80840 		ldr	r4, [r4, r8]
 219:firmwares/rotorcraft/navigation.c ****   VECT2_SDIV(progress_pos, progress_pos, nav_leg_length);
 883              		.loc 2 219 0
 884 00c0 92FBF3F2 		sdiv	r2, r2, r3
 221:firmwares/rotorcraft/navigation.c ****   VECT2_SUM(navigation_target,waypoints[wp_start],progress_pos);
 885              		.loc 2 221 0
 886 00c4 01EB0221 		add	r1, r1, r2, lsl #8
 887 00c8 04EB0E24 		add	r4, r4, lr, lsl #8
 888 00cc 0460     		str	r4, [r0, #0]
 889 00ce 4160     		str	r1, [r0, #4]
 232:firmwares/rotorcraft/navigation.c ****   nav_segment_start = wp_start;
 890              		.loc 2 232 0
 891 00d0 084B     		ldr	r3, .L73+16
 892              	.LVL100:
 233:firmwares/rotorcraft/navigation.c ****   nav_segment_end = wp_end;
 893              		.loc 2 233 0
 894 00d2 0948     		ldr	r0, .L73+20
 234:firmwares/rotorcraft/navigation.c ****   horizontal_mode = HORIZONTAL_MODE_ROUTE;
 895              		.loc 2 234 0
 896 00d4 0949     		ldr	r1, .L73+24
 897 00d6 0122     		movs	r2, #1
 232:firmwares/rotorcraft/navigation.c ****   nav_segment_start = wp_start;
 898              		.loc 2 232 0
 899 00d8 1E70     		strb	r6, [r3, #0]
 233:firmwares/rotorcraft/navigation.c ****   nav_segment_end = wp_end;
 900              		.loc 2 233 0
 901 00da 0770     		strb	r7, [r0, #0]
 234:firmwares/rotorcraft/navigation.c ****   horizontal_mode = HORIZONTAL_MODE_ROUTE;
 902              		.loc 2 234 0
 903 00dc 0A70     		strb	r2, [r1, #0]
 904 00de BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 905              	.L74:
 906 00e2 00BF     		.align	2
 907              	.L73:
 908 00e4 00000000 		.word	.LANCHOR1
 909 00e8 00000000 		.word	.LANCHOR18
 910 00ec 00000000 		.word	.LANCHOR17
 911 00f0 00000000 		.word	.LANCHOR6
 912 00f4 00000000 		.word	.LANCHOR24
 913 00f8 00000000 		.word	.LANCHOR25
 914 00fc 00000000 		.word	.LANCHOR8
 915              		.cfi_endproc
 916              	.LFE126:
 918              		.section	.text.nav_approaching_from,"ax",%progbits
 919              		.align	1
 920              		.global	nav_approaching_from
 921              		.thumb
 922              		.thumb_func
 924              	nav_approaching_from:
 925              	.LFB127:
 237:firmwares/rotorcraft/navigation.c **** bool_t nav_approaching_from(uint8_t wp_idx, uint8_t from_idx) {
 926              		.loc 2 237 0
 927              		.cfi_startproc
 928              		@ args = 0, pretend = 0, frame = 0
 929              		@ frame_needed = 0, uses_anonymous_args = 0
 930              	.LVL101:
 241:firmwares/rotorcraft/navigation.c ****   VECT2_DIFF(diff, waypoints[wp_idx], *stateGetPositionEnu_i());
 931              		.loc 2 241 0
 932 0000 0C23     		movs	r3, #12
 933 0002 4343     		muls	r3, r0, r3
 934 0004 2A4A     		ldr	r2, .L91
 237:firmwares/rotorcraft/navigation.c **** bool_t nav_approaching_from(uint8_t wp_idx, uint8_t from_idx) {
 935              		.loc 2 237 0
 936 0006 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 937              	.LCFI6:
 938              		.cfi_def_cfa_offset 24
 939              		.cfi_offset 4, -24
 940              		.cfi_offset 5, -20
 941              		.cfi_offset 6, -16
 942              		.cfi_offset 7, -12
 943              		.cfi_offset 8, -8
 944              		.cfi_offset 14, -4
 241:firmwares/rotorcraft/navigation.c ****   VECT2_DIFF(diff, waypoints[wp_idx], *stateGetPositionEnu_i());
 945              		.loc 2 241 0
 946 000a D418     		adds	r4, r2, r3
 947 000c D558     		ldr	r5, [r2, r3]
 237:firmwares/rotorcraft/navigation.c **** bool_t nav_approaching_from(uint8_t wp_idx, uint8_t from_idx) {
 948              		.loc 2 237 0
 949 000e 8846     		mov	r8, r1
 950 0010 0746     		mov	r7, r0
 241:firmwares/rotorcraft/navigation.c ****   VECT2_DIFF(diff, waypoints[wp_idx], *stateGetPositionEnu_i());
 951              		.loc 2 241 0
 952 0012 FFF7FEFF 		bl	stateGetPositionEnu_i
 953              	.LVL102:
 954 0016 0068     		ldr	r0, [r0, #0]
 955 0018 6668     		ldr	r6, [r4, #4]
 956 001a 2D1A     		subs	r5, r5, r0
 957              	.LVL103:
 958 001c FFF7FEFF 		bl	stateGetPositionEnu_i
 959              	.LVL104:
 960 0020 4168     		ldr	r1, [r0, #4]
 242:firmwares/rotorcraft/navigation.c ****   INT32_VECT2_RSHIFT(diff,diff,INT32_POS_FRAC);
 961              		.loc 2 242 0
 962 0022 2A12     		asrs	r2, r5, #8
 963              	.LVL105:
 241:firmwares/rotorcraft/navigation.c ****   VECT2_DIFF(diff, waypoints[wp_idx], *stateGetPositionEnu_i());
 964              		.loc 2 241 0
 965 0024 731A     		subs	r3, r6, r1
 966              	.LVL106:
 242:firmwares/rotorcraft/navigation.c ****   INT32_VECT2_RSHIFT(diff,diff,INT32_POS_FRAC);
 967              		.loc 2 242 0
 968 0026 1C12     		asrs	r4, r3, #8
 969              	.LVL107:
 970              	.LBB25:
 243:firmwares/rotorcraft/navigation.c ****   INT32_VECT2_NORM(dist_to_point, diff);
 971              		.loc 2 243 0
 972 0028 04FB04F0 		mul	r0, r4, r4
 973 002c 02FB0206 		mla	r6, r2, r2, r0
 974              	.LVL108:
 975 0030 8EB1     		cbz	r6, .L76
 976              	.LVL109:
 977              	.LBB26:
 243:firmwares/rotorcraft/navigation.c ****   INT32_VECT2_NORM(dist_to_point, diff);
 978              		.loc 2 243 0 is_stmt 0 discriminator 2
 979 0032 3346     		mov	r3, r6
 980 0034 2821     		movs	r1, #40
 981              	.LVL110:
 982              	.L79:
 243:firmwares/rotorcraft/navigation.c ****   INT32_VECT2_NORM(dist_to_point, diff);
 983              		.loc 2 243 0 discriminator 3
 984 0036 B6FBF3F5 		udiv	r5, r6, r3
 985              	.LVL111:
 986 003a E818     		adds	r0, r5, r3
 987              	.LVL112:
 988 003c 4508     		lsrs	r5, r0, #1
 989              	.LVL113:
 990 003e 5B1B     		subs	r3, r3, r5
 991              	.LVL114:
 992 0040 012B     		cmp	r3, #1
 993 0042 02D8     		bhi	.L77
 994              	.L80:
 995              	.LVL115:
 996              	.LBE26:
 997              	.LBE25:
 247:firmwares/rotorcraft/navigation.c ****   if (dist_to_point < (ARRIVED_AT_WAYPOINT >> INT32_POS_FRAC)) time_at_wp++;
 998              		.loc 2 247 0 is_stmt 1
 999 0044 022D     		cmp	r5, #2
 1000 0046 0ADC     		bgt	.L89
 1001 0048 05E0     		b	.L76
 1002              	.LVL116:
 1003              	.L77:
 1004 004a 0139     		subs	r1, r1, #1
 1005              	.LBB29:
 1006              	.LBB27:
 243:firmwares/rotorcraft/navigation.c ****   INT32_VECT2_NORM(dist_to_point, diff);
 1007              		.loc 2 243 0 discriminator 4
 1008 004c 11F0FF01 		ands	r1, r1, #255
 1009              	.LBE27:
 1010              	.LBE29:
 1011 0050 2B46     		mov	r3, r5
 1012              	.LBB30:
 1013              	.LBB28:
 1014 0052 F0D1     		bne	.L79
 1015              	.LVL117:
 1016 0054 F6E7     		b	.L80
 1017              	.LVL118:
 1018              	.L76:
 1019              	.LBE28:
 1020              	.LBE30:
 247:firmwares/rotorcraft/navigation.c ****   if (dist_to_point < (ARRIVED_AT_WAYPOINT >> INT32_POS_FRAC)) time_at_wp++;
 1021              		.loc 2 247 0 discriminator 1
 1022 0056 174B     		ldr	r3, .L91+4
 1023 0058 1978     		ldrb	r1, [r3, #0]	@ zero_extendqisi2
 1024 005a 481C     		adds	r0, r1, #1
 1025 005c 01E0     		b	.L90
 1026              	.LVL119:
 1027              	.L89:
 248:firmwares/rotorcraft/navigation.c ****   else time_at_wp = 0;
 1028              		.loc 2 248 0
 1029 005e 154B     		ldr	r3, .L91+4
 1030 0060 0020     		movs	r0, #0
 1031              	.LVL120:
 1032              	.L90:
 1033 0062 1870     		strb	r0, [r3, #0]
 249:firmwares/rotorcraft/navigation.c ****   if (time_at_wp > 20) return TRUE;
 1034              		.loc 2 249 0
 1035 0064 1348     		ldr	r0, .L91+4
 1036 0066 0378     		ldrb	r3, [r0, #0]	@ zero_extendqisi2
 1037 0068 142B     		cmp	r3, #20
 1038 006a 1AD8     		bhi	.L83
 250:firmwares/rotorcraft/navigation.c ****   if (from_idx > 0 && from_idx < NB_WAYPOINT) {
 1039              		.loc 2 250 0
 1040 006c 08F1FF31 		add	r1, r8, #-1
 1041 0070 0429     		cmp	r1, #4
 1042 0072 19D8     		bhi	.L84
 1043              	.LVL121:
 1044              	.LBB31:
 252:firmwares/rotorcraft/navigation.c ****     VECT2_DIFF(from_diff, waypoints[wp_idx],waypoints[from_idx]);
 1045              		.loc 2 252 0
 1046 0074 0C25     		movs	r5, #12
 1047 0076 6F43     		muls	r7, r5, r7
 1048              	.LVL122:
 1049 0078 05FB08F8 		mul	r8, r5, r8
 1050 007c 0C4B     		ldr	r3, .L91
 1051 007e D859     		ldr	r0, [r3, r7]
 1052 0080 53F80810 		ldr	r1, [r3, r8]
 1053 0084 DE19     		adds	r6, r3, r7
 1054              	.LVL123:
 1055 0086 03EB0805 		add	r5, r3, r8
 1056 008a 431A     		subs	r3, r0, r1
 253:firmwares/rotorcraft/navigation.c ****     INT32_VECT2_RSHIFT(from_diff,from_diff,INT32_POS_FRAC);
 1057              		.loc 2 253 0
 1058 008c 1812     		asrs	r0, r3, #8
 252:firmwares/rotorcraft/navigation.c ****     VECT2_DIFF(from_diff, waypoints[wp_idx],waypoints[from_idx]);
 1059              		.loc 2 252 0
 1060 008e 7168     		ldr	r1, [r6, #4]
 1061 0090 6B68     		ldr	r3, [r5, #4]
 1062 0092 C91A     		subs	r1, r1, r3
 253:firmwares/rotorcraft/navigation.c ****     INT32_VECT2_RSHIFT(from_diff,from_diff,INT32_POS_FRAC);
 1063              		.loc 2 253 0
 1064 0094 0B12     		asrs	r3, r1, #8
 254:firmwares/rotorcraft/navigation.c ****     return (diff.x * from_diff.x + diff.y * from_diff.y < 0);
 1065              		.loc 2 254 0
 1066 0096 5C43     		muls	r4, r3, r4
 1067              	.LVL124:
 1068 0098 00FB0242 		mla	r2, r0, r2, r4
 1069              	.LVL125:
 1070 009c D00F     		lsrs	r0, r2, #31
 1071 009e BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1072              	.LVL126:
 1073              	.L83:
 1074              	.LBE31:
 249:firmwares/rotorcraft/navigation.c ****   if (time_at_wp > 20) return TRUE;
 1075              		.loc 2 249 0
 1076 00a2 0120     		movs	r0, #1
 1077 00a4 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1078              	.L84:
 256:firmwares/rotorcraft/navigation.c ****   else return FALSE;
 1079              		.loc 2 256 0
 1080 00a8 0020     		movs	r0, #0
 257:firmwares/rotorcraft/navigation.c **** }
 1081              		.loc 2 257 0
 1082 00aa BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1083              	.L92:
 1084 00ae 00BF     		.align	2
 1085              	.L91:
 1086 00b0 00000000 		.word	.LANCHOR1
 1087 00b4 00000000 		.word	.LANCHOR26
 1088              		.cfi_endproc
 1089              	.LFE127:
 1091              		.section	.text.nav_reset_reference,"ax",%progbits
 1092              		.align	1
 1093              		.global	nav_reset_reference
 1094              		.thumb
 1095              		.thumb_func
 1097              	nav_reset_reference:
 1098              	.LFB129:
 264:firmwares/rotorcraft/navigation.c ****   }
 265:firmwares/rotorcraft/navigation.c **** }
 266:firmwares/rotorcraft/navigation.c **** 
 267:firmwares/rotorcraft/navigation.c **** 
 268:firmwares/rotorcraft/navigation.c **** /** Reset the geographic reference to the current GPS fix */
 269:firmwares/rotorcraft/navigation.c **** unit_t nav_reset_reference( void ) {
 1099              		.loc 2 269 0
 1100              		.cfi_startproc
 1101              		@ args = 0, pretend = 0, frame = 0
 1102              		@ frame_needed = 0, uses_anonymous_args = 0
 1103              		@ link register save eliminated.
 270:firmwares/rotorcraft/navigation.c ****   ins_ltp_initialised = FALSE;
 271:firmwares/rotorcraft/navigation.c ****   ins.hf_realign = TRUE;
 1104              		.loc 2 271 0
 1105 0000 0349     		ldr	r1, .L94
 270:firmwares/rotorcraft/navigation.c ****   ins_ltp_initialised = FALSE;
 1106              		.loc 2 270 0
 1107 0002 044B     		ldr	r3, .L94+4
 1108              		.loc 2 271 0
 1109 0004 0122     		movs	r2, #1
 270:firmwares/rotorcraft/navigation.c ****   ins_ltp_initialised = FALSE;
 1110              		.loc 2 270 0
 1111 0006 0020     		movs	r0, #0
 1112 0008 1870     		strb	r0, [r3, #0]
 1113              		.loc 2 271 0
 1114 000a 4A70     		strb	r2, [r1, #1]
 272:firmwares/rotorcraft/navigation.c ****   ins.vf_realign = TRUE;
 1115              		.loc 2 272 0
 1116 000c 8A70     		strb	r2, [r1, #2]
 273:firmwares/rotorcraft/navigation.c ****   return 0;
 274:firmwares/rotorcraft/navigation.c **** }
 1117              		.loc 2 274 0
 1118 000e 7047     		bx	lr
 1119              	.L95:
 1120              		.align	2
 1121              	.L94:
 1122 0010 00000000 		.word	ins
 1123 0014 00000000 		.word	ins_ltp_initialised
 1124              		.cfi_endproc
 1125              	.LFE129:
 1127              		.global	__aeabi_ddiv
 1128              		.global	__aeabi_d2f
 1129              		.global	__aeabi_i2f
 1130              		.section	.text.nav_reset_alt,"ax",%progbits
 1131              		.align	1
 1132              		.global	nav_reset_alt
 1133              		.thumb
 1134              		.thumb_func
 1136              	nav_reset_alt:
 1137              	.LFB130:
 275:firmwares/rotorcraft/navigation.c **** 
 276:firmwares/rotorcraft/navigation.c **** unit_t nav_reset_alt( void ) {
 1138              		.loc 2 276 0
 1139              		.cfi_startproc
 1140              		@ args = 0, pretend = 0, frame = 0
 1141              		@ frame_needed = 0, uses_anonymous_args = 0
 277:firmwares/rotorcraft/navigation.c ****   ins.vf_realign = TRUE;
 278:firmwares/rotorcraft/navigation.c **** 
 279:firmwares/rotorcraft/navigation.c **** #if USE_GPS
 280:firmwares/rotorcraft/navigation.c ****   ins_ltp_def.lla.alt = gps.lla_pos.alt;
 1142              		.loc 2 280 0
 1143 0000 6948     		ldr	r0, .L97+8
 276:firmwares/rotorcraft/navigation.c **** unit_t nav_reset_alt( void ) {
 1144              		.loc 2 276 0
 1145 0002 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1146              	.LCFI7:
 1147              		.cfi_def_cfa_offset 24
 1148              		.cfi_offset 3, -24
 1149              		.cfi_offset 4, -20
 1150              		.cfi_offset 5, -16
 1151              		.cfi_offset 6, -12
 1152              		.cfi_offset 7, -8
 1153              		.cfi_offset 14, -4
 1154              	.LBB34:
 441:./state.h     ****   memcpy(&state.ned_origin_i, ltp_def, sizeof(struct LtpDef_i));
 1155              		.loc 1 441 0
 1156 0004 694C     		ldr	r4, .L97+12
 1157              	.LBE34:
 1158              		.loc 2 280 0
 1159 0006 6A4E     		ldr	r6, .L97+16
 1160 0008 4269     		ldr	r2, [r0, #20]
 281:firmwares/rotorcraft/navigation.c ****   ins_ltp_def.hmsl = gps.hmsl;
 1161              		.loc 2 281 0
 1162 000a 816A     		ldr	r1, [r0, #40]
 277:firmwares/rotorcraft/navigation.c ****   ins.vf_realign = TRUE;
 1163              		.loc 2 277 0
 1164 000c 694B     		ldr	r3, .L97+20
 1165 000e 0127     		movs	r7, #1
 1166              	.LBB36:
 441:./state.h     ****   memcpy(&state.ned_origin_i, ltp_def, sizeof(struct LtpDef_i));
 1167              		.loc 1 441 0
 1168 0010 04F11C05 		add	r5, r4, #28
 1169              	.LBE36:
 277:firmwares/rotorcraft/navigation.c ****   ins.vf_realign = TRUE;
 1170              		.loc 2 277 0
 1171 0014 9F70     		strb	r7, [r3, #2]
 280:firmwares/rotorcraft/navigation.c ****   ins_ltp_def.lla.alt = gps.lla_pos.alt;
 1172              		.loc 2 280 0
 1173 0016 7261     		str	r2, [r6, #20]
 1174              		.loc 2 281 0
 1175 0018 F163     		str	r1, [r6, #60]
 1176              	.LVL127:
 1177              	.LBB37:
 441:./state.h     ****   memcpy(&state.ned_origin_i, ltp_def, sizeof(struct LtpDef_i));
 1178              		.loc 1 441 0
 1179 001a 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 1180 001c 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 1181 001e 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 1182 0020 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 1183 0022 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 1184 0024 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 1185 0026 96E80F00 		ldmia	r6, {r0, r1, r2, r3}
 1186 002a 85E80F00 		stmia	r5, {r0, r1, r2, r3}
 1187              	.LBB35:
 443:./state.h     ****   ECEF_FLOAT_OF_BFP(state.ned_origin_f.ecef, state.ned_origin_i.ecef);
 1188              		.loc 1 443 0
 1189 002e E069     		ldr	r0, [r4, #28]
 1190 0030 FFF7FEFF 		bl	__aeabi_i2d
 1191              	.LVL128:
 1192 0034 0022     		movs	r2, #0
 1193 0036 604B     		ldr	r3, .L97+24
 1194 0038 FFF7FEFF 		bl	__aeabi_ddiv
 1195              	.LVL129:
 1196 003c FFF7FEFF 		bl	__aeabi_d2f
 1197              	.LVL130:
 1198 0040 C4F8A400 		str	r0, [r4, #164]	@ float
 1199 0044 206A     		ldr	r0, [r4, #32]
 1200 0046 FFF7FEFF 		bl	__aeabi_i2d
 1201              	.LVL131:
 1202 004a 0022     		movs	r2, #0
 1203 004c 5A4B     		ldr	r3, .L97+24
 1204 004e FFF7FEFF 		bl	__aeabi_ddiv
 1205              	.LVL132:
 1206 0052 FFF7FEFF 		bl	__aeabi_d2f
 1207              	.LVL133:
 1208 0056 C4F8A800 		str	r0, [r4, #168]	@ float
 1209 005a 606A     		ldr	r0, [r4, #36]
 1210 005c FFF7FEFF 		bl	__aeabi_i2d
 1211              	.LVL134:
 1212 0060 0022     		movs	r2, #0
 1213 0062 554B     		ldr	r3, .L97+24
 1214 0064 FFF7FEFF 		bl	__aeabi_ddiv
 1215              	.LVL135:
 1216 0068 FFF7FEFF 		bl	__aeabi_d2f
 1217              	.LVL136:
 1218 006c C4F8AC00 		str	r0, [r4, #172]	@ float
 444:./state.h     ****   LLA_FLOAT_OF_BFP(state.ned_origin_f.lla, state.ned_origin_i.lla);
 1219              		.loc 1 444 0
 1220 0070 E06A     		ldr	r0, [r4, #44]
 1221 0072 FFF7FEFF 		bl	__aeabi_i2d
 1222              	.LVL137:
 1223 0076 4AA3     		adr	r3, .L97
 1224 0078 D3E90023 		ldrd	r2, [r3]
 1225 007c FFF7FEFF 		bl	__aeabi_ddiv
 1226              	.LVL138:
 1227 0080 FFF7FEFF 		bl	__aeabi_d2f
 1228              	.LVL139:
 1229 0084 C4F8B400 		str	r0, [r4, #180]	@ float
 1230 0088 A06A     		ldr	r0, [r4, #40]
 1231 008a FFF7FEFF 		bl	__aeabi_i2d
 1232              	.LVL140:
 1233 008e 44A3     		adr	r3, .L97
 1234 0090 D3E90023 		ldrd	r2, [r3]
 1235 0094 FFF7FEFF 		bl	__aeabi_ddiv
 1236              	.LVL141:
 1237 0098 FFF7FEFF 		bl	__aeabi_d2f
 1238              	.LVL142:
 1239 009c C4F8B000 		str	r0, [r4, #176]	@ float
 1240 00a0 206B     		ldr	r0, [r4, #48]
 1241 00a2 FFF7FEFF 		bl	__aeabi_i2d
 1242              	.LVL143:
 1243 00a6 0022     		movs	r2, #0
 1244 00a8 444B     		ldr	r3, .L97+28
 1245 00aa FFF7FEFF 		bl	__aeabi_ddiv
 1246              	.LVL144:
 1247 00ae FFF7FEFF 		bl	__aeabi_d2f
 1248              	.LVL145:
 1249 00b2 C4F8B800 		str	r0, [r4, #184]	@ float
 445:./state.h     ****   RMAT_FLOAT_OF_BFP(state.ned_origin_f.ltp_of_ecef, state.ned_origin_i.ltp_of_ecef);
 1250              		.loc 1 445 0
 1251 00b6 606B     		ldr	r0, [r4, #52]
 1252 00b8 FFF7FEFF 		bl	__aeabi_i2f
 1253              	.LVL146:
 1254 00bc 4FF06251 		mov	r1, #947912704
 1255 00c0 FFF7FEFF 		bl	__aeabi_fmul
 1256              	.LVL147:
 1257 00c4 C4F8BC00 		str	r0, [r4, #188]	@ float
 1258 00c8 A06B     		ldr	r0, [r4, #56]
 1259 00ca FFF7FEFF 		bl	__aeabi_i2f
 1260              	.LVL148:
 1261 00ce 4FF06251 		mov	r1, #947912704
 1262 00d2 FFF7FEFF 		bl	__aeabi_fmul
 1263              	.LVL149:
 1264 00d6 C4F8C000 		str	r0, [r4, #192]	@ float
 1265 00da E06B     		ldr	r0, [r4, #60]
 1266 00dc FFF7FEFF 		bl	__aeabi_i2f
 1267              	.LVL150:
 1268 00e0 4FF06251 		mov	r1, #947912704
 1269 00e4 FFF7FEFF 		bl	__aeabi_fmul
 1270              	.LVL151:
 1271 00e8 C4F8C400 		str	r0, [r4, #196]	@ float
 1272 00ec 206C     		ldr	r0, [r4, #64]
 1273 00ee FFF7FEFF 		bl	__aeabi_i2f
 1274              	.LVL152:
 1275 00f2 4FF06251 		mov	r1, #947912704
 1276 00f6 FFF7FEFF 		bl	__aeabi_fmul
 1277              	.LVL153:
 1278 00fa C4F8C800 		str	r0, [r4, #200]	@ float
 1279 00fe 606C     		ldr	r0, [r4, #68]
 1280 0100 FFF7FEFF 		bl	__aeabi_i2f
 1281              	.LVL154:
 1282 0104 4FF06251 		mov	r1, #947912704
 1283 0108 FFF7FEFF 		bl	__aeabi_fmul
 1284              	.LVL155:
 1285 010c C4F8CC00 		str	r0, [r4, #204]	@ float
 1286 0110 A06C     		ldr	r0, [r4, #72]
 1287 0112 FFF7FEFF 		bl	__aeabi_i2f
 1288              	.LVL156:
 1289 0116 4FF06251 		mov	r1, #947912704
 1290 011a FFF7FEFF 		bl	__aeabi_fmul
 1291              	.LVL157:
 1292 011e C4F8D000 		str	r0, [r4, #208]	@ float
 1293 0122 E06C     		ldr	r0, [r4, #76]
 1294 0124 FFF7FEFF 		bl	__aeabi_i2f
 1295              	.LVL158:
 1296 0128 4FF06251 		mov	r1, #947912704
 1297 012c FFF7FEFF 		bl	__aeabi_fmul
 1298              	.LVL159:
 1299 0130 C4F8D400 		str	r0, [r4, #212]	@ float
 1300 0134 206D     		ldr	r0, [r4, #80]
 1301 0136 FFF7FEFF 		bl	__aeabi_i2f
 1302              	.LVL160:
 1303 013a 4FF06251 		mov	r1, #947912704
 1304 013e FFF7FEFF 		bl	__aeabi_fmul
 1305              	.LVL161:
 1306 0142 C4F8D800 		str	r0, [r4, #216]	@ float
 1307 0146 606D     		ldr	r0, [r4, #84]
 1308 0148 FFF7FEFF 		bl	__aeabi_i2f
 1309              	.LVL162:
 1310 014c 4FF06251 		mov	r1, #947912704
 1311 0150 FFF7FEFF 		bl	__aeabi_fmul
 1312              	.LVL163:
 1313 0154 C4F8DC00 		str	r0, [r4, #220]	@ float
 446:./state.h     ****   state.ned_origin_f.hmsl = M_OF_MM(state.ned_origin_i.hmsl);
 1314              		.loc 1 446 0
 1315 0158 A06D     		ldr	r0, [r4, #88]
 1316 015a FFF7FEFF 		bl	__aeabi_i2d
 1317              	.LVL164:
 1318 015e 0022     		movs	r2, #0
 1319 0160 164B     		ldr	r3, .L97+28
 1320 0162 FFF7FEFF 		bl	__aeabi_ddiv
 1321              	.LVL165:
 1322 0166 FFF7FEFF 		bl	__aeabi_d2f
 1323              	.LVL166:
 449:./state.h     ****   state.pos_status &= ~(POS_LOCAL_COORD);
 1324              		.loc 1 449 0
 1325 016a 2388     		ldrh	r3, [r4, #0]
 450:./state.h     ****   state.speed_status &= ~(SPEED_LOCAL_COORD);
 1326              		.loc 1 450 0
 1327 016c B4F81421 		ldrh	r2, [r4, #276]
 446:./state.h     ****   state.ned_origin_f.hmsl = M_OF_MM(state.ned_origin_i.hmsl);
 1328              		.loc 1 446 0
 1329 0170 C4F8E000 		str	r0, [r4, #224]	@ float
 449:./state.h     ****   state.pos_status &= ~(POS_LOCAL_COORD);
 1330              		.loc 1 449 0
 1331 0174 23F0C600 		bic	r0, r3, #198
 452:./state.h     ****   ClearBit(state.accel_status, ACCEL_NED_F);
 1332              		.loc 1 452 0
 1333 0178 94F87031 		ldrb	r3, [r4, #368]	@ zero_extendqisi2
 449:./state.h     ****   state.pos_status &= ~(POS_LOCAL_COORD);
 1334              		.loc 1 449 0
 1335 017c 2080     		strh	r0, [r4, #0]	@ movhi
 450:./state.h     ****   state.speed_status &= ~(SPEED_LOCAL_COORD);
 1336              		.loc 1 450 0
 1337 017e 22F0C601 		bic	r1, r2, #198
 452:./state.h     ****   ClearBit(state.accel_status, ACCEL_NED_F);
 1338              		.loc 1 452 0
 1339 0182 23F00A00 		bic	r0, r3, #10
 1340 0186 84F87001 		strb	r0, [r4, #368]
 450:./state.h     ****   state.speed_status &= ~(SPEED_LOCAL_COORD);
 1341              		.loc 1 450 0
 1342 018a A4F81411 		strh	r1, [r4, #276]	@ movhi
 454:./state.h     ****   state.ned_initialized_i = TRUE;
 1343              		.loc 1 454 0
 1344 018e 84F85C70 		strb	r7, [r4, #92]
 455:./state.h     ****   state.ned_initialized_f = TRUE;
 1345              		.loc 1 455 0
 1346 0192 84F8E470 		strb	r7, [r4, #228]
 1347              	.LBE35:
 1348              	.LBE37:
 282:firmwares/rotorcraft/navigation.c ****   stateSetLocalOrigin_i(&ins_ltp_def);
 283:firmwares/rotorcraft/navigation.c **** #endif
 284:firmwares/rotorcraft/navigation.c **** 
 285:firmwares/rotorcraft/navigation.c ****   return 0;
 286:firmwares/rotorcraft/navigation.c **** }
 1349              		.loc 2 286 0
 1350 0196 0020     		movs	r0, #0
 1351 0198 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1352              	.L98:
 1353 019a 00BFAFF3 		.align	3
 1353      0080
 1354              	.L97:
 1355 01a0 00000000 		.word	0
 1356 01a4 D0126341 		.word	1097011920
 1357 01a8 00000000 		.word	gps
 1358 01ac 00000000 		.word	state
 1359 01b0 00000000 		.word	ins_ltp_def
 1360 01b4 00000000 		.word	ins
 1361 01b8 00005940 		.word	1079574528
 1362 01bc 00408F40 		.word	1083129856
 1363              		.cfi_endproc
 1364              	.LFE130:
 1366              		.section	.text.nav_init_stage,"ax",%progbits
 1367              		.align	1
 1368              		.global	nav_init_stage
 1369              		.thumb
 1370              		.thumb_func
 1372              	nav_init_stage:
 1373              	.LFB131:
 287:firmwares/rotorcraft/navigation.c **** 
 288:firmwares/rotorcraft/navigation.c **** void nav_init_stage( void ) {
 1374              		.loc 2 288 0
 1375              		.cfi_startproc
 1376              		@ args = 0, pretend = 0, frame = 0
 1377              		@ frame_needed = 0, uses_anonymous_args = 0
 1378 0000 10B5     		push	{r4, lr}
 1379              	.LCFI8:
 1380              		.cfi_def_cfa_offset 8
 1381              		.cfi_offset 4, -8
 1382              		.cfi_offset 14, -4
 289:firmwares/rotorcraft/navigation.c ****   INT32_VECT3_COPY(nav_last_point, *stateGetPositionEnu_i());
 1383              		.loc 2 289 0
 1384 0002 FFF7FEFF 		bl	stateGetPositionEnu_i
 1385              	.LVL167:
 1386 0006 0A4C     		ldr	r4, .L100
 1387 0008 0368     		ldr	r3, [r0, #0]
 1388 000a 2360     		str	r3, [r4, #0]
 1389 000c FFF7FEFF 		bl	stateGetPositionEnu_i
 1390              	.LVL168:
 1391 0010 4068     		ldr	r0, [r0, #4]
 1392 0012 6060     		str	r0, [r4, #4]
 1393 0014 FFF7FEFF 		bl	stateGetPositionEnu_i
 1394              	.LVL169:
 1395 0018 8168     		ldr	r1, [r0, #8]
 290:firmwares/rotorcraft/navigation.c ****   stage_time = 0;
 1396              		.loc 2 290 0
 1397 001a 0648     		ldr	r0, .L100+4
 289:firmwares/rotorcraft/navigation.c ****   INT32_VECT3_COPY(nav_last_point, *stateGetPositionEnu_i());
 1398              		.loc 2 289 0
 1399 001c A160     		str	r1, [r4, #8]
 291:firmwares/rotorcraft/navigation.c ****   nav_circle_radians = 0;
 1400              		.loc 2 291 0
 1401 001e 0649     		ldr	r1, .L100+8
 290:firmwares/rotorcraft/navigation.c ****   stage_time = 0;
 1402              		.loc 2 290 0
 1403 0020 0023     		movs	r3, #0
 1404 0022 1A46     		mov	r2, r3	@ movhi
 1405 0024 0380     		strh	r3, [r0, #0]	@ movhi
 1406              		.loc 2 291 0
 1407 0026 0B60     		str	r3, [r1, #0]
 292:firmwares/rotorcraft/navigation.c ****   horizontal_mode = HORIZONTAL_MODE_WAYPOINT;
 1408              		.loc 2 292 0
 1409 0028 044B     		ldr	r3, .L100+12
 1410 002a 1A70     		strb	r2, [r3, #0]
 1411 002c 10BD     		pop	{r4, pc}
 1412              	.L101:
 1413 002e 00BF     		.align	2
 1414              	.L100:
 1415 0030 00000000 		.word	.LANCHOR27
 1416 0034 00000000 		.word	stage_time
 1417 0038 00000000 		.word	.LANCHOR21
 1418 003c 00000000 		.word	.LANCHOR8
 1419              		.cfi_endproc
 1420              	.LFE131:
 1422              		.section	.text.nav_move_waypoint,"ax",%progbits
 1423              		.align	1
 1424              		.global	nav_move_waypoint
 1425              		.thumb
 1426              		.thumb_func
 1428              	nav_move_waypoint:
 1429              	.LFB140:
 293:firmwares/rotorcraft/navigation.c **** }
 294:firmwares/rotorcraft/navigation.c **** 
 295:firmwares/rotorcraft/navigation.c **** #include <stdio.h>
 296:firmwares/rotorcraft/navigation.c **** void nav_periodic_task() {
 297:firmwares/rotorcraft/navigation.c ****   RunOnceEvery(16, { stage_time++;  block_time++; });
 298:firmwares/rotorcraft/navigation.c **** 
 299:firmwares/rotorcraft/navigation.c ****   /* from flight_plan.h */
 300:firmwares/rotorcraft/navigation.c ****   auto_nav();
 301:firmwares/rotorcraft/navigation.c **** 
 302:firmwares/rotorcraft/navigation.c ****   /* run carrot loop */
 303:firmwares/rotorcraft/navigation.c ****   nav_run();
 304:firmwares/rotorcraft/navigation.c **** 
 305:firmwares/rotorcraft/navigation.c ****   ground_alt = POS_BFP_OF_REAL((float)ins_ltp_def.hmsl / 1000.);
 306:firmwares/rotorcraft/navigation.c **** }
 307:firmwares/rotorcraft/navigation.c **** 
 308:firmwares/rotorcraft/navigation.c **** #include "subsystems/datalink/downlink.h"
 309:firmwares/rotorcraft/navigation.c **** #include "messages.h"
 310:firmwares/rotorcraft/navigation.c **** #include "mcu_periph/uart.h"
 311:firmwares/rotorcraft/navigation.c **** void nav_move_waypoint(uint8_t wp_id, struct EnuCoor_i * new_pos) {
 1430              		.loc 2 311 0
 1431              		.cfi_startproc
 1432              		@ args = 0, pretend = 0, frame = 0
 1433              		@ frame_needed = 0, uses_anonymous_args = 0
 1434              	.LVL170:
 312:firmwares/rotorcraft/navigation.c ****   if (wp_id < nb_waypoint) {
 1435              		.loc 2 312 0
 1436 0000 0528     		cmp	r0, #5
 311:firmwares/rotorcraft/navigation.c **** void nav_move_waypoint(uint8_t wp_id, struct EnuCoor_i * new_pos) {
 1437              		.loc 2 311 0
 1438 0002 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1439              	.LCFI9:
 1440              		.cfi_def_cfa_offset 24
 1441              		.cfi_offset 3, -24
 1442              		.cfi_offset 4, -20
 1443              		.cfi_offset 5, -16
 1444              		.cfi_offset 6, -12
 1445              		.cfi_offset 7, -8
 1446              		.cfi_offset 14, -4
 311:firmwares/rotorcraft/navigation.c **** void nav_move_waypoint(uint8_t wp_id, struct EnuCoor_i * new_pos) {
 1447              		.loc 2 311 0
 1448 0004 0746     		mov	r7, r0
 1449 0006 0E46     		mov	r6, r1
 1450              		.loc 2 312 0
 1451 0008 00F2D380 		bhi	.L102
 313:firmwares/rotorcraft/navigation.c ****     INT32_VECT3_COPY(waypoints[wp_id],(*new_pos));
 1452              		.loc 2 313 0
 1453 000c 0C22     		movs	r2, #12
 1454 000e 7A43     		muls	r2, r7, r2
 1455 0010 0868     		ldr	r0, [r1, #0]
 1456              	.LVL171:
 1457 0012 6849     		ldr	r1, .L105
 1458              	.LVL172:
 1459 0014 8B18     		adds	r3, r1, r2
 1460 0016 8850     		str	r0, [r1, r2]
 1461 0018 7068     		ldr	r0, [r6, #4]
 1462 001a B168     		ldr	r1, [r6, #8]
 1463 001c 5860     		str	r0, [r3, #4]
 1464 001e 9960     		str	r1, [r3, #8]
 314:firmwares/rotorcraft/navigation.c ****     DOWNLINK_SEND_WP_MOVED_ENU(DefaultChannel, DefaultDevice, &wp_id, &(new_pos->x), &(new_pos->y),
 1465              		.loc 2 314 0
 1466 0020 6548     		ldr	r0, .L105+4
 1467 0022 1321     		movs	r1, #19
 1468 0024 FFF7FEFF 		bl	uart_check_free_space
 1469              	.LVL173:
 1470 0028 0028     		cmp	r0, #0
 1471 002a 00F0BE80 		beq	.L104
 1472              		.loc 2 314 0 is_stmt 0 discriminator 1
 1473 002e 6349     		ldr	r1, .L105+8
 1474 0030 634C     		ldr	r4, .L105+12
 1475 0032 0B88     		ldrh	r3, [r1, #0]
 1476 0034 2588     		ldrh	r5, [r4, #0]
 1477 0036 5A1C     		adds	r2, r3, #1
 1478 0038 0A80     		strh	r2, [r1, #0]	@ movhi
 1479 003a 1335     		adds	r5, r5, #19
 1480              	.LBB38:
 1481 003c 9921     		movs	r1, #153
 1482 003e 5E48     		ldr	r0, .L105+4
 1483              	.LBE38:
 1484 0040 2580     		strh	r5, [r4, #0]	@ movhi
 1485 0042 604D     		ldr	r5, .L105+16
 1486 0044 604C     		ldr	r4, .L105+20
 1487              	.LBB39:
 1488 0046 FFF7FEFF 		bl	uart_transmit
 1489              	.LVL174:
 1490 004a 1321     		movs	r1, #19
 1491 004c 5A48     		ldr	r0, .L105+4
 1492 004e FFF7FEFF 		bl	uart_transmit
 1493              	.LVL175:
 1494              	.LBE39:
 1495 0052 1420     		movs	r0, #20
 1496 0054 2721     		movs	r1, #39
 1497 0056 2870     		strb	r0, [r5, #0]
 1498 0058 2170     		strb	r1, [r4, #0]
 1499 005a 5748     		ldr	r0, .L105+4
 1500 005c 0121     		movs	r1, #1
 1501 005e FFF7FEFF 		bl	uart_transmit
 1502              	.LVL176:
 1503 0062 2B78     		ldrb	r3, [r5, #0]	@ zero_extendqisi2
 1504 0064 2278     		ldrb	r2, [r4, #0]	@ zero_extendqisi2
 1505 0066 3133     		adds	r3, r3, #49
 1506 0068 D8B2     		uxtb	r0, r3
 1507              	.LVL177:
 1508 006a 8118     		adds	r1, r0, r2
 1509              	.LVL178:
 1510 006c 2870     		strb	r0, [r5, #0]
 1511 006e 2170     		strb	r1, [r4, #0]
 1512 0070 5148     		ldr	r0, .L105+4
 1513              	.LVL179:
 1514 0072 3121     		movs	r1, #49
 1515 0074 FFF7FEFF 		bl	uart_transmit
 1516              	.LVL180:
 1517              	.LBB40:
 1518 0078 2B78     		ldrb	r3, [r5, #0]	@ zero_extendqisi2
 1519 007a 2278     		ldrb	r2, [r4, #0]	@ zero_extendqisi2
 1520 007c F818     		adds	r0, r7, r3
 1521 007e C1B2     		uxtb	r1, r0
 1522 0080 8B18     		adds	r3, r1, r2
 1523              	.LVL181:
 1524 0082 2970     		strb	r1, [r5, #0]
 1525 0084 4C48     		ldr	r0, .L105+4
 1526 0086 3946     		mov	r1, r7
 1527              	.LVL182:
 1528 0088 2370     		strb	r3, [r4, #0]
 1529 008a FFF7FEFF 		bl	uart_transmit
 1530              	.LVL183:
 1531              	.LBE40:
 1532              	.LBB41:
 1533 008e 3178     		ldrb	r1, [r6, #0]	@ zero_extendqisi2
 1534              	.LVL184:
 1535 0090 2878     		ldrb	r0, [r5, #0]	@ zero_extendqisi2
 1536 0092 0A18     		adds	r2, r1, r0
 1537 0094 2078     		ldrb	r0, [r4, #0]	@ zero_extendqisi2
 1538 0096 D3B2     		uxtb	r3, r2
 1539 0098 1A18     		adds	r2, r3, r0
 1540              	.LVL185:
 1541 009a 4748     		ldr	r0, .L105+4
 1542 009c 2B70     		strb	r3, [r5, #0]
 1543 009e 2270     		strb	r2, [r4, #0]
 1544 00a0 FFF7FEFF 		bl	uart_transmit
 1545              	.LVL186:
 1546              	.LBE41:
 1547              	.LBB42:
 1548 00a4 2B78     		ldrb	r3, [r5, #0]	@ zero_extendqisi2
 1549 00a6 7178     		ldrb	r1, [r6, #1]	@ zero_extendqisi2
 1550              	.LVL187:
 1551 00a8 2278     		ldrb	r2, [r4, #0]	@ zero_extendqisi2
 1552 00aa C818     		adds	r0, r1, r3
 1553 00ac C3B2     		uxtb	r3, r0
 1554 00ae 9818     		adds	r0, r3, r2
 1555              	.LVL188:
 1556 00b0 2070     		strb	r0, [r4, #0]
 1557 00b2 4148     		ldr	r0, .L105+4
 1558 00b4 2B70     		strb	r3, [r5, #0]
 1559 00b6 FFF7FEFF 		bl	uart_transmit
 1560              	.LVL189:
 1561              	.LBE42:
 1562              	.LBB43:
 1563 00ba 2B78     		ldrb	r3, [r5, #0]	@ zero_extendqisi2
 1564 00bc B178     		ldrb	r1, [r6, #2]	@ zero_extendqisi2
 1565              	.LVL190:
 1566 00be CA18     		adds	r2, r1, r3
 1567 00c0 2378     		ldrb	r3, [r4, #0]	@ zero_extendqisi2
 1568 00c2 D0B2     		uxtb	r0, r2
 1569 00c4 C218     		adds	r2, r0, r3
 1570              	.LVL191:
 1571 00c6 2870     		strb	r0, [r5, #0]
 1572 00c8 3B48     		ldr	r0, .L105+4
 1573              	.LVL192:
 1574 00ca 2270     		strb	r2, [r4, #0]
 1575 00cc FFF7FEFF 		bl	uart_transmit
 1576              	.LVL193:
 1577              	.LBE43:
 1578              	.LBB44:
 1579 00d0 2878     		ldrb	r0, [r5, #0]	@ zero_extendqisi2
 1580 00d2 F178     		ldrb	r1, [r6, #3]	@ zero_extendqisi2
 1581              	.LVL194:
 1582 00d4 2278     		ldrb	r2, [r4, #0]	@ zero_extendqisi2
 1583 00d6 0B18     		adds	r3, r1, r0
 1584 00d8 D8B2     		uxtb	r0, r3
 1585 00da 8318     		adds	r3, r0, r2
 1586              	.LVL195:
 1587 00dc 2870     		strb	r0, [r5, #0]
 1588 00de 3648     		ldr	r0, .L105+4
 1589              	.LVL196:
 1590 00e0 2370     		strb	r3, [r4, #0]
 1591 00e2 FFF7FEFF 		bl	uart_transmit
 1592              	.LVL197:
 1593              	.LBE44:
 1594              	.LBB45:
 1595 00e6 2878     		ldrb	r0, [r5, #0]	@ zero_extendqisi2
 1596 00e8 3179     		ldrb	r1, [r6, #4]	@ zero_extendqisi2
 1597              	.LVL198:
 1598 00ea 0A18     		adds	r2, r1, r0
 1599 00ec 2078     		ldrb	r0, [r4, #0]	@ zero_extendqisi2
 1600 00ee D3B2     		uxtb	r3, r2
 1601 00f0 1A18     		adds	r2, r3, r0
 1602              	.LVL199:
 1603 00f2 3148     		ldr	r0, .L105+4
 1604 00f4 2B70     		strb	r3, [r5, #0]
 1605 00f6 2270     		strb	r2, [r4, #0]
 1606 00f8 FFF7FEFF 		bl	uart_transmit
 1607              	.LVL200:
 1608              	.LBE45:
 1609              	.LBB46:
 1610 00fc 2B78     		ldrb	r3, [r5, #0]	@ zero_extendqisi2
 1611 00fe 7179     		ldrb	r1, [r6, #5]	@ zero_extendqisi2
 1612              	.LVL201:
 1613 0100 2278     		ldrb	r2, [r4, #0]	@ zero_extendqisi2
 1614 0102 C818     		adds	r0, r1, r3
 1615 0104 C3B2     		uxtb	r3, r0
 1616 0106 9818     		adds	r0, r3, r2
 1617              	.LVL202:
 1618 0108 2070     		strb	r0, [r4, #0]
 1619 010a 2B48     		ldr	r0, .L105+4
 1620 010c 2B70     		strb	r3, [r5, #0]
 1621 010e FFF7FEFF 		bl	uart_transmit
 1622              	.LVL203:
 1623              	.LBE46:
 1624              	.LBB47:
 1625 0112 2B78     		ldrb	r3, [r5, #0]	@ zero_extendqisi2
 1626 0114 B179     		ldrb	r1, [r6, #6]	@ zero_extendqisi2
 1627              	.LVL204:
 1628 0116 CA18     		adds	r2, r1, r3
 1629 0118 2378     		ldrb	r3, [r4, #0]	@ zero_extendqisi2
 1630 011a D0B2     		uxtb	r0, r2
 1631 011c C218     		adds	r2, r0, r3
 1632              	.LVL205:
 1633 011e 2870     		strb	r0, [r5, #0]
 1634 0120 2548     		ldr	r0, .L105+4
 1635              	.LVL206:
 1636 0122 2270     		strb	r2, [r4, #0]
 1637 0124 FFF7FEFF 		bl	uart_transmit
 1638              	.LVL207:
 1639              	.LBE47:
 1640              	.LBB48:
 1641 0128 2878     		ldrb	r0, [r5, #0]	@ zero_extendqisi2
 1642 012a F179     		ldrb	r1, [r6, #7]	@ zero_extendqisi2
 1643              	.LVL208:
 1644 012c 2278     		ldrb	r2, [r4, #0]	@ zero_extendqisi2
 1645 012e 0B18     		adds	r3, r1, r0
 1646 0130 D8B2     		uxtb	r0, r3
 1647 0132 8318     		adds	r3, r0, r2
 1648              	.LVL209:
 1649 0134 2870     		strb	r0, [r5, #0]
 1650 0136 2048     		ldr	r0, .L105+4
 1651              	.LVL210:
 1652 0138 2370     		strb	r3, [r4, #0]
 1653 013a FFF7FEFF 		bl	uart_transmit
 1654              	.LVL211:
 1655              	.LBE48:
 1656              	.LBB49:
 1657 013e 2878     		ldrb	r0, [r5, #0]	@ zero_extendqisi2
 1658 0140 317A     		ldrb	r1, [r6, #8]	@ zero_extendqisi2
 1659              	.LVL212:
 1660 0142 0A18     		adds	r2, r1, r0
 1661 0144 2078     		ldrb	r0, [r4, #0]	@ zero_extendqisi2
 1662 0146 D3B2     		uxtb	r3, r2
 1663 0148 1A18     		adds	r2, r3, r0
 1664              	.LVL213:
 1665 014a 1B48     		ldr	r0, .L105+4
 1666 014c 2B70     		strb	r3, [r5, #0]
 1667 014e 2270     		strb	r2, [r4, #0]
 1668 0150 FFF7FEFF 		bl	uart_transmit
 1669              	.LVL214:
 1670              	.LBE49:
 1671              	.LBB50:
 1672 0154 2B78     		ldrb	r3, [r5, #0]	@ zero_extendqisi2
 1673 0156 717A     		ldrb	r1, [r6, #9]	@ zero_extendqisi2
 1674              	.LVL215:
 1675 0158 2278     		ldrb	r2, [r4, #0]	@ zero_extendqisi2
 1676 015a C818     		adds	r0, r1, r3
 1677 015c C3B2     		uxtb	r3, r0
 1678 015e 9818     		adds	r0, r3, r2
 1679              	.LVL216:
 1680 0160 2070     		strb	r0, [r4, #0]
 1681 0162 1548     		ldr	r0, .L105+4
 1682 0164 2B70     		strb	r3, [r5, #0]
 1683 0166 FFF7FEFF 		bl	uart_transmit
 1684              	.LVL217:
 1685              	.LBE50:
 1686              	.LBB51:
 1687 016a 2B78     		ldrb	r3, [r5, #0]	@ zero_extendqisi2
 1688 016c B17A     		ldrb	r1, [r6, #10]	@ zero_extendqisi2
 1689              	.LVL218:
 1690 016e CA18     		adds	r2, r1, r3
 1691 0170 2378     		ldrb	r3, [r4, #0]	@ zero_extendqisi2
 1692 0172 D0B2     		uxtb	r0, r2
 1693 0174 C218     		adds	r2, r0, r3
 1694              	.LVL219:
 1695 0176 2870     		strb	r0, [r5, #0]
 1696 0178 0F48     		ldr	r0, .L105+4
 1697              	.LVL220:
 1698 017a 2270     		strb	r2, [r4, #0]
 1699 017c FFF7FEFF 		bl	uart_transmit
 1700              	.LVL221:
 1701              	.LBE51:
 1702              	.LBB52:
 1703 0180 2878     		ldrb	r0, [r5, #0]	@ zero_extendqisi2
 1704 0182 F17A     		ldrb	r1, [r6, #11]	@ zero_extendqisi2
 1705              	.LVL222:
 1706 0184 2278     		ldrb	r2, [r4, #0]	@ zero_extendqisi2
 1707 0186 0B18     		adds	r3, r1, r0
 1708 0188 D8B2     		uxtb	r0, r3
 1709 018a 8318     		adds	r3, r0, r2
 1710              	.LVL223:
 1711 018c 2870     		strb	r0, [r5, #0]
 1712 018e 0A48     		ldr	r0, .L105+4
 1713              	.LVL224:
 1714 0190 2370     		strb	r3, [r4, #0]
 1715 0192 FFF7FEFF 		bl	uart_transmit
 1716              	.LVL225:
 1717              	.LBE52:
 1718 0196 2978     		ldrb	r1, [r5, #0]	@ zero_extendqisi2
 1719 0198 0748     		ldr	r0, .L105+4
 1720 019a FFF7FEFF 		bl	uart_transmit
 1721              	.LVL226:
 1722 019e 0648     		ldr	r0, .L105+4
 1723 01a0 2178     		ldrb	r1, [r4, #0]	@ zero_extendqisi2
 315:firmwares/rotorcraft/navigation.c ****   }
 316:firmwares/rotorcraft/navigation.c **** }
 1724              		.loc 2 316 0 is_stmt 1 discriminator 1
 1725 01a2 BDE8F840 		pop	{r3, r4, r5, r6, r7, lr}
 314:firmwares/rotorcraft/navigation.c ****     DOWNLINK_SEND_WP_MOVED_ENU(DefaultChannel, DefaultDevice, &wp_id, &(new_pos->x), &(new_pos->y),
 1726              		.loc 2 314 0 discriminator 1
 1727 01a6 FFF7FEBF 		b	uart_transmit
 1728              	.LVL227:
 1729              	.L104:
 314:firmwares/rotorcraft/navigation.c ****     DOWNLINK_SEND_WP_MOVED_ENU(DefaultChannel, DefaultDevice, &wp_id, &(new_pos->x), &(new_pos->y),
 1730              		.loc 2 314 0 is_stmt 0 discriminator 2
 1731 01aa 084B     		ldr	r3, .L105+24
 1732 01ac 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 1733 01ae 501C     		adds	r0, r2, #1
 1734 01b0 1870     		strb	r0, [r3, #0]
 1735              	.L102:
 1736 01b2 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1737              	.L106:
 1738              		.align	2
 1739              	.L105:
 1740 01b4 00000000 		.word	.LANCHOR1
 1741 01b8 00000000 		.word	uart2
 1742 01bc 00000000 		.word	downlink_nb_msgs
 1743 01c0 00000000 		.word	downlink_nb_bytes
 1744 01c4 00000000 		.word	ck_a
 1745 01c8 00000000 		.word	ck_b
 1746 01cc 00000000 		.word	downlink_nb_ovrn
 1747              		.cfi_endproc
 1748              	.LFE140:
 1750              		.section	.text.navigation_update_wp_from_speed,"ax",%progbits
 1751              		.align	1
 1752              		.global	navigation_update_wp_from_speed
 1753              		.thumb
 1754              		.thumb_func
 1756              	navigation_update_wp_from_speed:
 1757              	.LFB141:
 317:firmwares/rotorcraft/navigation.c **** 
 318:firmwares/rotorcraft/navigation.c **** void navigation_update_wp_from_speed(uint8_t wp, struct Int16Vect3 speed_sp, int16_t heading_rate_s
 1758              		.loc 2 318 0 is_stmt 1
 1759              		.cfi_startproc
 1760              		@ args = 0, pretend = 0, frame = 16
 1761              		@ frame_needed = 0, uses_anonymous_args = 0
 1762              	.LVL228:
 1763 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 1764              	.LCFI10:
 1765              		.cfi_def_cfa_offset 36
 1766              		.cfi_offset 4, -36
 1767              		.cfi_offset 5, -32
 1768              		.cfi_offset 6, -28
 1769              		.cfi_offset 7, -24
 1770              		.cfi_offset 8, -20
 1771              		.cfi_offset 9, -16
 1772              		.cfi_offset 10, -12
 1773              		.cfi_offset 11, -8
 1774              		.cfi_offset 14, -4
 1775 0004 85B0     		sub	sp, sp, #20
 1776              	.LCFI11:
 1777              		.cfi_def_cfa_offset 56
 1778              		.loc 2 318 0
 1779 0006 0446     		mov	r4, r0
 1780 0008 04A8     		add	r0, sp, #16
 1781              	.LVL229:
 1782 000a 00E90600 		stmdb	r0, {r1, r2}
 1783              	.LBB53:
 319:firmwares/rotorcraft/navigation.c ****   //  MY_ASSERT(wp < nb_waypoint); FIXME
 320:firmwares/rotorcraft/navigation.c ****   int32_t s_heading, c_heading;
 321:firmwares/rotorcraft/navigation.c ****   PPRZ_ITRIG_SIN(s_heading, nav_heading);
 1784              		.loc 2 321 0
 1785 000e 544A     		ldr	r2, .L139
 1786              	.LBE53:
 318:firmwares/rotorcraft/navigation.c **** void navigation_update_wp_from_speed(uint8_t wp, struct Int16Vect3 speed_sp, int16_t heading_rate_s
 1787              		.loc 2 318 0
 1788 0010 0193     		str	r3, [sp, #4]
 1789              	.LBB54:
 1790              		.loc 2 321 0
 1791 0012 1068     		ldr	r0, [r2, #0]
 1792              	.LVL230:
 1793 0014 0246     		mov	r2, r0
 1794              	.LVL231:
 1795              	.L108:
 1796              		.loc 2 321 0 is_stmt 0 discriminator 1
 1797 0016 43F24321 		movw	r1, #12867
 1798 001a 8A42     		cmp	r2, r1
 1799 001c 03DD     		ble	.L133
 1800              	.L109:
 1801              		.loc 2 321 0 discriminator 2
 1802 001e A2F5C941 		sub	r1, r2, #25728
 1803 0022 CA1F     		subs	r2, r1, #7
 1804              	.LVL232:
 1805 0024 F7E7     		b	.L108
 1806              	.LVL233:
 1807              	.L133:
 1808              		.loc 2 321 0 discriminator 4
 1809 0026 4F4B     		ldr	r3, .L139+4
 1810 0028 9A42     		cmp	r2, r3
 1811 002a 03DA     		bge	.L136
 1812              	.L111:
 1813              		.loc 2 321 0 discriminator 5
 1814 002c 02F5C942 		add	r2, r2, #25728
 1815              	.LVL234:
 1816 0030 0732     		adds	r2, r2, #7
 1817              	.LVL235:
 1818 0032 F8E7     		b	.L133
 1819              	.LVL236:
 1820              	.L136:
 1821              		.loc 2 321 0 discriminator 6
 1822 0034 41F62115 		movw	r5, #6433
 1823 0038 AA42     		cmp	r2, r5
 1824 003a 4B4E     		ldr	r6, .L139+8
 1825 003c 03DD     		ble	.L112
 1826              		.loc 2 321 0 discriminator 7
 1827 003e C2F54957 		rsb	r7, r2, #12864
 1828 0042 FA1C     		adds	r2, r7, #3
 1829              	.LVL237:
 1830 0044 0CE0     		b	.L113
 1831              	.L112:
 1832              		.loc 2 321 0 discriminator 8
 1833 0046 6FF4C957 		mvn	r7, #6432
 1834 004a BA42     		cmp	r2, r7
 1835 004c 06DA     		bge	.L114
 1836              		.loc 2 321 0 discriminator 9
 1837 004e C2F17F42 		rsb	r2, r2, #-16777216
 1838              	.LVL238:
 1839 0052 02F57F01 		add	r1, r2, #16711680
 1840 0056 01F54D42 		add	r2, r1, #52480
 1841 005a BD32     		adds	r2, r2, #189
 1842              	.LVL239:
 1843              	.L114:
 1844              		.loc 2 321 0 discriminator 10
 1845 005c 002A     		cmp	r2, #0
 1846 005e 02DB     		blt	.L115
 1847              	.L113:
 1848              		.loc 2 321 0 discriminator 11
 1849 0060 36F91250 		ldrsh	r5, [r6, r2, lsl #1]
 1850              	.LVL240:
 1851 0064 03E0     		b	.L116
 1852              	.LVL241:
 1853              	.L115:
 1854              		.loc 2 321 0 discriminator 12
 1855 0066 5342     		negs	r3, r2
 1856 0068 36F91350 		ldrsh	r5, [r6, r3, lsl #1]
 1857 006c 6D42     		negs	r5, r5
 1858              	.LVL242:
 1859              	.L116:
 1860              	.LBE54:
 1861              	.LBB55:
 322:firmwares/rotorcraft/navigation.c ****   PPRZ_ITRIG_COS(c_heading, nav_heading);
 1862              		.loc 2 322 0 is_stmt 1
 1863 006e 00F5C956 		add	r6, r0, #6432
 1864 0072 721C     		adds	r2, r6, #1
 1865              	.LVL243:
 1866              	.L117:
 1867              		.loc 2 322 0 is_stmt 0 discriminator 1
 1868 0074 43F24321 		movw	r1, #12867
 1869 0078 8A42     		cmp	r2, r1
 1870 007a 03DD     		ble	.L134
 1871              	.L118:
 1872              		.loc 2 322 0 discriminator 2
 1873 007c A2F5C947 		sub	r7, r2, #25728
 1874 0080 FA1F     		subs	r2, r7, #7
 1875              	.LVL244:
 1876 0082 F7E7     		b	.L117
 1877              	.LVL245:
 1878              	.L134:
 1879              		.loc 2 322 0 discriminator 4
 1880 0084 374B     		ldr	r3, .L139+4
 1881 0086 9A42     		cmp	r2, r3
 1882 0088 03DA     		bge	.L137
 1883              	.L120:
 1884              		.loc 2 322 0 discriminator 5
 1885 008a 02F5C946 		add	r6, r2, #25728
 1886 008e F21D     		adds	r2, r6, #7
 1887              	.LVL246:
 1888 0090 F8E7     		b	.L134
 1889              	.LVL247:
 1890              	.L137:
 1891              		.loc 2 322 0 discriminator 6
 1892 0092 41F62117 		movw	r7, #6433
 1893 0096 BA42     		cmp	r2, r7
 1894 0098 3349     		ldr	r1, .L139+8
 1895 009a 03DD     		ble	.L121
 1896              		.loc 2 322 0 discriminator 7
 1897 009c C2F54953 		rsb	r3, r2, #12864
 1898 00a0 DA1C     		adds	r2, r3, #3
 1899              	.LVL248:
 1900 00a2 0CE0     		b	.L122
 1901              	.L121:
 1902              		.loc 2 322 0 discriminator 8
 1903 00a4 6FF4C956 		mvn	r6, #6432
 1904 00a8 B242     		cmp	r2, r6
 1905 00aa 06DA     		bge	.L123
 1906              		.loc 2 322 0 discriminator 9
 1907 00ac C2F17F42 		rsb	r2, r2, #-16777216
 1908              	.LVL249:
 1909 00b0 02F57F03 		add	r3, r2, #16711680
 1910 00b4 03F54D42 		add	r2, r3, #52480
 1911 00b8 BD32     		adds	r2, r2, #189
 1912              	.LVL250:
 1913              	.L123:
 1914              		.loc 2 322 0 discriminator 10
 1915 00ba 002A     		cmp	r2, #0
 1916 00bc 02DB     		blt	.L124
 1917              	.L122:
 1918              		.loc 2 322 0 discriminator 11
 1919 00be 31F91260 		ldrsh	r6, [r1, r2, lsl #1]
 1920              	.LVL251:
 1921 00c2 03E0     		b	.L125
 1922              	.LVL252:
 1923              	.L124:
 1924              		.loc 2 322 0 discriminator 12
 1925 00c4 5742     		negs	r7, r2
 1926 00c6 31F91710 		ldrsh	r1, [r1, r7, lsl #1]
 1927 00ca 4E42     		negs	r6, r1
 1928              	.LVL253:
 1929              	.L125:
 1930              	.LBE55:
 323:firmwares/rotorcraft/navigation.c ****   // FIXME : scale POS to SPEED
 324:firmwares/rotorcraft/navigation.c ****   struct Int32Vect3 delta_pos;
 325:firmwares/rotorcraft/navigation.c ****   VECT3_SDIV(delta_pos, speed_sp,NAV_FREQ); /* fixme :make sure the division is really a >> */
 1931              		.loc 2 325 0 is_stmt 1
 1932 00cc BDF90A80 		ldrsh	r8, [sp, #10]
 1933 00d0 1022     		movs	r2, #16
 1934              	.LVL254:
 1935 00d2 98FBF2F1 		sdiv	r1, r8, r2
 1936 00d6 BDF90890 		ldrsh	r9, [sp, #8]
 326:firmwares/rotorcraft/navigation.c ****   INT32_VECT3_RSHIFT(delta_pos, delta_pos, (INT32_SPEED_FRAC-INT32_POS_FRAC));
 1937              		.loc 2 326 0
 1938 00da 4FEAE128 		asr	r8, r1, #11
 325:firmwares/rotorcraft/navigation.c ****   VECT3_SDIV(delta_pos, speed_sp,NAV_FREQ); /* fixme :make sure the division is really a >> */
 1939              		.loc 2 325 0
 1940 00de 99FBF2F7 		sdiv	r7, r9, r2
 327:firmwares/rotorcraft/navigation.c ****   waypoints[wp].x += (s_heading * delta_pos.x + c_heading * delta_pos.y) >> INT32_TRIG_FRAC;
 1941              		.loc 2 327 0
 1942 00e2 08FB06FA 		mul	sl, r8, r6
 326:firmwares/rotorcraft/navigation.c ****   INT32_VECT3_RSHIFT(delta_pos, delta_pos, (INT32_SPEED_FRAC-INT32_POS_FRAC));
 1943              		.loc 2 326 0
 1944 00e6 4FEAE729 		asr	r9, r7, #11
 1945              	.LVL255:
 1946              		.loc 2 327 0
 1947 00ea 0C27     		movs	r7, #12
 1948 00ec 6743     		muls	r7, r4, r7
 328:firmwares/rotorcraft/navigation.c ****   waypoints[wp].y += (c_heading * delta_pos.x - s_heading * delta_pos.y) >> INT32_TRIG_FRAC;
 1949              		.loc 2 328 0
 1950 00ee 09FB06F6 		mul	r6, r9, r6
 1951              	.LVL256:
 327:firmwares/rotorcraft/navigation.c ****   waypoints[wp].x += (s_heading * delta_pos.x + c_heading * delta_pos.y) >> INT32_TRIG_FRAC;
 1952              		.loc 2 327 0
 1953 00f2 DFF87CC0 		ldr	ip, .L139+16
 1954 00f6 09FB05AA 		mla	sl, r9, r5, sl
 1955 00fa 5CF80730 		ldr	r3, [ip, r7]
 1956              		.loc 2 328 0
 1957 00fe 08FB1565 		mls	r5, r8, r5, r6
 1958              	.LVL257:
 327:firmwares/rotorcraft/navigation.c ****   waypoints[wp].x += (s_heading * delta_pos.x + c_heading * delta_pos.y) >> INT32_TRIG_FRAC;
 1959              		.loc 2 327 0
 1960 0102 0CEB0701 		add	r1, ip, r7
 1961 0106 03EBAA3A 		add	sl, r3, sl, asr #14
 325:firmwares/rotorcraft/navigation.c ****   VECT3_SDIV(delta_pos, speed_sp,NAV_FREQ); /* fixme :make sure the division is really a >> */
 1962              		.loc 2 325 0
 1963 010a BDF90CB0 		ldrsh	fp, [sp, #12]
 329:firmwares/rotorcraft/navigation.c ****   waypoints[wp].z += delta_pos.z;
 1964              		.loc 2 329 0
 1965 010e 8B68     		ldr	r3, [r1, #8]
 327:firmwares/rotorcraft/navigation.c ****   waypoints[wp].x += (s_heading * delta_pos.x + c_heading * delta_pos.y) >> INT32_TRIG_FRAC;
 1966              		.loc 2 327 0
 1967 0110 4CF807A0 		str	sl, [ip, r7]
 328:firmwares/rotorcraft/navigation.c ****   waypoints[wp].y += (c_heading * delta_pos.x - s_heading * delta_pos.y) >> INT32_TRIG_FRAC;
 1968              		.loc 2 328 0
 1969 0114 4F68     		ldr	r7, [r1, #4]
 325:firmwares/rotorcraft/navigation.c ****   VECT3_SDIV(delta_pos, speed_sp,NAV_FREQ); /* fixme :make sure the division is really a >> */
 1970              		.loc 2 325 0
 1971 0116 9BFBF2FB 		sdiv	fp, fp, r2
 1972              	.LVL258:
 328:firmwares/rotorcraft/navigation.c ****   waypoints[wp].y += (c_heading * delta_pos.x - s_heading * delta_pos.y) >> INT32_TRIG_FRAC;
 1973              		.loc 2 328 0
 1974 011a 07EBA537 		add	r7, r7, r5, asr #14
 1975              		.loc 2 329 0
 1976 011e 03EBEB25 		add	r5, r3, fp, asr #11
 328:firmwares/rotorcraft/navigation.c ****   waypoints[wp].y += (c_heading * delta_pos.x - s_heading * delta_pos.y) >> INT32_TRIG_FRAC;
 1977              		.loc 2 328 0
 1978 0122 4F60     		str	r7, [r1, #4]
 1979              		.loc 2 329 0
 1980 0124 8D60     		str	r5, [r1, #8]
 330:firmwares/rotorcraft/navigation.c ****   int32_t delta_heading = heading_rate_sp / NAV_FREQ;
 1981              		.loc 2 330 0
 1982 0126 0199     		ldr	r1, [sp, #4]
 1983 0128 91FBF2F2 		sdiv	r2, r1, r2
 1984              	.LVL259:
 331:firmwares/rotorcraft/navigation.c ****   delta_heading = delta_heading >> (INT32_SPEED_FRAC-INT32_POS_FRAC);
 332:firmwares/rotorcraft/navigation.c ****   nav_heading += delta_heading;
 1985              		.loc 2 332 0
 1986 012c 00EBE220 		add	r0, r0, r2, asr #11
 1987              	.L126:
 333:firmwares/rotorcraft/navigation.c **** 
 334:firmwares/rotorcraft/navigation.c ****   INT32_COURSE_NORMALIZE(nav_heading);
 1988              		.loc 2 334 0 discriminator 1
 1989 0130 0028     		cmp	r0, #0
 1990 0132 03DA     		bge	.L135
 1991              	.L127:
 1992              		.loc 2 334 0 is_stmt 0 discriminator 2
 1993 0134 00F5C943 		add	r3, r0, #25728
 1994 0138 D81D     		adds	r0, r3, #7
 1995 013a F9E7     		b	.L126
 1996              	.L135:
 1997              		.loc 2 334 0 discriminator 4
 1998 013c 46F28643 		movw	r3, #25734
 1999 0140 9842     		cmp	r0, r3
 2000 0142 03DD     		ble	.L138
 2001              	.L129:
 2002              		.loc 2 334 0 discriminator 5
 2003 0144 A0F5C941 		sub	r1, r0, #25728
 2004 0148 C81F     		subs	r0, r1, #7
 2005 014a F7E7     		b	.L135
 2006              	.L138:
 2007 014c 0449     		ldr	r1, .L139
 2008 014e 0860     		str	r0, [r1, #0]
 2009              	.LBB56:
 335:firmwares/rotorcraft/navigation.c ****   RunOnceEvery(10,DOWNLINK_SEND_WP_MOVED_ENU(DefaultChannel, DefaultDevice, &wp, &(waypoints[wp].x)
 2010              		.loc 2 335 0 is_stmt 1
 2011 0150 0648     		ldr	r0, .L139+12
 2012 0152 0288     		ldrh	r2, [r0, #0]
 2013              	.LVL260:
 2014 0154 531C     		adds	r3, r2, #1
 2015 0156 99B2     		uxth	r1, r3
 2016 0158 0929     		cmp	r1, #9
 2017 015a 0BD8     		bhi	.L130
 2018 015c 0180     		strh	r1, [r0, #0]	@ movhi
 2019 015e E4E0     		b	.L107
 2020              	.L140:
 2021              		.align	2
 2022              	.L139:
 2023 0160 00000000 		.word	.LANCHOR12
 2024 0164 BDCDFFFF 		.word	-12867
 2025 0168 00000000 		.word	pprz_trig_int
 2026 016c 00000000 		.word	.LANCHOR28
 2027 0170 00000000 		.word	.LANCHOR1
 2028              	.L130:
 2029              		.loc 2 335 0 is_stmt 0 discriminator 1
 2030 0174 0022     		movs	r2, #0
 2031 0176 0280     		strh	r2, [r0, #0]	@ movhi
 2032 0178 1321     		movs	r1, #19
 2033 017a 6D48     		ldr	r0, .L141
 2034 017c FFF7FEFF 		bl	uart_check_free_space
 2035              	.LVL261:
 2036 0180 0028     		cmp	r0, #0
 2037 0182 00F0CE80 		beq	.L132
 2038              		.loc 2 335 0 discriminator 2
 2039 0186 6B4F     		ldr	r7, .L141+4
 2040 0188 6B4E     		ldr	r6, .L141+8
 2041 018a 3A88     		ldrh	r2, [r7, #0]
 2042 018c 3588     		ldrh	r5, [r6, #0]
 2043 018e 501C     		adds	r0, r2, #1
 2044 0190 1335     		adds	r5, r5, #19
 2045 0192 3880     		strh	r0, [r7, #0]	@ movhi
 2046              	.LBB57:
 2047 0194 9921     		movs	r1, #153
 2048 0196 6648     		ldr	r0, .L141
 2049              	.LBE57:
 2050 0198 3580     		strh	r5, [r6, #0]	@ movhi
 2051 019a 684D     		ldr	r5, .L141+12
 2052              	.LBB58:
 2053 019c FFF7FEFF 		bl	uart_transmit
 2054              	.LVL262:
 2055 01a0 1321     		movs	r1, #19
 2056 01a2 6348     		ldr	r0, .L141
 2057              	.LBE58:
 2058 01a4 664E     		ldr	r6, .L141+16
 2059              	.LBB59:
 2060 01a6 FFF7FEFF 		bl	uart_transmit
 2061              	.LVL263:
 2062              	.LBE59:
 2063 01aa 2721     		movs	r1, #39
 2064 01ac 1423     		movs	r3, #20
 2065 01ae 2970     		strb	r1, [r5, #0]
 2066 01b0 5F48     		ldr	r0, .L141
 2067 01b2 0121     		movs	r1, #1
 2068 01b4 3370     		strb	r3, [r6, #0]
 2069 01b6 FFF7FEFF 		bl	uart_transmit
 2070              	.LVL264:
 2071 01ba 3778     		ldrb	r7, [r6, #0]	@ zero_extendqisi2
 2072 01bc 2A78     		ldrb	r2, [r5, #0]	@ zero_extendqisi2
 2073 01be 3137     		adds	r7, r7, #49
 2074 01c0 F8B2     		uxtb	r0, r7
 2075              	.LVL265:
 2076 01c2 8318     		adds	r3, r0, r2
 2077              	.LVL266:
 2078 01c4 3070     		strb	r0, [r6, #0]
 2079 01c6 3121     		movs	r1, #49
 2080 01c8 5948     		ldr	r0, .L141
 2081              	.LVL267:
 2082 01ca 2B70     		strb	r3, [r5, #0]
 2083              	.LBB60:
 2084 01cc 4FF00C09 		mov	r9, #12
 2085              	.LVL268:
 2086              	.LBE60:
 2087 01d0 FFF7FEFF 		bl	uart_transmit
 2088              	.LVL269:
 2089              	.LBB61:
 2090 01d4 3178     		ldrb	r1, [r6, #0]	@ zero_extendqisi2
 2091              	.LBE61:
 2092              	.LBB62:
 2093 01d6 09FB04F9 		mul	r9, r9, r4
 2094              	.LBE62:
 2095              	.LBB63:
 2096 01da 2A78     		ldrb	r2, [r5, #0]	@ zero_extendqisi2
 2097 01dc 6718     		adds	r7, r4, r1
 2098              	.LBE63:
 2099              	.LBB64:
 2100 01de DFF86881 		ldr	r8, .L141+24
 2101              	.LVL270:
 2102              	.LBE64:
 2103              	.LBB65:
 2104 01e2 F8B2     		uxtb	r0, r7
 2105 01e4 8318     		adds	r3, r0, r2
 2106              	.LVL271:
 2107 01e6 3070     		strb	r0, [r6, #0]
 2108 01e8 2146     		mov	r1, r4
 2109 01ea 5148     		ldr	r0, .L141
 2110              	.LVL272:
 2111 01ec 2B70     		strb	r3, [r5, #0]
 2112 01ee FFF7FEFF 		bl	uart_transmit
 2113              	.LVL273:
 2114              	.LBE65:
 2115              	.LBB66:
 2116 01f2 18F80910 		ldrb	r1, [r8, r9]	@ zero_extendqisi2
 2117              	.LVL274:
 2118 01f6 3478     		ldrb	r4, [r6, #0]	@ zero_extendqisi2
 2119              	.LVL275:
 2120 01f8 2A78     		ldrb	r2, [r5, #0]	@ zero_extendqisi2
 2121 01fa 0819     		adds	r0, r1, r4
 2122 01fc C3B2     		uxtb	r3, r0
 2123 01fe 08EB0907 		add	r7, r8, r9
 2124              	.LVL276:
 2125 0202 9C18     		adds	r4, r3, r2
 2126              	.LVL277:
 2127 0204 4A48     		ldr	r0, .L141
 2128 0206 3370     		strb	r3, [r6, #0]
 2129 0208 2C70     		strb	r4, [r5, #0]
 2130 020a FFF7FEFF 		bl	uart_transmit
 2131              	.LVL278:
 2132              	.LBE66:
 2133              	.LBB67:
 2134 020e 3078     		ldrb	r0, [r6, #0]	@ zero_extendqisi2
 2135 0210 7978     		ldrb	r1, [r7, #1]	@ zero_extendqisi2
 2136              	.LVL279:
 2137 0212 2A78     		ldrb	r2, [r5, #0]	@ zero_extendqisi2
 2138 0214 0B18     		adds	r3, r1, r0
 2139 0216 DCB2     		uxtb	r4, r3
 2140 0218 A018     		adds	r0, r4, r2
 2141              	.LVL280:
 2142 021a 2870     		strb	r0, [r5, #0]
 2143 021c 4448     		ldr	r0, .L141
 2144 021e 3470     		strb	r4, [r6, #0]
 2145 0220 FFF7FEFF 		bl	uart_transmit
 2146              	.LVL281:
 2147              	.LBE67:
 2148              	.LBB68:
 2149 0224 3378     		ldrb	r3, [r6, #0]	@ zero_extendqisi2
 2150 0226 B978     		ldrb	r1, [r7, #2]	@ zero_extendqisi2
 2151              	.LVL282:
 2152 0228 2A78     		ldrb	r2, [r5, #0]	@ zero_extendqisi2
 2153 022a CC18     		adds	r4, r1, r3
 2154              	.LVL283:
 2155 022c E0B2     		uxtb	r0, r4
 2156 022e 8318     		adds	r3, r0, r2
 2157              	.LVL284:
 2158 0230 3070     		strb	r0, [r6, #0]
 2159 0232 3F48     		ldr	r0, .L141
 2160              	.LVL285:
 2161 0234 2B70     		strb	r3, [r5, #0]
 2162 0236 FFF7FEFF 		bl	uart_transmit
 2163              	.LVL286:
 2164              	.LBE68:
 2165              	.LBB69:
 2166 023a 3478     		ldrb	r4, [r6, #0]	@ zero_extendqisi2
 2167 023c F978     		ldrb	r1, [r7, #3]	@ zero_extendqisi2
 2168              	.LVL287:
 2169 023e 2A78     		ldrb	r2, [r5, #0]	@ zero_extendqisi2
 2170 0240 0819     		adds	r0, r1, r4
 2171 0242 C3B2     		uxtb	r3, r0
 2172 0244 9C18     		adds	r4, r3, r2
 2173              	.LVL288:
 2174 0246 3A48     		ldr	r0, .L141
 2175 0248 3370     		strb	r3, [r6, #0]
 2176 024a 2C70     		strb	r4, [r5, #0]
 2177 024c FFF7FEFF 		bl	uart_transmit
 2178              	.LVL289:
 2179              	.LBE69:
 2180              	.LBB70:
 2181 0250 3C1D     		adds	r4, r7, #4
 2182 0252 3979     		ldrb	r1, [r7, #4]	@ zero_extendqisi2
 2183              	.LVL290:
 2184 0254 3778     		ldrb	r7, [r6, #0]	@ zero_extendqisi2
 2185 0256 2A78     		ldrb	r2, [r5, #0]	@ zero_extendqisi2
 2186 0258 C819     		adds	r0, r1, r7
 2187 025a C3B2     		uxtb	r3, r0
 2188 025c 9F18     		adds	r7, r3, r2
 2189              	.LVL291:
 2190 025e 3448     		ldr	r0, .L141
 2191 0260 3370     		strb	r3, [r6, #0]
 2192 0262 2F70     		strb	r7, [r5, #0]
 2193 0264 FFF7FEFF 		bl	uart_transmit
 2194              	.LVL292:
 2195              	.LBE70:
 2196              	.LBB71:
 2197 0268 3078     		ldrb	r0, [r6, #0]	@ zero_extendqisi2
 2198 026a 6178     		ldrb	r1, [r4, #1]	@ zero_extendqisi2
 2199              	.LVL293:
 2200 026c 2A78     		ldrb	r2, [r5, #0]	@ zero_extendqisi2
 2201 026e 0B18     		adds	r3, r1, r0
 2202 0270 DFB2     		uxtb	r7, r3
 2203 0272 B818     		adds	r0, r7, r2
 2204              	.LVL294:
 2205 0274 2870     		strb	r0, [r5, #0]
 2206 0276 2E48     		ldr	r0, .L141
 2207 0278 3770     		strb	r7, [r6, #0]
 2208 027a FFF7FEFF 		bl	uart_transmit
 2209              	.LVL295:
 2210              	.LBE71:
 2211              	.LBB72:
 2212 027e 3378     		ldrb	r3, [r6, #0]	@ zero_extendqisi2
 2213 0280 A178     		ldrb	r1, [r4, #2]	@ zero_extendqisi2
 2214              	.LVL296:
 2215 0282 2A78     		ldrb	r2, [r5, #0]	@ zero_extendqisi2
 2216 0284 CF18     		adds	r7, r1, r3
 2217              	.LVL297:
 2218 0286 F8B2     		uxtb	r0, r7
 2219 0288 8318     		adds	r3, r0, r2
 2220              	.LVL298:
 2221 028a 3070     		strb	r0, [r6, #0]
 2222 028c 2848     		ldr	r0, .L141
 2223              	.LVL299:
 2224 028e 2B70     		strb	r3, [r5, #0]
 2225 0290 FFF7FEFF 		bl	uart_transmit
 2226              	.LVL300:
 2227              	.LBE72:
 2228              	.LBB73:
 2229 0294 3778     		ldrb	r7, [r6, #0]	@ zero_extendqisi2
 2230 0296 E178     		ldrb	r1, [r4, #3]	@ zero_extendqisi2
 2231              	.LVL301:
 2232 0298 2A78     		ldrb	r2, [r5, #0]	@ zero_extendqisi2
 2233 029a C819     		adds	r0, r1, r7
 2234 029c C3B2     		uxtb	r3, r0
 2235 029e 9F18     		adds	r7, r3, r2
 2236              	.LVL302:
 2237              	.LBE73:
 2238              	.LBB74:
 2239 02a0 09F10809 		add	r9, r9, #8
 2240              	.LBE74:
 2241              	.LBB75:
 2242 02a4 2248     		ldr	r0, .L141
 2243 02a6 3370     		strb	r3, [r6, #0]
 2244 02a8 2F70     		strb	r7, [r5, #0]
 2245 02aa FFF7FEFF 		bl	uart_transmit
 2246              	.LVL303:
 2247              	.LBE75:
 2248              	.LBB76:
 2249 02ae 3078     		ldrb	r0, [r6, #0]	@ zero_extendqisi2
 2250 02b0 18F80910 		ldrb	r1, [r8, r9]	@ zero_extendqisi2
 2251              	.LVL304:
 2252 02b4 2A78     		ldrb	r2, [r5, #0]	@ zero_extendqisi2
 2253 02b6 0B18     		adds	r3, r1, r0
 2254 02b8 D8B2     		uxtb	r0, r3
 2255 02ba 8318     		adds	r3, r0, r2
 2256              	.LVL305:
 2257 02bc 08EB0907 		add	r7, r8, r9
 2258              	.LVL306:
 2259 02c0 3070     		strb	r0, [r6, #0]
 2260 02c2 1B48     		ldr	r0, .L141
 2261              	.LVL307:
 2262 02c4 2B70     		strb	r3, [r5, #0]
 2263 02c6 FFF7FEFF 		bl	uart_transmit
 2264              	.LVL308:
 2265              	.LBE76:
 2266              	.LBB77:
 2267 02ca 3078     		ldrb	r0, [r6, #0]	@ zero_extendqisi2
 2268 02cc 7978     		ldrb	r1, [r7, #1]	@ zero_extendqisi2
 2269              	.LVL309:
 2270 02ce 0A18     		adds	r2, r1, r0
 2271 02d0 2878     		ldrb	r0, [r5, #0]	@ zero_extendqisi2
 2272 02d2 D3B2     		uxtb	r3, r2
 2273 02d4 1A18     		adds	r2, r3, r0
 2274              	.LVL310:
 2275 02d6 1648     		ldr	r0, .L141
 2276 02d8 3370     		strb	r3, [r6, #0]
 2277 02da 2A70     		strb	r2, [r5, #0]
 2278 02dc FFF7FEFF 		bl	uart_transmit
 2279              	.LVL311:
 2280              	.LBE77:
 2281              	.LBB78:
 2282 02e0 3378     		ldrb	r3, [r6, #0]	@ zero_extendqisi2
 2283 02e2 B978     		ldrb	r1, [r7, #2]	@ zero_extendqisi2
 2284              	.LVL312:
 2285 02e4 2A78     		ldrb	r2, [r5, #0]	@ zero_extendqisi2
 2286 02e6 C818     		adds	r0, r1, r3
 2287 02e8 C3B2     		uxtb	r3, r0
 2288 02ea 9818     		adds	r0, r3, r2
 2289              	.LVL313:
 2290 02ec 2870     		strb	r0, [r5, #0]
 2291 02ee 1048     		ldr	r0, .L141
 2292 02f0 3370     		strb	r3, [r6, #0]
 2293 02f2 FFF7FEFF 		bl	uart_transmit
 2294              	.LVL314:
 2295              	.LBE78:
 2296              	.LBB79:
 2297 02f6 3378     		ldrb	r3, [r6, #0]	@ zero_extendqisi2
 2298 02f8 F978     		ldrb	r1, [r7, #3]	@ zero_extendqisi2
 2299              	.LVL315:
 2300 02fa CA18     		adds	r2, r1, r3
 2301 02fc 2B78     		ldrb	r3, [r5, #0]	@ zero_extendqisi2
 2302 02fe D0B2     		uxtb	r0, r2
 2303 0300 C218     		adds	r2, r0, r3
 2304              	.LVL316:
 2305 0302 3070     		strb	r0, [r6, #0]
 2306 0304 0A48     		ldr	r0, .L141
 2307              	.LVL317:
 2308 0306 2A70     		strb	r2, [r5, #0]
 2309 0308 FFF7FEFF 		bl	uart_transmit
 2310              	.LVL318:
 2311              	.LBE79:
 2312 030c 3178     		ldrb	r1, [r6, #0]	@ zero_extendqisi2
 2313 030e 0848     		ldr	r0, .L141
 2314 0310 FFF7FEFF 		bl	uart_transmit
 2315              	.LVL319:
 2316 0314 0648     		ldr	r0, .L141
 2317 0316 2978     		ldrb	r1, [r5, #0]	@ zero_extendqisi2
 2318              	.LBE56:
 336:firmwares/rotorcraft/navigation.c **** }
 2319              		.loc 2 336 0 is_stmt 1 discriminator 2
 2320 0318 05B0     		add	sp, sp, #20
 2321 031a BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 2322              	.LBB80:
 335:firmwares/rotorcraft/navigation.c ****   RunOnceEvery(10,DOWNLINK_SEND_WP_MOVED_ENU(DefaultChannel, DefaultDevice, &wp, &(waypoints[wp].x)
 2323              		.loc 2 335 0 discriminator 2
 2324 031e FFF7FEBF 		b	uart_transmit
 2325              	.LVL320:
 2326              	.L132:
 335:firmwares/rotorcraft/navigation.c ****   RunOnceEvery(10,DOWNLINK_SEND_WP_MOVED_ENU(DefaultChannel, DefaultDevice, &wp, &(waypoints[wp].x)
 2327              		.loc 2 335 0 is_stmt 0 discriminator 3
 2328 0322 0848     		ldr	r0, .L141+20
 2329 0324 0378     		ldrb	r3, [r0, #0]	@ zero_extendqisi2
 2330 0326 591C     		adds	r1, r3, #1
 2331 0328 0170     		strb	r1, [r0, #0]
 2332              	.L107:
 2333              	.LBE80:
 2334              		.loc 2 336 0 is_stmt 1
 2335 032a 05B0     		add	sp, sp, #20
 2336 032c BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 2337              	.L142:
 2338              		.align	2
 2339              	.L141:
 2340 0330 00000000 		.word	uart2
 2341 0334 00000000 		.word	downlink_nb_msgs
 2342 0338 00000000 		.word	downlink_nb_bytes
 2343 033c 00000000 		.word	ck_b
 2344 0340 00000000 		.word	ck_a
 2345 0344 00000000 		.word	downlink_nb_ovrn
 2346 0348 00000000 		.word	.LANCHOR1
 2347              		.cfi_endproc
 2348              	.LFE141:
 2350              		.section	.text.nav_detect_ground,"ax",%progbits
 2351              		.align	1
 2352              		.global	nav_detect_ground
 2353              		.thumb
 2354              		.thumb_func
 2356              	nav_detect_ground:
 2357              	.LFB142:
 337:firmwares/rotorcraft/navigation.c **** 
 338:firmwares/rotorcraft/navigation.c **** bool_t nav_detect_ground(void) {
 2358              		.loc 2 338 0
 2359              		.cfi_startproc
 2360              		@ args = 0, pretend = 0, frame = 0
 2361              		@ frame_needed = 0, uses_anonymous_args = 0
 2362              		@ link register save eliminated.
 339:firmwares/rotorcraft/navigation.c ****   if (!autopilot_detect_ground) return FALSE;
 2363              		.loc 2 339 0
 2364 0000 034B     		ldr	r3, .L146
 2365 0002 1878     		ldrb	r0, [r3, #0]	@ zero_extendqisi2
 2366 0004 10B1     		cbz	r0, .L144
 340:firmwares/rotorcraft/navigation.c ****   autopilot_detect_ground = FALSE;
 2367              		.loc 2 340 0
 2368 0006 0022     		movs	r2, #0
 2369 0008 1A70     		strb	r2, [r3, #0]
 341:firmwares/rotorcraft/navigation.c ****   return TRUE;
 2370              		.loc 2 341 0
 2371 000a 0120     		movs	r0, #1
 2372              	.L144:
 342:firmwares/rotorcraft/navigation.c **** }
 2373              		.loc 2 342 0
 2374 000c 7047     		bx	lr
 2375              	.L147:
 2376 000e 00BF     		.align	2
 2377              	.L146:
 2378 0010 00000000 		.word	autopilot_detect_ground
 2379              		.cfi_endproc
 2380              	.LFE142:
 2382              		.global	__aeabi_fcmpgt
 2383              		.section	.text.nav_periodic_task,"ax",%progbits
 2384              		.align	1
 2385              		.global	nav_periodic_task
 2386              		.thumb
 2387              		.thumb_func
 2389              	nav_periodic_task:
 2390              	.LFB132:
 296:firmwares/rotorcraft/navigation.c **** void nav_periodic_task() {
 2391              		.loc 2 296 0
 2392              		.cfi_startproc
 2393              		@ args = 0, pretend = 0, frame = 0
 2394              		@ frame_needed = 0, uses_anonymous_args = 0
 2395              	.LBB92:
 297:firmwares/rotorcraft/navigation.c ****   RunOnceEvery(16, { stage_time++;  block_time++; });
 2396              		.loc 2 297 0
 2397 0000 944B     		ldr	r3, .L256
 2398              	.LBE92:
 296:firmwares/rotorcraft/navigation.c **** void nav_periodic_task() {
 2399              		.loc 2 296 0
 2400 0002 70B5     		push	{r4, r5, r6, lr}
 2401              	.LCFI12:
 2402              		.cfi_def_cfa_offset 16
 2403              		.cfi_offset 4, -16
 2404              		.cfi_offset 5, -12
 2405              		.cfi_offset 6, -8
 2406              		.cfi_offset 14, -4
 2407              	.LBB93:
 297:firmwares/rotorcraft/navigation.c ****   RunOnceEvery(16, { stage_time++;  block_time++; });
 2408              		.loc 2 297 0
 2409 0004 1A88     		ldrh	r2, [r3, #0]
 2410 0006 501C     		adds	r0, r2, #1
 2411 0008 82B2     		uxth	r2, r0
 2412 000a 0F2A     		cmp	r2, #15
 2413 000c 08D9     		bls	.L237
 2414              	.L149:
 297:firmwares/rotorcraft/navigation.c ****   RunOnceEvery(16, { stage_time++;  block_time++; });
 2415              		.loc 2 297 0 is_stmt 0 discriminator 1
 2416 000e 0021     		movs	r1, #0
 2417 0010 1980     		strh	r1, [r3, #0]	@ movhi
 2418 0012 914B     		ldr	r3, .L256+4
 2419 0014 1A88     		ldrh	r2, [r3, #0]
 2420 0016 501C     		adds	r0, r2, #1
 2421 0018 1880     		strh	r0, [r3, #0]	@ movhi
 2422 001a 904B     		ldr	r3, .L256+8
 2423 001c 1988     		ldrh	r1, [r3, #0]
 2424 001e 4A1C     		adds	r2, r1, #1
 2425              	.L237:
 2426 0020 1A80     		strh	r2, [r3, #0]	@ movhi
 2427              	.LBE93:
 2428              	.LBB94:
 2429              	.LBB95:
 2430              		.file 3 "/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h"
   1:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h **** /* This file has been generated from /Users/tony-yi/git/paparazzi_local/conf/flight_plans/rotorcraf
   2:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h **** /* Please DO NOT EDIT */
   3:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h **** 
   4:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h **** #ifndef FLIGHT_PLAN_H
   5:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h **** #define FLIGHT_PLAN_H
   6:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h **** 
   7:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h **** #include "std.h"
   8:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h **** #include "generated/modules.h"
   9:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h **** #include "autopilot.h"
  10:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h **** #define FLIGHT_PLAN_NAME "MYAC-TEST"
  11:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h **** #define NAV_UTM_EAST0 377349
  12:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h **** #define NAV_UTM_NORTH0 4824583
  13:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h **** #define NAV_UTM_ZONE0 31
  14:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h **** #define NAV_LAT0 435641194 /* 1e7deg */
  15:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h **** #define NAV_LON0 14812805 /* 1e7deg */
  16:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h **** #define NAV_ALT0 0 /* mm above msl */
  17:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h **** #define NAV_MSL0 51850 /* mm, EGM96 geoid-height (msl) over ellipsoid */
  18:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h **** #define QFU 0.0
  19:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h **** #define WP_dummy 0
  20:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h **** #define WP_HOME 1
  21:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h **** #define WP_STDBY 2
  22:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h **** #define WP_p1 3
  23:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h **** #define WP_p2 4
  24:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h **** #define WP_LZ 5
  25:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h **** #define WAYPOINTS { \
  26:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****  {42.0, 42.0, 3},\
  27:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****  {0.0, 0.0, 3},\
  28:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****  {0.0, 0.0, 3},\
  29:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****  {3.0, 3.0, 3},\
  30:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****  {3.0, -3.0, 3},\
  31:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****  {1.0, 0.0, 3},\
  32:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h **** };
  33:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h **** #define WAYPOINTS_LLA { \
  34:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****  {435645043, 14817909, 300}, /* 1e7deg, 1e7deg, cm (hmsl=51.85m) */ \
  35:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****  {435641194, 14812805, 300}, /* 1e7deg, 1e7deg, cm (hmsl=51.85m) */ \
  36:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****  {435641194, 14812805, 300}, /* 1e7deg, 1e7deg, cm (hmsl=51.85m) */ \
  37:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****  {435641469, 14813170, 300}, /* 1e7deg, 1e7deg, cm (hmsl=51.85m) */ \
  38:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****  {435640929, 14813183, 300}, /* 1e7deg, 1e7deg, cm (hmsl=51.85m) */ \
  39:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****  {435641196, 14812929, 300}, /* 1e7deg, 1e7deg, cm (hmsl=51.85m) */ \
  40:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h **** };
  41:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h **** #define NB_WAYPOINT 6
  42:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h **** #define NB_BLOCK 14
  43:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h **** #define GROUND_ALT 0.
  44:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h **** #define GROUND_ALT_CM 0
  45:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h **** #define SECURITY_HEIGHT 3.
  46:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h **** #define SECURITY_ALT 3.
  47:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h **** #define HOME_MODE_HEIGHT 3.
  48:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h **** #define MAX_DIST_FROM_HOME 60.
  49:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h **** #ifdef NAV_C
  50:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h **** 
  51:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h **** static inline void auto_nav(void) {
  52:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****   switch (nav_block) {
 2431              		.loc 3 52 0 is_stmt 1 discriminator 1
 2432 0022 8F4B     		ldr	r3, .L256+12
 2433 0024 1978     		ldrb	r1, [r3, #0]	@ zero_extendqisi2
 2434 0026 0D29     		cmp	r1, #13
 2435 0028 00F23C82 		bhi	.L151
 2436 002c DFE811F0 		tbh	[pc, r1, lsl #1]
 2437              	.L166:
 2438 0030 0E00     		.2byte	(.L152-.L166)/2
 2439 0032 2200     		.2byte	(.L153-.L166)/2
 2440 0034 3D00     		.2byte	(.L154-.L166)/2
 2441 0036 5300     		.2byte	(.L155-.L166)/2
 2442 0038 7600     		.2byte	(.L156-.L166)/2
 2443 003a A500     		.2byte	(.L157-.L166)/2
 2444 003c C200     		.2byte	(.L158-.L166)/2
 2445 003e D600     		.2byte	(.L159-.L166)/2
 2446 0040 F600     		.2byte	(.L160-.L166)/2
 2447 0042 9201     		.2byte	(.L161-.L166)/2
 2448 0044 B901     		.2byte	(.L162-.L166)/2
 2449 0046 CD01     		.2byte	(.L163-.L166)/2
 2450 0048 FE01     		.2byte	(.L164-.L166)/2
 2451 004a 2C02     		.2byte	(.L165-.L166)/2
 2452              	.L152:
  53:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     Block(0) // Wait GPS
 2453              		.loc 3 53 0
 2454 004c 0024     		movs	r4, #0
 2455 004e 1C70     		strb	r4, [r3, #0]
  54:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     ; // pre_call
  55:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     switch(nav_stage) {
 2456              		.loc 3 55 0
 2457 0050 844B     		ldr	r3, .L256+16
 2458 0052 1878     		ldrb	r0, [r3, #0]	@ zero_extendqisi2
 2459 0054 1C46     		mov	r4, r3
 2460 0056 0028     		cmp	r0, #0
 2461 0058 35D0     		beq	.L175
 2462 005a 0228     		cmp	r0, #2
 2463 005c 06D8     		bhi	.L167
 2464              	.L169:
  56:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****       Stage(0)
  57:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         if (! (NavKillThrottle()))
  58:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****           NextStageAndBreak();
  59:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         break;
  60:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****       Label(while_1)
  61:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****       Stage(1)
  62:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         if (! (!(GpsFixValid()))) Goto(endwhile_2) else NextStageAndBreak();
 2465              		.loc 3 62 0
 2466 005e 8248     		ldr	r0, .L256+20
 2467 0060 90F85B20 		ldrb	r2, [r0, #91]	@ zero_extendqisi2
 2468 0064 032A     		cmp	r2, #3
 2469 0066 01D0     		beq	.L167
 2470 0068 0220     		movs	r0, #2
 2471 006a 00E2     		b	.L240
 2472              	.L167:
  63:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         Stage(2)
  64:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****           Goto(while_1)
  65:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         Label(endwhile_2)
  66:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****       default:
  67:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****       Stage(3)
 2473              		.loc 3 67 0
 2474 006c 0321     		movs	r1, #3
 2475 006e 2170     		strb	r1, [r4, #0]
  68:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         NextBlock();
 2476              		.loc 3 68 0
 2477 0070 0122     		movs	r2, #1
 2478 0072 13E2     		b	.L241
 2479              	.L153:
  69:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         break;
  70:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     }
  71:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     ; // post_call
  72:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     break;
  73:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h **** 
  74:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     Block(1) // Geo init
 2480              		.loc 3 74 0
 2481 0074 0120     		movs	r0, #1
 2482 0076 1870     		strb	r0, [r3, #0]
  75:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     ; // pre_call
  76:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     switch(nav_stage) {
 2483              		.loc 3 76 0
 2484 0078 7A4B     		ldr	r3, .L256+16
 2485 007a 1978     		ldrb	r1, [r3, #0]	@ zero_extendqisi2
 2486 007c 1C46     		mov	r4, r3
 2487 007e 8142     		cmp	r1, r0
 2488 0080 02D9     		bls	.L172
 2489 0082 0229     		cmp	r1, #2
 2490 0084 0DD1     		bne	.L224
 2491 0086 04E0     		b	.L173
 2492              	.L172:
  77:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****       Label(while_3)
  78:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****       Stage(0)
  79:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         if (! (LessThan(NavBlockTime(),10))) Goto(endwhile_4) else NextStageAndBreak();
 2493              		.loc 3 79 0
 2494 0088 744A     		ldr	r2, .L256+8
 2495 008a 1188     		ldrh	r1, [r2, #0]
 2496 008c 0929     		cmp	r1, #9
 2497 008e 40F2EE81 		bls	.L240
 2498              	.L173:
  80:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         Stage(1)
  81:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****           Goto(while_3)
  82:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         Label(endwhile_4)
  83:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****       Stage(2)
 2499              		.loc 3 83 0
 2500 0092 0223     		movs	r3, #2
 2501 0094 2370     		strb	r3, [r4, #0]
 2502              	.LBB96:
  84:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         if (! (NavSetGroundReferenceHere()))
 2503              		.loc 3 84 0
 2504 0096 FFF7FEFF 		bl	nav_reset_reference
 2505              	.LVL321:
 2506              	.L248:
 2507              	.LBE96:
  85:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****           NextStageAndBreak();
 2508              		.loc 3 85 0
 2509 009a 2078     		ldrb	r0, [r4, #0]	@ zero_extendqisi2
 2510 009c 431C     		adds	r3, r0, #1
 2511 009e 2370     		strb	r3, [r4, #0]
 2512 00a0 E6E1     		b	.L238
 2513              	.L224:
  86:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         break;
  87:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****       default:
  88:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****       Stage(3)
 2514              		.loc 3 88 0
 2515 00a2 0320     		movs	r0, #3
 2516 00a4 1870     		strb	r0, [r3, #0]
  89:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         NextBlock();
 2517              		.loc 3 89 0
 2518 00a6 0222     		movs	r2, #2
 2519 00a8 F8E1     		b	.L241
 2520              	.L154:
  90:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         break;
  91:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     }
  92:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     ; // post_call
  93:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     break;
  94:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h **** 
  95:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     Block(2) // Holding point
 2521              		.loc 3 95 0
 2522 00aa 0221     		movs	r1, #2
 2523 00ac 1970     		strb	r1, [r3, #0]
  96:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     ; // pre_call
  97:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     switch(nav_stage) {
 2524              		.loc 3 97 0
 2525 00ae 6D4B     		ldr	r3, .L256+16
 2526 00b0 1878     		ldrb	r0, [r3, #0]	@ zero_extendqisi2
 2527 00b2 1C46     		mov	r4, r3
 2528 00b4 38B1     		cbz	r0, .L175
 2529 00b6 0128     		cmp	r0, #1
 2530 00b8 4FF00302 		mov	r2, #3
 2531 00bc 09D1     		bne	.L225
  98:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****       Stage(0)
  99:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         if (! (NavKillThrottle()))
 100:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****           NextStageAndBreak();
 101:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         break;
 102:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****       Stage(1)
 2532              		.loc 3 102 0
 2533 00be 1870     		strb	r0, [r3, #0]
 103:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         if (FALSE) NextStageAndBreak() else {
 104:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****           NavAttitude(RadOfDeg(0));
 2534              		.loc 3 104 0
 2535 00c0 6A48     		ldr	r0, .L256+24
 2536 00c2 0270     		strb	r2, [r0, #0]
 2537 00c4 1CE0     		b	.L242
 2538              	.L175:
 2539              	.LBB97:
  99:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         if (! (NavKillThrottle()))
 2540              		.loc 3 99 0
 2541 00c6 6A4A     		ldr	r2, .L256+28
 2542              	.LBE97:
  98:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****       Stage(0)
 2543              		.loc 3 98 0
 2544 00c8 2070     		strb	r0, [r4, #0]
 2545              	.LBB98:
  99:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         if (! (NavKillThrottle()))
 2546              		.loc 3 99 0
 2547 00ca 1178     		ldrb	r1, [r2, #0]	@ zero_extendqisi2
 2548 00cc 0C29     		cmp	r1, #12
 2549 00ce E4D1     		bne	.L248
 2550 00d0 13E0     		b	.L255
 2551              	.L225:
 2552              	.LBE98:
 105:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****           NavVerticalAutoThrottleMode(RadOfDeg(0));
 106:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****           NavVerticalThrottleMode(9600*(0));
 107:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         }
 108:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         break;
 109:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****       default:
 110:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****       Stage(2)
 2553              		.loc 3 110 0
 2554 00d2 1970     		strb	r1, [r3, #0]
 2555 00d4 E2E1     		b	.L241
 2556              	.L155:
 111:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         NextBlock();
 112:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         break;
 113:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     }
 114:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     ; // post_call
 115:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     break;
 116:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h **** 
 117:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     Block(3) // Start Engine
 2557              		.loc 3 117 0
 2558 00d6 0320     		movs	r0, #3
 2559 00d8 1870     		strb	r0, [r3, #0]
 118:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     ; // pre_call
 119:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     switch(nav_stage) {
 2560              		.loc 3 119 0
 2561 00da 624B     		ldr	r3, .L256+16
 2562 00dc 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 2563 00de 1C46     		mov	r4, r3
 2564 00e0 2AB1     		cbz	r2, .L179
 2565 00e2 012A     		cmp	r2, #1
 2566 00e4 16D1     		bne	.L226
 120:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****       Stage(0)
 121:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         if (! (NavResurrect()))
 122:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****           NextStageAndBreak();
 123:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         break;
 124:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****       Stage(1)
 2567              		.loc 3 124 0
 2568 00e6 1A70     		strb	r2, [r3, #0]
 125:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         if (FALSE) NextStageAndBreak() else {
 126:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****           NavAttitude(RadOfDeg(0));
 2569              		.loc 3 126 0
 2570 00e8 604B     		ldr	r3, .L256+24
 2571 00ea 1870     		strb	r0, [r3, #0]
 2572 00ec 08E0     		b	.L242
 2573              	.L179:
 2574              	.LBB99:
 121:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         if (! (NavResurrect()))
 2575              		.loc 3 121 0
 2576 00ee 6048     		ldr	r0, .L256+28
 2577              	.LBE99:
 120:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****       Stage(0)
 2578              		.loc 3 120 0
 2579 00f0 1A70     		strb	r2, [r3, #0]
 2580              	.LBB100:
 121:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         if (! (NavResurrect()))
 2581              		.loc 3 121 0
 2582 00f2 0278     		ldrb	r2, [r0, #0]	@ zero_extendqisi2
 2583 00f4 0C2A     		cmp	r2, #12
 2584 00f6 D0D1     		bne	.L248
 2585 00f8 0120     		movs	r0, #1
 2586              	.L255:
 2587 00fa FFF7FEFF 		bl	autopilot_set_motors_on
 2588              	.LVL322:
 2589 00fe CCE7     		b	.L248
 2590              	.L242:
 2591              	.LBE100:
 2592              		.loc 3 126 0
 2593 0100 5C4A     		ldr	r2, .L256+32
 2594 0102 0021     		movs	r1, #0
 2595 0104 1160     		str	r1, [r2, #0]
 127:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****           NavVerticalAutoThrottleMode(RadOfDeg(0));
 2596              		.loc 3 127 0
 2597 0106 5C4B     		ldr	r3, .L256+36
 128:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****           NavVerticalThrottleMode(9600*(0));
 2598              		.loc 3 128 0
 2599 0108 5C48     		ldr	r0, .L256+40
 2600 010a 5D4A     		ldr	r2, .L256+44
 127:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****           NavVerticalAutoThrottleMode(RadOfDeg(0));
 2601              		.loc 3 127 0
 2602 010c 1960     		str	r1, [r3, #0]
 2603              		.loc 3 128 0
 2604 010e 0170     		strb	r1, [r0, #0]
 2605 0110 1160     		str	r1, [r2, #0]
 2606 0112 C7E1     		b	.L151
 2607              	.L226:
 129:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         }
 130:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         break;
 131:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****       default:
 132:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****       Stage(2)
 2608              		.loc 3 132 0
 2609 0114 0221     		movs	r1, #2
 2610 0116 1970     		strb	r1, [r3, #0]
 133:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         NextBlock();
 2611              		.loc 3 133 0
 2612 0118 0422     		movs	r2, #4
 2613 011a BFE1     		b	.L241
 2614              	.L156:
 2615              	.LBB101:
 2616              	.LBB102:
 642:./state.h     **** 
 643:./state.h     **** /// Get position in LLA coordinates (int).
 644:./state.h     **** static inline struct LlaCoor_i* stateGetPositionLla_i(void) {
 645:./state.h     ****   if (!bit_is_set(state.pos_status, POS_LLA_I))
 646:./state.h     ****     stateCalcPositionLla_i();
 647:./state.h     ****   return &state.lla_pos_i;
 648:./state.h     **** }
 649:./state.h     **** 
 650:./state.h     **** /// Get position in UTM coordinates (float).
 651:./state.h     **** static inline struct UtmCoor_f* stateGetPositionUtm_f(void) {
 652:./state.h     ****   if (!bit_is_set(state.pos_status, POS_UTM_F))
 653:./state.h     ****     stateCalcPositionUtm_f();
 654:./state.h     ****   return &state.utm_pos_f;
 655:./state.h     **** }
 656:./state.h     **** 
 657:./state.h     **** /// Get position in ECEF coordinates (float).
 658:./state.h     **** static inline struct EcefCoor_f* stateGetPositionEcef_f(void) {
 659:./state.h     ****   if (!bit_is_set(state.pos_status, POS_ECEF_F))
 660:./state.h     ****     stateCalcPositionEcef_f();
 661:./state.h     ****   return &state.ecef_pos_f;
 662:./state.h     **** }
 663:./state.h     **** 
 664:./state.h     **** /// Get position in local NED coordinates (float).
 665:./state.h     **** static inline struct NedCoor_f* stateGetPositionNed_f(void) {
 666:./state.h     ****   if (!bit_is_set(state.pos_status, POS_NED_F))
 667:./state.h     ****     stateCalcPositionNed_f();
 668:./state.h     ****   return &state.ned_pos_f;
 669:./state.h     **** }
 670:./state.h     **** 
 671:./state.h     **** /// Get position in local ENU coordinates (float).
 672:./state.h     **** static inline struct EnuCoor_f* stateGetPositionEnu_f(void) {
 673:./state.h     ****   if (!bit_is_set(state.pos_status, POS_ENU_F))
 2617              		.loc 1 673 0
 2618 011c 5949     		ldr	r1, .L256+48
 2619              	.LBE102:
 2620              	.LBE101:
 134:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         break;
 135:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     }
 136:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     ; // post_call
 137:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     break;
 138:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h **** 
 139:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     Block(4) // Takeoff
 2621              		.loc 3 139 0
 2622 011e 0424     		movs	r4, #4
 2623              	.LBB105:
 2624              	.LBB103:
 2625              		.loc 1 673 0
 2626 0120 0A88     		ldrh	r2, [r1, #0]
 2627              	.LBE103:
 2628              	.LBE105:
 2629              		.loc 3 139 0
 2630 0122 1C70     		strb	r4, [r3, #0]
 2631              	.LBB106:
 2632              	.LBB104:
 2633              		.loc 1 673 0
 2634 0124 12F0800F 		tst	r2, #128
 2635 0128 0C46     		mov	r4, r1
 2636 012a 01D1     		bne	.L182
 674:./state.h     ****     stateCalcPositionEnu_f();
 2637              		.loc 1 674 0
 2638 012c FFF7FEFF 		bl	stateCalcPositionEnu_f
 2639              	.LVL323:
 2640              	.L182:
 2641              	.LBE104:
 2642              	.LBE106:
 140:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     ; // pre_call
 141:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     if ((nav_block != 5) && ((stateGetPositionEnu_f())->z>2.000000)) { GotoBlock(5); return; }
 2643              		.loc 3 141 0
 2644 0130 D4F81001 		ldr	r0, [r4, #272]	@ float
 2645 0134 4FF08041 		mov	r1, #1073741824
 2646 0138 FFF7FEFF 		bl	__aeabi_fcmpgt
 2647              	.LVL324:
 2648 013c 08B1     		cbz	r0, .L227
 2649 013e 0522     		movs	r2, #5
 2650 0140 ACE1     		b	.L241
 2651              	.L227:
 142:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     switch(nav_stage) {
 2652              		.loc 3 142 0
 2653 0142 4848     		ldr	r0, .L256+16
 2654 0144 0378     		ldrb	r3, [r0, #0]	@ zero_extendqisi2
 2655 0146 93B9     		cbnz	r3, .L228
 143:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****       Stage(0)
 2656              		.loc 3 143 0
 2657 0148 0370     		strb	r3, [r0, #0]
 144:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         NavGotoWaypoint(1);
 2658              		.loc 3 144 0
 2659 014a 4F49     		ldr	r1, .L256+52
 2660 014c 4748     		ldr	r0, .L256+24
 2661 014e 4F4A     		ldr	r2, .L256+56
 2662 0150 0370     		strb	r3, [r0, #0]
 2663 0152 C868     		ldr	r0, [r1, #12]
 2664 0154 1060     		str	r0, [r2, #0]
 2665 0156 0869     		ldr	r0, [r1, #16]
 2666 0158 4969     		ldr	r1, [r1, #20]
 2667 015a 5060     		str	r0, [r2, #4]
 2668 015c 9160     		str	r1, [r2, #8]
 145:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         NavVerticalAutoThrottleMode(RadOfDeg(0.000000));
 2669              		.loc 3 145 0
 2670 015e 464A     		ldr	r2, .L256+36
 146:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         NavVerticalClimbMode(1.000000);
 2671              		.loc 3 146 0
 2672 0160 0120     		movs	r0, #1
 145:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         NavVerticalAutoThrottleMode(RadOfDeg(0.000000));
 2673              		.loc 3 145 0
 2674 0162 1360     		str	r3, [r2, #0]
 2675              		.loc 3 146 0
 2676 0164 454B     		ldr	r3, .L256+40
 2677 0166 4FF40022 		mov	r2, #524288
 2678 016a 1870     		strb	r0, [r3, #0]
 2679 016c 83E1     		b	.L243
 2680              	.L228:
 147:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         break;
 148:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****       default:
 149:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****       Stage(1)
 150:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         NextBlock();
 2681              		.loc 3 150 0
 2682 016e 3C4B     		ldr	r3, .L256+12
 149:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****       Stage(1)
 2683              		.loc 3 149 0
 2684 0170 0121     		movs	r1, #1
 2685              		.loc 3 150 0
 2686 0172 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 149:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****       Stage(1)
 2687              		.loc 3 149 0
 2688 0174 0170     		strb	r1, [r0, #0]
 2689              		.loc 3 150 0
 2690 0176 0132     		adds	r2, r2, #1
 2691 0178 91E1     		b	.L244
 2692              	.L157:
 151:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         break;
 152:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     }
 153:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     ; // post_call
 154:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     break;
 155:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h **** 
 156:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     Block(5) // Standby
 157:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     ; // pre_call
 158:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     switch(nav_stage) {
 2693              		.loc 3 158 0
 2694 017a 3A49     		ldr	r1, .L256+16
 156:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     Block(5) // Standby
 2695              		.loc 3 156 0
 2696 017c 0520     		movs	r0, #5
 2697 017e 1870     		strb	r0, [r3, #0]
 2698              		.loc 3 158 0
 2699 0180 0B78     		ldrb	r3, [r1, #0]	@ zero_extendqisi2
 2700 0182 9BB9     		cbnz	r3, .L229
 159:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****       Stage(0)
 2701              		.loc 3 159 0
 2702 0184 0B70     		strb	r3, [r1, #0]
 160:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         NavGotoWaypoint(2);
 2703              		.loc 3 160 0
 2704 0186 3948     		ldr	r0, .L256+24
 2705 0188 3F49     		ldr	r1, .L256+52
 2706 018a 404A     		ldr	r2, .L256+56
 2707 018c 0370     		strb	r3, [r0, #0]
 2708 018e 8869     		ldr	r0, [r1, #24]
 2709 0190 1060     		str	r0, [r2, #0]
 2710 0192 C869     		ldr	r0, [r1, #28]
 2711 0194 096A     		ldr	r1, [r1, #32]
 2712 0196 5060     		str	r0, [r2, #4]
 2713 0198 9160     		str	r1, [r2, #8]
 161:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         NavVerticalAutoThrottleMode(RadOfDeg(0.000000));
 2714              		.loc 3 161 0
 2715 019a 374A     		ldr	r2, .L256+36
 162:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         NavVerticalAltitudeMode(Height(3), 0.);
 2716              		.loc 3 162 0
 2717 019c 0220     		movs	r0, #2
 161:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         NavVerticalAutoThrottleMode(RadOfDeg(0.000000));
 2718              		.loc 3 161 0
 2719 019e 1360     		str	r3, [r2, #0]
 2720              		.loc 3 162 0
 2721 01a0 364B     		ldr	r3, .L256+40
 2722 01a2 4FF44072 		mov	r2, #768
 2723 01a6 1870     		strb	r0, [r3, #0]
 2724 01a8 3949     		ldr	r1, .L256+60
 2725 01aa 65E1     		b	.L245
 2726              	.L229:
 163:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         break;
 164:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****       default:
 165:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****       Stage(1)
 2727              		.loc 3 165 0
 2728 01ac 0122     		movs	r2, #1
 2729 01ae 0A70     		strb	r2, [r1, #0]
 166:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         NextBlock();
 2730              		.loc 3 166 0
 2731 01b0 0622     		movs	r2, #6
 2732 01b2 73E1     		b	.L241
 2733              	.L158:
 167:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         break;
 168:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     }
 169:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     ; // post_call
 170:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     break;
 171:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h **** 
 172:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     Block(6) // stay_p1
 173:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     ; // pre_call
 174:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     switch(nav_stage) {
 2734              		.loc 3 174 0
 2735 01b4 2B49     		ldr	r1, .L256+16
 172:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     Block(6) // stay_p1
 2736              		.loc 3 172 0
 2737 01b6 0622     		movs	r2, #6
 2738 01b8 1A70     		strb	r2, [r3, #0]
 2739              		.loc 3 174 0
 2740 01ba 0B78     		ldrb	r3, [r1, #0]	@ zero_extendqisi2
 2741 01bc 53B9     		cbnz	r3, .L230
 175:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****       Stage(0)
 176:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         NavGotoWaypoint(3);
 2742              		.loc 3 176 0
 2743 01be 2B4A     		ldr	r2, .L256+24
 175:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****       Stage(0)
 2744              		.loc 3 175 0
 2745 01c0 0B70     		strb	r3, [r1, #0]
 2746              		.loc 3 176 0
 2747 01c2 3149     		ldr	r1, .L256+52
 2748 01c4 1370     		strb	r3, [r2, #0]
 2749 01c6 486A     		ldr	r0, [r1, #36]
 2750 01c8 304A     		ldr	r2, .L256+56
 2751 01ca 1060     		str	r0, [r2, #0]
 2752 01cc 886A     		ldr	r0, [r1, #40]
 2753 01ce 5060     		str	r0, [r2, #4]
 2754 01d0 C86A     		ldr	r0, [r1, #44]
 2755 01d2 12E1     		b	.L246
 2756              	.L230:
 177:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         NavVerticalAutoThrottleMode(RadOfDeg(0.000000));
 178:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         NavVerticalAltitudeMode(WaypointAlt(3), 0.);
 179:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         break;
 180:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****       default:
 181:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****       Stage(1)
 2757              		.loc 3 181 0
 2758 01d4 0120     		movs	r0, #1
 2759 01d6 0870     		strb	r0, [r1, #0]
 182:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         NextBlock();
 2760              		.loc 3 182 0
 2761 01d8 0722     		movs	r2, #7
 2762 01da 5FE1     		b	.L241
 2763              	.L159:
 183:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         break;
 184:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     }
 185:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     ; // post_call
 186:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     break;
 187:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h **** 
 188:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     Block(7) // go_p2
 2764              		.loc 3 188 0
 2765 01dc 0724     		movs	r4, #7
 2766 01de 1C70     		strb	r4, [r3, #0]
 189:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     ; // pre_call
 190:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     switch(nav_stage) {
 2767              		.loc 3 190 0
 2768 01e0 204C     		ldr	r4, .L256+16
 188:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     Block(7) // go_p2
 2769              		.loc 3 188 0
 2770 01e2 1F4A     		ldr	r2, .L256+12
 2771              		.loc 3 190 0
 2772 01e4 2178     		ldrb	r1, [r4, #0]	@ zero_extendqisi2
 2773 01e6 19B1     		cbz	r1, .L192
 2774 01e8 0129     		cmp	r1, #1
 2775 01ea 13D1     		bne	.L231
 191:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****       Stage(0)
 192:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         if (NavApproaching(4,CARROT)) NextStageAndBreakFrom(4) else {
 193:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****           NavGotoWaypoint(4);
 194:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****           NavVerticalAutoThrottleMode(RadOfDeg(0.000000));
 195:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****           NavVerticalAltitudeMode(WaypointAlt(4), 0.);
 196:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         }
 197:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         break;
 198:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****       Stage(1)
 2776              		.loc 3 198 0
 2777 01ec 2170     		strb	r1, [r4, #0]
 2778 01ee AAE0     		b	.L254
 2779              	.L192:
 192:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         if (NavApproaching(4,CARROT)) NextStageAndBreakFrom(4) else {
 2780              		.loc 3 192 0
 2781 01f0 0420     		movs	r0, #4
 191:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****       Stage(0)
 2782              		.loc 3 191 0
 2783 01f2 2170     		strb	r1, [r4, #0]
 192:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         if (NavApproaching(4,CARROT)) NextStageAndBreakFrom(4) else {
 2784              		.loc 3 192 0
 2785 01f4 FFF7FEFF 		bl	nav_approaching_from
 2786              	.LVL325:
 2787 01f8 0346     		mov	r3, r0
 2788 01fa 08B1     		cbz	r0, .L194
 2789 01fc 0422     		movs	r2, #4
 2790 01fe F0E0     		b	.L252
 2791              	.L194:
 193:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****           NavGotoWaypoint(4);
 2792              		.loc 3 193 0
 2793 0200 2149     		ldr	r1, .L256+52
 2794 0202 1A4A     		ldr	r2, .L256+24
 2795 0204 1070     		strb	r0, [r2, #0]
 2796 0206 214A     		ldr	r2, .L256+56
 2797 0208 086B     		ldr	r0, [r1, #48]
 2798 020a 1060     		str	r0, [r2, #0]
 2799 020c 486B     		ldr	r0, [r1, #52]
 2800 020e 5060     		str	r0, [r2, #4]
 2801 0210 886B     		ldr	r0, [r1, #56]
 2802 0212 F2E0     		b	.L246
 2803              	.L231:
 199:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         GotoBlock(6);
 200:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         break;
 201:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****       default:
 202:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****       Stage(2)
 2804              		.loc 3 202 0
 2805 0214 0220     		movs	r0, #2
 2806 0216 2070     		strb	r0, [r4, #0]
 203:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         NextBlock();
 2807              		.loc 3 203 0
 2808 0218 0823     		movs	r3, #8
 2809 021a 99E0     		b	.L250
 2810              	.L160:
 204:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         break;
 205:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     }
 206:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     ; // post_call
 207:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     break;
 208:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h **** 
 209:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     Block(8) // line_p1_p2
 2811              		.loc 3 209 0
 2812 021c 0821     		movs	r1, #8
 2813 021e 1970     		strb	r1, [r3, #0]
 210:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     ; // pre_call
 211:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     switch(nav_stage) {
 2814              		.loc 3 211 0
 2815 0220 104B     		ldr	r3, .L256+16
 2816 0222 0F4A     		ldr	r2, .L256+12
 2817 0224 1978     		ldrb	r1, [r3, #0]	@ zero_extendqisi2
 2818 0226 0329     		cmp	r1, #3
 2819 0228 00F28F80 		bhi	.L195
 2820 022c DFE801F0 		tbb	[pc, r1]
 2821              	.L200:
 2822 0230 02       		.byte	(.L196-.L200)/2
 2823 0231 43       		.byte	(.L197-.L200)/2
 2824 0232 6B       		.byte	(.L198-.L200)/2
 2825 0233 89       		.byte	(.L199-.L200)/2
 2826              		.align	1
 2827              	.L196:
 212:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****       Stage(0)
 2828              		.loc 3 212 0
 2829 0234 0024     		movs	r4, #0
 213:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         if (NavApproachingFrom(4,3,CARROT)) NextStageAndBreakFrom(4) else {
 2830              		.loc 3 213 0
 2831 0236 0420     		movs	r0, #4
 2832 0238 0321     		movs	r1, #3
 212:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****       Stage(0)
 2833              		.loc 3 212 0
 2834 023a 1C70     		strb	r4, [r3, #0]
 2835              		.loc 3 213 0
 2836 023c FFF7FEFF 		bl	nav_approaching_from
 2837              	.LVL326:
 212:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****       Stage(0)
 2838              		.loc 3 212 0
 2839 0240 084D     		ldr	r5, .L256+16
 2840              		.loc 3 213 0
 2841 0242 0446     		mov	r4, r0
 2842 0244 40B3     		cbz	r0, .L201
 2843 0246 2A78     		ldrb	r2, [r5, #0]	@ zero_extendqisi2
 2844 0248 124B     		ldr	r3, .L256+64
 2845 024a 0421     		movs	r1, #4
 2846 024c 501C     		adds	r0, r2, #1
 2847 024e 1970     		strb	r1, [r3, #0]
 2848 0250 2870     		strb	r0, [r5, #0]
 2849 0252 0DE1     		b	.L238
 2850              	.L257:
 2851              		.align	2
 2852              	.L256:
 2853 0254 00000000 		.word	.LANCHOR29
 2854 0258 00000000 		.word	stage_time
 2855 025c 00000000 		.word	block_time
 2856 0260 00000000 		.word	nav_block
 2857 0264 00000000 		.word	nav_stage
 2858 0268 00000000 		.word	gps
 2859 026c 00000000 		.word	.LANCHOR8
 2860 0270 00000000 		.word	autopilot_mode
 2861 0274 00000000 		.word	.LANCHOR10
 2862 0278 00000000 		.word	.LANCHOR11
 2863 027c 00000000 		.word	.LANCHOR9
 2864 0280 00000000 		.word	.LANCHOR15
 2865 0284 00000000 		.word	state
 2866 0288 00000000 		.word	.LANCHOR1
 2867 028c 00000000 		.word	.LANCHOR6
 2868 0290 00000000 		.word	.LANCHOR3
 2869 0294 00000000 		.word	.LANCHOR30
 2870              	.L201:
 214:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****           NavSegment(3, 4);
 2871              		.loc 3 214 0
 2872 0298 8D48     		ldr	r0, .L258
 2873 029a 0122     		movs	r2, #1
 2874 029c 0270     		strb	r2, [r0, #0]
 2875 029e 0421     		movs	r1, #4
 2876 02a0 0320     		movs	r0, #3
 2877 02a2 FFF7FEFF 		bl	nav_route
 2878              	.LVL327:
 215:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****           NavVerticalAutoThrottleMode(RadOfDeg(0.000000));
 2879              		.loc 3 215 0
 2880 02a6 8B4B     		ldr	r3, .L258+4
 216:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****           NavVerticalAltitudeMode(WaypointAlt(4), 0.);
 2881              		.loc 3 216 0
 2882 02a8 8B4A     		ldr	r2, .L258+8
 2883 02aa 8C48     		ldr	r0, .L258+12
 2884 02ac 0221     		movs	r1, #2
 215:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****           NavVerticalAutoThrottleMode(RadOfDeg(0.000000));
 2885              		.loc 3 215 0
 2886 02ae 1C60     		str	r4, [r3, #0]
 2887              		.loc 3 216 0
 2888 02b0 1170     		strb	r1, [r2, #0]
 2889 02b2 806B     		ldr	r0, [r0, #56]
 2890 02b4 A7E0     		b	.L247
 2891              	.L197:
 217:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         }
 218:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         break;
 219:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****       Stage(1)
 2892              		.loc 3 219 0
 2893 02b6 0124     		movs	r4, #1
 2894 02b8 1C70     		strb	r4, [r3, #0]
 220:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         NavGotoWaypoint(4);
 2895              		.loc 3 220 0
 2896 02ba 884C     		ldr	r4, .L258+12
 2897 02bc 884B     		ldr	r3, .L258+16
 2898 02be 206B     		ldr	r0, [r4, #48]
 2899 02c0 834A     		ldr	r2, .L258
 2900 02c2 0021     		movs	r1, #0
 2901 02c4 1860     		str	r0, [r3, #0]
 2902 02c6 1170     		strb	r1, [r2, #0]
 2903 02c8 A06B     		ldr	r0, [r4, #56]
 2904 02ca 626B     		ldr	r2, [r4, #52]
 2905 02cc 9860     		str	r0, [r3, #8]
 2906 02ce 5A60     		str	r2, [r3, #4]
 221:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         NavVerticalAutoThrottleMode(RadOfDeg(0.000000));
 2907              		.loc 3 221 0
 2908 02d0 804B     		ldr	r3, .L258+4
 222:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         NavVerticalAltitudeMode(WaypointAlt(4), 0.);
 2909              		.loc 3 222 0
 2910 02d2 0224     		movs	r4, #2
 221:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         NavVerticalAutoThrottleMode(RadOfDeg(0.000000));
 2911              		.loc 3 221 0
 2912 02d4 1960     		str	r1, [r3, #0]
 2913              		.loc 3 222 0
 2914 02d6 8049     		ldr	r1, .L258+8
 2915 02d8 0C70     		strb	r4, [r1, #0]
 2916 02da FFF7FEFF 		bl	__aeabi_i2f
 2917              	.LVL328:
 2918 02de 4FF06E51 		mov	r1, #998244352
 2919 02e2 FFF7FEFF 		bl	__aeabi_fmul
 2920              	.LVL329:
 2921 02e6 4FF08741 		mov	r1, #1132462080
 2922 02ea FFF7FEFF 		bl	__aeabi_fmul
 2923              	.LVL330:
 2924 02ee FFF7FEFF 		bl	__aeabi_f2iz
 2925              	.LVL331:
 2926 02f2 7C4A     		ldr	r2, .L258+20
 2927 02f4 1060     		str	r0, [r2, #0]
 223:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         if ((stage_time>20)) NextStageAndBreak();
 2928              		.loc 3 223 0
 2929 02f6 7C48     		ldr	r0, .L258+24
 2930 02f8 0388     		ldrh	r3, [r0, #0]
 2931 02fa 142B     		cmp	r3, #20
 2932 02fc 40F2D280 		bls	.L151
 2933 0300 7A49     		ldr	r1, .L258+28
 2934 0302 0C70     		strb	r4, [r1, #0]
 2935 0304 B4E0     		b	.L238
 2936              	.L198:
 224:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         break;
 225:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****       Stage(2)
 2937              		.loc 3 225 0
 2938 0306 0224     		movs	r4, #2
 226:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         if (NavApproachingFrom(3,4,CARROT)) NextStageAndBreakFrom(3) else {
 2939              		.loc 3 226 0
 2940 0308 0320     		movs	r0, #3
 2941 030a 0421     		movs	r1, #4
 225:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****       Stage(2)
 2942              		.loc 3 225 0
 2943 030c 1C70     		strb	r4, [r3, #0]
 2944              		.loc 3 226 0
 2945 030e FFF7FEFF 		bl	nav_approaching_from
 2946              	.LVL332:
 225:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****       Stage(2)
 2947              		.loc 3 225 0
 2948 0312 764E     		ldr	r6, .L258+28
 2949              		.loc 3 226 0
 2950 0314 0546     		mov	r5, r0
 2951 0316 30B1     		cbz	r0, .L202
 2952 0318 3078     		ldrb	r0, [r6, #0]	@ zero_extendqisi2
 2953 031a 754B     		ldr	r3, .L258+32
 2954 031c 0322     		movs	r2, #3
 2955 031e 411C     		adds	r1, r0, #1
 2956 0320 1A70     		strb	r2, [r3, #0]
 2957 0322 3170     		strb	r1, [r6, #0]
 2958 0324 A4E0     		b	.L238
 2959              	.L202:
 227:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****           NavSegment(4, 3);
 2960              		.loc 3 227 0
 2961 0326 6A4B     		ldr	r3, .L258
 2962 0328 0121     		movs	r1, #1
 2963 032a 1970     		strb	r1, [r3, #0]
 2964 032c 0420     		movs	r0, #4
 2965 032e 0321     		movs	r1, #3
 2966 0330 FFF7FEFF 		bl	nav_route
 2967              	.LVL333:
 228:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****           NavVerticalAutoThrottleMode(RadOfDeg(0.000000));
 229:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****           NavVerticalAltitudeMode(WaypointAlt(3), 0.);
 2968              		.loc 3 229 0
 2969 0334 6848     		ldr	r0, .L258+8
 228:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****           NavVerticalAutoThrottleMode(RadOfDeg(0.000000));
 2970              		.loc 3 228 0
 2971 0336 674A     		ldr	r2, .L258+4
 2972              		.loc 3 229 0
 2973 0338 6849     		ldr	r1, .L258+12
 2974 033a 0470     		strb	r4, [r0, #0]
 228:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****           NavVerticalAutoThrottleMode(RadOfDeg(0.000000));
 2975              		.loc 3 228 0
 2976 033c 1560     		str	r5, [r2, #0]
 2977              		.loc 3 229 0
 2978 033e C86A     		ldr	r0, [r1, #44]
 2979 0340 61E0     		b	.L247
 2980              	.L199:
 230:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         }
 231:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         break;
 232:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****       Stage(3)
 2981              		.loc 3 232 0
 2982 0342 0320     		movs	r0, #3
 2983 0344 1870     		strb	r0, [r3, #0]
 2984              	.L254:
 233:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         GotoBlock(6);
 2985              		.loc 3 233 0
 2986 0346 0623     		movs	r3, #6
 2987 0348 02E0     		b	.L250
 2988              	.L195:
 234:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         break;
 235:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****       default:
 236:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****       Stage(4)
 2989              		.loc 3 236 0
 2990 034a 0421     		movs	r1, #4
 2991 034c 1970     		strb	r1, [r3, #0]
 237:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         NextBlock();
 2992              		.loc 3 237 0
 2993 034e 0923     		movs	r3, #9
 2994              	.L250:
 2995 0350 1370     		strb	r3, [r2, #0]
 2996 0352 A5E0     		b	.L239
 2997              	.L161:
 238:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         break;
 239:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     }
 240:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     ; // post_call
 241:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     break;
 242:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h **** 
 243:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     Block(9) // circle
 2998              		.loc 3 243 0
 2999 0354 0921     		movs	r1, #9
 3000 0356 1970     		strb	r1, [r3, #0]
 244:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     ; // pre_call
 245:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     switch(nav_stage) {
 3001              		.loc 3 245 0
 3002 0358 644B     		ldr	r3, .L258+28
 3003 035a 1878     		ldrb	r0, [r3, #0]	@ zero_extendqisi2
 3004 035c E8B9     		cbnz	r0, .L232
 246:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****       Stage(0)
 247:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         NavVerticalAutoThrottleMode(RadOfDeg(0.000000));
 3005              		.loc 3 247 0
 3006 035e 5D4C     		ldr	r4, .L258+4
 246:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****       Stage(0)
 3007              		.loc 3 246 0
 3008 0360 1870     		strb	r0, [r3, #0]
 248:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         NavVerticalAltitudeMode(WaypointAlt(3), 0.);
 3009              		.loc 3 248 0
 3010 0362 5D49     		ldr	r1, .L258+8
 3011 0364 5D4B     		ldr	r3, .L258+12
 247:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         NavVerticalAutoThrottleMode(RadOfDeg(0.000000));
 3012              		.loc 3 247 0
 3013 0366 2060     		str	r0, [r4, #0]
 3014              		.loc 3 248 0
 3015 0368 0224     		movs	r4, #2
 3016 036a D86A     		ldr	r0, [r3, #44]
 3017 036c 0C70     		strb	r4, [r1, #0]
 3018 036e FFF7FEFF 		bl	__aeabi_i2f
 3019              	.LVL334:
 3020 0372 4FF06E51 		mov	r1, #998244352
 3021 0376 FFF7FEFF 		bl	__aeabi_fmul
 3022              	.LVL335:
 3023 037a 4FF08741 		mov	r1, #1132462080
 3024 037e FFF7FEFF 		bl	__aeabi_fmul
 3025              	.LVL336:
 3026 0382 FFF7FEFF 		bl	__aeabi_f2iz
 3027              	.LVL337:
 3028 0386 574A     		ldr	r2, .L258+20
 249:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         NavCircleWaypoint(3, 3);
 3029              		.loc 3 249 0
 3030 0388 4FF44071 		mov	r1, #768
 248:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         NavVerticalAltitudeMode(WaypointAlt(3), 0.);
 3031              		.loc 3 248 0
 3032 038c 1060     		str	r0, [r2, #0]
 3033              		.loc 3 249 0
 3034 038e 5048     		ldr	r0, .L258
 3035 0390 0470     		strb	r4, [r0, #0]
 3036 0392 0320     		movs	r0, #3
 3037 0394 FFF7FEFF 		bl	nav_circle
 3038              	.LVL338:
 3039 0398 84E0     		b	.L151
 3040              	.L232:
 250:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         break;
 251:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****       default:
 252:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****       Stage(1)
 3041              		.loc 3 252 0
 3042 039a 0122     		movs	r2, #1
 3043 039c 1A70     		strb	r2, [r3, #0]
 253:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         NextBlock();
 3044              		.loc 3 253 0
 3045 039e 0A22     		movs	r2, #10
 3046 03a0 7CE0     		b	.L241
 3047              	.L162:
 254:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         break;
 255:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     }
 256:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     ; // post_call
 257:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     break;
 258:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h **** 
 259:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     Block(10) // land here
 3048              		.loc 3 259 0
 3049 03a2 0A24     		movs	r4, #10
 3050 03a4 1C70     		strb	r4, [r3, #0]
 260:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     ; // pre_call
 261:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     switch(nav_stage) {
 3051              		.loc 3 261 0
 3052 03a6 514C     		ldr	r4, .L258+28
 3053 03a8 2378     		ldrb	r3, [r4, #0]	@ zero_extendqisi2
 3054 03aa 53B9     		cbnz	r3, .L233
 262:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****       Stage(0)
 3055              		.loc 3 262 0
 3056 03ac 2370     		strb	r3, [r4, #0]
 3057              	.LBB107:
 263:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         if (! (NavSetWaypointHere(WP_LZ)))
 3058              		.loc 3 263 0
 3059 03ae FFF7FEFF 		bl	stateGetPositionEnu_i
 3060              	.LVL339:
 3061 03b2 4A4D     		ldr	r5, .L258+12
 3062 03b4 0068     		ldr	r0, [r0, #0]
 3063 03b6 E863     		str	r0, [r5, #60]
 3064 03b8 FFF7FEFF 		bl	stateGetPositionEnu_i
 3065              	.LVL340:
 3066 03bc 4268     		ldr	r2, [r0, #4]
 3067 03be 2A64     		str	r2, [r5, #64]
 3068 03c0 6BE6     		b	.L248
 3069              	.L233:
 3070              	.LBE107:
 264:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****           NextStageAndBreak();
 265:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         break;
 266:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****       default:
 267:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****       Stage(1)
 3071              		.loc 3 267 0
 3072 03c2 0121     		movs	r1, #1
 3073 03c4 2170     		strb	r1, [r4, #0]
 268:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         NextBlock();
 3074              		.loc 3 268 0
 3075 03c6 0B22     		movs	r2, #11
 3076 03c8 68E0     		b	.L241
 3077              	.L163:
 269:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         break;
 270:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     }
 271:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     ; // post_call
 272:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     break;
 273:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h **** 
 274:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     Block(11) // land
 3078              		.loc 3 274 0
 3079 03ca 0B24     		movs	r4, #11
 3080 03cc 1C70     		strb	r4, [r3, #0]
 275:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     ; // pre_call
 276:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     switch(nav_stage) {
 3081              		.loc 3 276 0
 3082 03ce 474C     		ldr	r4, .L258+28
 3083 03d0 2178     		ldrb	r1, [r4, #0]	@ zero_extendqisi2
 3084 03d2 39BB     		cbnz	r1, .L234
 277:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****       Stage(0)
 278:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         if (NavApproaching(5,CARROT)) NextStageAndBreakFrom(5) else {
 3085              		.loc 3 278 0
 3086 03d4 0520     		movs	r0, #5
 277:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****       Stage(0)
 3087              		.loc 3 277 0
 3088 03d6 2170     		strb	r1, [r4, #0]
 3089              		.loc 3 278 0
 3090 03d8 FFF7FEFF 		bl	nav_approaching_from
 3091              	.LVL341:
 3092 03dc 0346     		mov	r3, r0
 3093 03de 18B1     		cbz	r0, .L209
 3094 03e0 0522     		movs	r2, #5
 3095              	.L252:
 3096 03e2 434B     		ldr	r3, .L258+32
 3097 03e4 1A70     		strb	r2, [r3, #0]
 3098 03e6 58E6     		b	.L248
 3099              	.L209:
 279:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****           NavGotoWaypoint(5);
 3100              		.loc 3 279 0
 3101 03e8 3C49     		ldr	r1, .L258+12
 3102 03ea 394A     		ldr	r2, .L258
 3103 03ec 1070     		strb	r0, [r2, #0]
 3104 03ee 3C4A     		ldr	r2, .L258+16
 3105 03f0 C86B     		ldr	r0, [r1, #60]
 3106 03f2 1060     		str	r0, [r2, #0]
 3107 03f4 086C     		ldr	r0, [r1, #64]
 3108 03f6 5060     		str	r0, [r2, #4]
 3109 03f8 486C     		ldr	r0, [r1, #68]
 3110              	.L246:
 3111 03fa 9060     		str	r0, [r2, #8]
 280:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****           NavVerticalAutoThrottleMode(RadOfDeg(0.000000));
 3112              		.loc 3 280 0
 3113 03fc 354A     		ldr	r2, .L258+4
 281:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****           NavVerticalAltitudeMode(WaypointAlt(5), 0.);
 3114              		.loc 3 281 0
 3115 03fe 0221     		movs	r1, #2
 280:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****           NavVerticalAutoThrottleMode(RadOfDeg(0.000000));
 3116              		.loc 3 280 0
 3117 0400 1360     		str	r3, [r2, #0]
 3118              		.loc 3 281 0
 3119 0402 354B     		ldr	r3, .L258+8
 3120 0404 1970     		strb	r1, [r3, #0]
 3121              	.L247:
 3122 0406 FFF7FEFF 		bl	__aeabi_i2f
 3123              	.LVL342:
 3124 040a 4FF06E51 		mov	r1, #998244352
 3125 040e FFF7FEFF 		bl	__aeabi_fmul
 3126              	.LVL343:
 3127 0412 4FF08741 		mov	r1, #1132462080
 3128 0416 FFF7FEFF 		bl	__aeabi_fmul
 3129              	.LVL344:
 3130 041a FFF7FEFF 		bl	__aeabi_f2iz
 3131              	.LVL345:
 3132 041e 314A     		ldr	r2, .L258+20
 3133 0420 1060     		str	r0, [r2, #0]
 3134 0422 3FE0     		b	.L151
 3135              	.L234:
 282:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         }
 283:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         break;
 284:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****       default:
 285:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****       Stage(1)
 3136              		.loc 3 285 0
 3137 0424 0123     		movs	r3, #1
 3138 0426 2370     		strb	r3, [r4, #0]
 286:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         NextBlock();
 3139              		.loc 3 286 0
 3140 0428 0C22     		movs	r2, #12
 3141 042a 37E0     		b	.L241
 3142              	.L164:
 287:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         break;
 288:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     }
 289:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     ; // post_call
 290:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     break;
 291:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h **** 
 292:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     Block(12) // flare
 3143              		.loc 3 292 0
 3144 042c 0C20     		movs	r0, #12
 3145 042e 314C     		ldr	r4, .L258+36
 3146 0430 1870     		strb	r0, [r3, #0]
 293:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     ; // pre_call
 294:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     if ((nav_block != 2) && NavDetectGround()) { GotoBlock(2); return; }
 3147              		.loc 3 294 0
 3148 0432 FFF7FEFF 		bl	nav_detect_ground
 3149              	.LVL346:
 3150 0436 08B1     		cbz	r0, .L210
 3151 0438 0223     		movs	r3, #2
 3152 043a 23E0     		b	.L249
 3153              	.L210:
 295:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     switch(nav_stage) {
 3154              		.loc 3 295 0
 3155 043c 2B4B     		ldr	r3, .L258+28
 3156 043e 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 3157 0440 92B1     		cbz	r2, .L212
 3158 0442 012A     		cmp	r2, #1
 3159 0444 1AD1     		bne	.L235
 296:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****       Stage(0)
 297:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         if (! (NavStartDetectGround()))
 298:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****           NextStageAndBreak();
 299:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         break;
 300:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****       Stage(1)
 301:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         NavGotoWaypoint(5);
 3160              		.loc 3 301 0
 3161 0446 2549     		ldr	r1, .L258+12
 3162 0448 214C     		ldr	r4, .L258
 300:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****       Stage(1)
 3163              		.loc 3 300 0
 3164 044a 1A70     		strb	r2, [r3, #0]
 3165              		.loc 3 301 0
 3166 044c 2070     		strb	r0, [r4, #0]
 3167 044e 244B     		ldr	r3, .L258+16
 3168 0450 CC6B     		ldr	r4, [r1, #60]
 3169 0452 1C60     		str	r4, [r3, #0]
 3170 0454 0C6C     		ldr	r4, [r1, #64]
 3171 0456 496C     		ldr	r1, [r1, #68]
 3172 0458 5C60     		str	r4, [r3, #4]
 3173 045a 9960     		str	r1, [r3, #8]
 302:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         NavVerticalAutoThrottleMode(RadOfDeg(0.000000));
 3174              		.loc 3 302 0
 3175 045c 1D4B     		ldr	r3, .L258+4
 3176 045e 1860     		str	r0, [r3, #0]
 303:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         NavVerticalClimbMode(-(0.800000));
 3177              		.loc 3 303 0
 3178 0460 1D48     		ldr	r0, .L258+8
 3179 0462 0270     		strb	r2, [r0, #0]
 3180 0464 244A     		ldr	r2, .L258+40
 3181 0466 06E0     		b	.L243
 3182              	.L212:
 3183              	.LBB108:
 297:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         if (! (NavStartDetectGround()))
 3184              		.loc 3 297 0
 3185 0468 2449     		ldr	r1, .L258+44
 3186 046a 0120     		movs	r0, #1
 3187 046c 0870     		strb	r0, [r1, #0]
 3188              	.L240:
 3189              	.LBE108:
 298:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****           NextStageAndBreak();
 3190              		.loc 3 298 0
 3191 046e 1870     		strb	r0, [r3, #0]
 3192              	.L238:
 3193 0470 FFF7FEFF 		bl	nav_init_stage
 3194              	.LVL347:
 3195 0474 16E0     		b	.L151
 3196              	.L243:
 3197              		.loc 3 303 0
 3198 0476 2249     		ldr	r1, .L258+48
 3199              	.L245:
 3200 0478 0A60     		str	r2, [r1, #0]
 3201 047a 13E0     		b	.L151
 3202              	.L235:
 304:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         break;
 305:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****       default:
 306:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****       Stage(2)
 307:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         NextBlock();
 3203              		.loc 3 307 0
 3204 047c 2078     		ldrb	r0, [r4, #0]	@ zero_extendqisi2
 306:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****       Stage(2)
 3205              		.loc 3 306 0
 3206 047e 0221     		movs	r1, #2
 3207 0480 1970     		strb	r1, [r3, #0]
 3208              		.loc 3 307 0
 3209 0482 431C     		adds	r3, r0, #1
 3210              	.L249:
 3211 0484 2370     		strb	r3, [r4, #0]
 3212 0486 0BE0     		b	.L239
 3213              	.L165:
 308:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         break;
 309:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     }
 310:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     ; // post_call
 311:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     break;
 312:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h **** 
 313:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     Block(13) // HOME
 3214              		.loc 3 313 0
 3215 0488 0D20     		movs	r0, #13
 3216 048a 1870     		strb	r0, [r3, #0]
 314:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     ; // pre_call
 315:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     switch(nav_stage) {
 3217              		.loc 3 315 0
 3218 048c 174B     		ldr	r3, .L258+28
 3219 048e 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 3220 0490 0AB9     		cbnz	r2, .L236
 316:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****       Stage(0)
 3221              		.loc 3 316 0
 3222 0492 1A70     		strb	r2, [r3, #0]
 3223 0494 06E0     		b	.L151
 3224              	.L236:
 317:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         nav_home();
 318:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         break;
 319:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****       default:
 320:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****       Stage(1)
 3225              		.loc 3 320 0
 3226 0496 0121     		movs	r1, #1
 3227 0498 1970     		strb	r1, [r3, #0]
 321:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         NextBlock();
 3228              		.loc 3 321 0
 3229 049a 0E22     		movs	r2, #14
 3230              	.L241:
 3231 049c 154B     		ldr	r3, .L258+36
 3232              	.L244:
 3233 049e 1A70     		strb	r2, [r3, #0]
 3234              	.L239:
 3235 04a0 FFF7FEFF 		bl	nav_init_block
 3236              	.LVL348:
 3237              	.L151:
 3238              	.LBE95:
 3239              	.LBE94:
 303:firmwares/rotorcraft/navigation.c ****   nav_run();
 3240              		.loc 2 303 0
 3241 04a4 FFF7FEFF 		bl	nav_run
 3242              	.LVL349:
 305:firmwares/rotorcraft/navigation.c ****   ground_alt = POS_BFP_OF_REAL((float)ins_ltp_def.hmsl / 1000.);
 3243              		.loc 2 305 0
 3244 04a8 164A     		ldr	r2, .L258+52
 3245 04aa D06B     		ldr	r0, [r2, #60]
 3246 04ac FFF7FEFF 		bl	__aeabi_i2f
 3247              	.LVL350:
 3248 04b0 FFF7FEFF 		bl	__aeabi_f2d
 3249              	.LVL351:
 3250 04b4 0022     		movs	r2, #0
 3251 04b6 144B     		ldr	r3, .L258+56
 3252 04b8 FFF7FEFF 		bl	__aeabi_ddiv
 3253              	.LVL352:
 3254 04bc 0022     		movs	r2, #0
 3255 04be 134B     		ldr	r3, .L258+60
 3256 04c0 FFF7FEFF 		bl	__aeabi_dmul
 3257              	.LVL353:
 3258 04c4 FFF7FEFF 		bl	__aeabi_d2iz
 3259              	.LVL354:
 3260 04c8 1149     		ldr	r1, .L258+64
 3261 04ca 0860     		str	r0, [r1, #0]
 3262 04cc 70BD     		pop	{r4, r5, r6, pc}
 3263              	.L259:
 3264 04ce 00BF     		.align	2
 3265              	.L258:
 3266 04d0 00000000 		.word	.LANCHOR8
 3267 04d4 00000000 		.word	.LANCHOR11
 3268 04d8 00000000 		.word	.LANCHOR9
 3269 04dc 00000000 		.word	.LANCHOR1
 3270 04e0 00000000 		.word	.LANCHOR6
 3271 04e4 00000000 		.word	.LANCHOR3
 3272 04e8 00000000 		.word	stage_time
 3273 04ec 00000000 		.word	nav_stage
 3274 04f0 00000000 		.word	.LANCHOR30
 3275 04f4 00000000 		.word	nav_block
 3276 04f8 9A99F9FF 		.word	-419430
 3277 04fc 00000000 		.word	autopilot_detect_ground_once
 3278 0500 00000000 		.word	.LANCHOR16
 3279 0504 00000000 		.word	ins_ltp_def
 3280 0508 00408F40 		.word	1083129856
 3281 050c 00007040 		.word	1081081856
 3282 0510 00000000 		.word	.LANCHOR2
 3283              		.cfi_endproc
 3284              	.LFE132:
 3286              		.section	.text.nav_home,"ax",%progbits
 3287              		.align	1
 3288              		.global	nav_home
 3289              		.thumb
 3290              		.thumb_func
 3292              	nav_home:
 3293              	.LFB143:
 343:firmwares/rotorcraft/navigation.c **** 
 344:firmwares/rotorcraft/navigation.c **** void nav_home(void) {}
 3294              		.loc 2 344 0
 3295              		.cfi_startproc
 3296              		@ args = 0, pretend = 0, frame = 0
 3297              		@ frame_needed = 0, uses_anonymous_args = 0
 3298              		@ link register save eliminated.
 3299 0000 7047     		bx	lr
 3300              		.cfi_endproc
 3301              	.LFE143:
 3303              		.global	flight_altitude
 3304              		.global	nav_flight_altitude
 3305              		.global	nav_altitude
 3306              		.global	nav_climb
 3307              		.global	nav_throttle
 3308              		.global	vertical_mode
 3309              		.global	nav_radius
 3310              		.global	nav_course
 3311              		.global	nav_heading
 3312              		.global	nav_pitch
 3313              		.global	nav_roll
 3314              		.global	nav_leg_length
 3315              		.global	nav_leg_progress
 3316              		.global	nav_circle_radians
 3317              		.global	nav_circle_qdr
 3318              		.global	nav_circle_radius
 3319              		.global	nav_circle_centre
 3320              		.global	nav_segment_end
 3321              		.global	nav_segment_start
 3322              		.global	horizontal_mode
 3323              		.global	ground_alt
 3324              		.global	last_wp
 3325              		.global	nav_last_point
 3326              		.global	navigation_carrot
 3327              		.global	navigation_target
 3328              		.global	waypoints
 3329              		.global	nb_waypoint
 3330              		.section	.rodata
 3331              		.align	2
 3332              		.set	.LANCHOR0,. + 0
 3333              	.LC0:
 3334 0000 00002842 		.word	1109917696
 3335 0004 00002842 		.word	1109917696
 3336 0008 00004040 		.word	1077936128
 3337 000c 00000000 		.word	0
 3338 0010 00000000 		.word	0
 3339 0014 00004040 		.word	1077936128
 3340 0018 00000000 		.word	0
 3341 001c 00000000 		.word	0
 3342 0020 00004040 		.word	1077936128
 3343 0024 00004040 		.word	1077936128
 3344 0028 00004040 		.word	1077936128
 3345 002c 00004040 		.word	1077936128
 3346 0030 00004040 		.word	1077936128
 3347 0034 000040C0 		.word	3225419776
 3348 0038 00004040 		.word	1077936128
 3349 003c 0000803F 		.word	1065353216
 3350 0040 00000000 		.word	0
 3351 0044 00004040 		.word	1077936128
 3352              		.section	.bss.time_at_wp.6826,"aw",%nobits
 3353              		.set	.LANCHOR26,. + 0
 3356              	time_at_wp.6826:
 3357 0000 00       		.space	1
 3358              		.section	.bss.nav_heading,"aw",%nobits
 3359              		.align	2
 3360              		.set	.LANCHOR12,. + 0
 3363              	nav_heading:
 3364 0000 00000000 		.space	4
 3365              		.section	.bss.prescaler.7573,"aw",%nobits
 3366              		.align	1
 3367              		.set	.LANCHOR29,. + 0
 3370              	prescaler.7573:
 3371 0000 0000     		.space	2
 3372              		.section	.bss.nav_segment_start,"aw",%nobits
 3373              		.set	.LANCHOR24,. + 0
 3376              	nav_segment_start:
 3377 0000 00       		.space	1
 3378              		.section	.bss.nav_radius,"aw",%nobits
 3379              		.align	2
 3380              		.set	.LANCHOR14,. + 0
 3383              	nav_radius:
 3384 0000 00000000 		.space	4
 3385              		.section	.bss.ground_alt,"aw",%nobits
 3386              		.align	2
 3387              		.set	.LANCHOR2,. + 0
 3390              	ground_alt:
 3391 0000 00000000 		.space	4
 3392              		.section	.bss.nav_course,"aw",%nobits
 3393              		.align	2
 3394              		.set	.LANCHOR13,. + 0
 3397              	nav_course:
 3398 0000 00000000 		.space	4
 3399              		.section	.bss.nav_leg_progress,"aw",%nobits
 3400              		.align	2
 3401              		.set	.LANCHOR17,. + 0
 3404              	nav_leg_progress:
 3405 0000 00000000 		.space	4
 3406              		.section	.bss.waypoints,"aw",%nobits
 3407              		.align	2
 3408              		.set	.LANCHOR1,. + 0
 3411              	waypoints:
 3412 0000 00000000 		.space	72
 3412      00000000 
 3412      00000000 
 3412      00000000 
 3412      00000000 
 3413              		.section	.bss.nav_last_point,"aw",%nobits
 3414              		.align	2
 3415              		.set	.LANCHOR27,. + 0
 3418              	nav_last_point:
 3419 0000 00000000 		.space	12
 3419      00000000 
 3419      00000000 
 3420              		.section	.bss.horizontal_mode,"aw",%nobits
 3421              		.set	.LANCHOR8,. + 0
 3424              	horizontal_mode:
 3425 0000 00       		.space	1
 3426              		.section	.bss.nav_circle_qdr,"aw",%nobits
 3427              		.align	2
 3428              		.set	.LANCHOR20,. + 0
 3431              	nav_circle_qdr:
 3432 0000 00000000 		.space	4
 3433              		.section	.bss.last_nav_alt.6837,"aw",%nobits
 3434              		.align	2
 3435              		.set	.LANCHOR19,. + 0
 3438              	last_nav_alt.6837:
 3439 0000 00000000 		.space	4
 3440              		.section	.bss.nav_leg_length,"aw",%nobits
 3441              		.align	2
 3442              		.set	.LANCHOR18,. + 0
 3445              	nav_leg_length:
 3446 0000 00000000 		.space	4
 3447              		.section	.bss.last_wp,"aw",%nobits
 3448              		.set	.LANCHOR30,. + 0
 3451              	last_wp:
 3452 0000 00       		.space	1
 3453              		.section	.rodata.nb_waypoint,"a",%progbits
 3456              	nb_waypoint:
 3457 0000 06       		.byte	6
 3458              		.section	.bss.flight_altitude,"aw",%nobits
 3459              		.align	2
 3460              		.set	.LANCHOR5,. + 0
 3463              	flight_altitude:
 3464 0000 00000000 		.space	4
 3465              		.section	.bss.nav_climb,"aw",%nobits
 3466              		.align	2
 3467              		.set	.LANCHOR16,. + 0
 3470              	nav_climb:
 3471 0000 00000000 		.space	4
 3472              		.section	.bss.nav_flight_altitude,"aw",%nobits
 3473              		.align	2
 3474              		.set	.LANCHOR4,. + 0
 3477              	nav_flight_altitude:
 3478 0000 00000000 		.space	4
 3479              		.section	.bss.nav_segment_end,"aw",%nobits
 3480              		.set	.LANCHOR25,. + 0
 3483              	nav_segment_end:
 3484 0000 00       		.space	1
 3485              		.section	.bss.navigation_carrot,"aw",%nobits
 3486              		.align	2
 3487              		.set	.LANCHOR7,. + 0
 3490              	navigation_carrot:
 3491 0000 00000000 		.space	12
 3491      00000000 
 3491      00000000 
 3492              		.section	.bss.nav_circle_centre,"aw",%nobits
 3493              		.set	.LANCHOR22,. + 0
 3496              	nav_circle_centre:
 3497 0000 00       		.space	1
 3498              		.section	.bss.vertical_mode,"aw",%nobits
 3499              		.set	.LANCHOR9,. + 0
 3502              	vertical_mode:
 3503 0000 00       		.space	1
 3504              		.section	.bss.prescaler.7773,"aw",%nobits
 3505              		.align	1
 3506              		.set	.LANCHOR28,. + 0
 3509              	prescaler.7773:
 3510 0000 0000     		.space	2
 3511              		.section	.bss.nav_roll,"aw",%nobits
 3512              		.align	2
 3513              		.set	.LANCHOR10,. + 0
 3516              	nav_roll:
 3517 0000 00000000 		.space	4
 3518              		.section	.bss.nav_pitch,"aw",%nobits
 3519              		.align	2
 3520              		.set	.LANCHOR11,. + 0
 3523              	nav_pitch:
 3524 0000 00000000 		.space	4
 3525              		.section	.bss.nav_circle_radius,"aw",%nobits
 3526              		.align	2
 3527              		.set	.LANCHOR23,. + 0
 3530              	nav_circle_radius:
 3531 0000 00000000 		.space	4
 3532              		.section	.bss.navigation_target,"aw",%nobits
 3533              		.align	2
 3534              		.set	.LANCHOR6,. + 0
 3537              	navigation_target:
 3538 0000 00000000 		.space	12
 3538      00000000 
 3538      00000000 
 3539              		.section	.bss.nav_circle_radians,"aw",%nobits
 3540              		.align	2
 3541              		.set	.LANCHOR21,. + 0
 3544              	nav_circle_radians:
 3545 0000 00000000 		.space	4
 3546              		.section	.bss.nav_altitude,"aw",%nobits
 3547              		.align	2
 3548              		.set	.LANCHOR3,. + 0
 3551              	nav_altitude:
 3552 0000 00000000 		.space	4
 3553              		.section	.bss.nav_throttle,"aw",%nobits
 3554              		.align	2
 3555              		.set	.LANCHOR15,. + 0
 3558              	nav_throttle:
 3559 0000 00000000 		.space	4
 3560              		.text
 3561              	.Letext0:
 3562              		.file 4 "/opt/local/bin/../lib/gcc/arm-none-eabi/4.7.3/../../../../arm-none-eabi/include/stdint.h"
 3563              		.file 5 "/Users/tony-yi/git/paparazzi_local/sw/include/std.h"
 3564              		.file 6 "./math/pprz_algebra_int.h"
 3565              		.file 7 "./math/pprz_geodetic_int.h"
 3566              		.file 8 "./math/pprz_algebra_float.h"
 3567              		.file 9 "./math/pprz_geodetic_float.h"
 3568              		.file 10 "./mcu_periph/sys_time.h"
 3569              		.file 11 "./mcu_periph/uart.h"
 3570              		.file 12 "./subsystems/gps.h"
 3571              		.file 13 "./math/pprz_orientation_conversion.h"
 3572              		.file 14 "./subsystems/ins.h"
 3573              		.file 15 "./math/pprz_trig_int.h"
 3574              		.file 16 "./subsystems/navigation/common_flight_plan.h"
 3575              		.file 17 "./subsystems/ins/ins_int.h"
 3576              		.file 18 "./firmwares/rotorcraft/autopilot.h"
 3577              		.file 19 "./subsystems/datalink/datalink.h"
 3578              		.file 20 "./subsystems/datalink/pprz_transport.h"
 3579              		.file 21 "./subsystems/datalink/xbee.h"
 3580              		.file 22 "./subsystems/datalink/w5100.h"
 3581              		.file 23 "./subsystems/datalink/downlink.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 navigation.c
/var/tmp//ccIKJK9V.s:19     .text.stateGetPositionEnu_i:0000000000000000 $t
/var/tmp//ccIKJK9V.s:23     .text.stateGetPositionEnu_i:0000000000000000 stateGetPositionEnu_i
/var/tmp//ccIKJK9V.s:50     .text.stateGetPositionEnu_i:0000000000000014 $d
/var/tmp//ccIKJK9V.s:61     .text.nav_init:0000000000000000 $t
/var/tmp//ccIKJK9V.s:66     .text.nav_init:0000000000000000 nav_init
/var/tmp//ccIKJK9V.s:228    .text.nav_init:00000000000000c0 $d
/var/tmp//ccIKJK9V.s:257    .text.nav_run:0000000000000000 $t
/var/tmp//ccIKJK9V.s:262    .text.nav_run:0000000000000000 nav_run
/var/tmp//ccIKJK9V.s:313    .text.nav_run:0000000000000038 $d
/var/tmp//ccIKJK9V.s:326    .text.nav_circle:0000000000000000 $t
/var/tmp//ccIKJK9V.s:331    .text.nav_circle:0000000000000000 nav_circle
/var/tmp//ccIKJK9V.s:704    .text.nav_circle:00000000000001e4 $d
/var/tmp//ccIKJK9V.s:717    .text.nav_route:0000000000000000 $t
/var/tmp//ccIKJK9V.s:722    .text.nav_route:0000000000000000 nav_route
/var/tmp//ccIKJK9V.s:908    .text.nav_route:00000000000000e4 $d
/var/tmp//ccIKJK9V.s:919    .text.nav_approaching_from:0000000000000000 $t
/var/tmp//ccIKJK9V.s:924    .text.nav_approaching_from:0000000000000000 nav_approaching_from
/var/tmp//ccIKJK9V.s:1086   .text.nav_approaching_from:00000000000000b0 $d
/var/tmp//ccIKJK9V.s:1092   .text.nav_reset_reference:0000000000000000 $t
/var/tmp//ccIKJK9V.s:1097   .text.nav_reset_reference:0000000000000000 nav_reset_reference
/var/tmp//ccIKJK9V.s:1122   .text.nav_reset_reference:0000000000000010 $d
/var/tmp//ccIKJK9V.s:1131   .text.nav_reset_alt:0000000000000000 $t
/var/tmp//ccIKJK9V.s:1136   .text.nav_reset_alt:0000000000000000 nav_reset_alt
/var/tmp//ccIKJK9V.s:1355   .text.nav_reset_alt:00000000000001a0 $d
/var/tmp//ccIKJK9V.s:1367   .text.nav_init_stage:0000000000000000 $t
/var/tmp//ccIKJK9V.s:1372   .text.nav_init_stage:0000000000000000 nav_init_stage
/var/tmp//ccIKJK9V.s:1415   .text.nav_init_stage:0000000000000030 $d
/var/tmp//ccIKJK9V.s:1423   .text.nav_move_waypoint:0000000000000000 $t
/var/tmp//ccIKJK9V.s:1428   .text.nav_move_waypoint:0000000000000000 nav_move_waypoint
/var/tmp//ccIKJK9V.s:1740   .text.nav_move_waypoint:00000000000001b4 $d
/var/tmp//ccIKJK9V.s:1751   .text.navigation_update_wp_from_speed:0000000000000000 $t
/var/tmp//ccIKJK9V.s:1756   .text.navigation_update_wp_from_speed:0000000000000000 navigation_update_wp_from_speed
/var/tmp//ccIKJK9V.s:2023   .text.navigation_update_wp_from_speed:0000000000000160 $d
/var/tmp//ccIKJK9V.s:2030   .text.navigation_update_wp_from_speed:0000000000000174 $t
/var/tmp//ccIKJK9V.s:2340   .text.navigation_update_wp_from_speed:0000000000000330 $d
/var/tmp//ccIKJK9V.s:2351   .text.nav_detect_ground:0000000000000000 $t
/var/tmp//ccIKJK9V.s:2356   .text.nav_detect_ground:0000000000000000 nav_detect_ground
/var/tmp//ccIKJK9V.s:2378   .text.nav_detect_ground:0000000000000010 $d
/var/tmp//ccIKJK9V.s:2384   .text.nav_periodic_task:0000000000000000 $t
/var/tmp//ccIKJK9V.s:2389   .text.nav_periodic_task:0000000000000000 nav_periodic_task
/var/tmp//ccIKJK9V.s:2438   .text.nav_periodic_task:0000000000000030 $d
/var/tmp//ccIKJK9V.s:2454   .text.nav_periodic_task:000000000000004c $t
/var/tmp//ccIKJK9V.s:2822   .text.nav_periodic_task:0000000000000230 $d
/var/tmp//ccIKJK9V.s:2826   .text.nav_periodic_task:0000000000000234 $t
/var/tmp//ccIKJK9V.s:2853   .text.nav_periodic_task:0000000000000254 $d
/var/tmp//ccIKJK9V.s:2872   .text.nav_periodic_task:0000000000000298 $t
/var/tmp//ccIKJK9V.s:3266   .text.nav_periodic_task:00000000000004d0 $d
/var/tmp//ccIKJK9V.s:3287   .text.nav_home:0000000000000000 $t
/var/tmp//ccIKJK9V.s:3292   .text.nav_home:0000000000000000 nav_home
/var/tmp//ccIKJK9V.s:3463   .bss.flight_altitude:0000000000000000 flight_altitude
/var/tmp//ccIKJK9V.s:3477   .bss.nav_flight_altitude:0000000000000000 nav_flight_altitude
/var/tmp//ccIKJK9V.s:3551   .bss.nav_altitude:0000000000000000 nav_altitude
/var/tmp//ccIKJK9V.s:3470   .bss.nav_climb:0000000000000000 nav_climb
/var/tmp//ccIKJK9V.s:3558   .bss.nav_throttle:0000000000000000 nav_throttle
/var/tmp//ccIKJK9V.s:3502   .bss.vertical_mode:0000000000000000 vertical_mode
/var/tmp//ccIKJK9V.s:3383   .bss.nav_radius:0000000000000000 nav_radius
/var/tmp//ccIKJK9V.s:3397   .bss.nav_course:0000000000000000 nav_course
/var/tmp//ccIKJK9V.s:3363   .bss.nav_heading:0000000000000000 nav_heading
/var/tmp//ccIKJK9V.s:3523   .bss.nav_pitch:0000000000000000 nav_pitch
/var/tmp//ccIKJK9V.s:3516   .bss.nav_roll:0000000000000000 nav_roll
/var/tmp//ccIKJK9V.s:3445   .bss.nav_leg_length:0000000000000000 nav_leg_length
/var/tmp//ccIKJK9V.s:3404   .bss.nav_leg_progress:0000000000000000 nav_leg_progress
/var/tmp//ccIKJK9V.s:3544   .bss.nav_circle_radians:0000000000000000 nav_circle_radians
/var/tmp//ccIKJK9V.s:3431   .bss.nav_circle_qdr:0000000000000000 nav_circle_qdr
/var/tmp//ccIKJK9V.s:3530   .bss.nav_circle_radius:0000000000000000 nav_circle_radius
/var/tmp//ccIKJK9V.s:3496   .bss.nav_circle_centre:0000000000000000 nav_circle_centre
/var/tmp//ccIKJK9V.s:3483   .bss.nav_segment_end:0000000000000000 nav_segment_end
/var/tmp//ccIKJK9V.s:3376   .bss.nav_segment_start:0000000000000000 nav_segment_start
/var/tmp//ccIKJK9V.s:3424   .bss.horizontal_mode:0000000000000000 horizontal_mode
/var/tmp//ccIKJK9V.s:3390   .bss.ground_alt:0000000000000000 ground_alt
/var/tmp//ccIKJK9V.s:3451   .bss.last_wp:0000000000000000 last_wp
/var/tmp//ccIKJK9V.s:3418   .bss.nav_last_point:0000000000000000 nav_last_point
/var/tmp//ccIKJK9V.s:3490   .bss.navigation_carrot:0000000000000000 navigation_carrot
/var/tmp//ccIKJK9V.s:3537   .bss.navigation_target:0000000000000000 navigation_target
/var/tmp//ccIKJK9V.s:3411   .bss.waypoints:0000000000000000 waypoints
/var/tmp//ccIKJK9V.s:3456   .rodata.nb_waypoint:0000000000000000 nb_waypoint
/var/tmp//ccIKJK9V.s:3331   .rodata:0000000000000000 $d
/var/tmp//ccIKJK9V.s:3356   .bss.time_at_wp.6826:0000000000000000 time_at_wp.6826
/var/tmp//ccIKJK9V.s:3357   .bss.time_at_wp.6826:0000000000000000 $d
/var/tmp//ccIKJK9V.s:3359   .bss.nav_heading:0000000000000000 $d
/var/tmp//ccIKJK9V.s:3366   .bss.prescaler.7573:0000000000000000 $d
/var/tmp//ccIKJK9V.s:3370   .bss.prescaler.7573:0000000000000000 prescaler.7573
/var/tmp//ccIKJK9V.s:3377   .bss.nav_segment_start:0000000000000000 $d
/var/tmp//ccIKJK9V.s:3379   .bss.nav_radius:0000000000000000 $d
/var/tmp//ccIKJK9V.s:3386   .bss.ground_alt:0000000000000000 $d
/var/tmp//ccIKJK9V.s:3393   .bss.nav_course:0000000000000000 $d
/var/tmp//ccIKJK9V.s:3400   .bss.nav_leg_progress:0000000000000000 $d
/var/tmp//ccIKJK9V.s:3407   .bss.waypoints:0000000000000000 $d
/var/tmp//ccIKJK9V.s:3414   .bss.nav_last_point:0000000000000000 $d
/var/tmp//ccIKJK9V.s:3425   .bss.horizontal_mode:0000000000000000 $d
/var/tmp//ccIKJK9V.s:3427   .bss.nav_circle_qdr:0000000000000000 $d
/var/tmp//ccIKJK9V.s:3434   .bss.last_nav_alt.6837:0000000000000000 $d
/var/tmp//ccIKJK9V.s:3438   .bss.last_nav_alt.6837:0000000000000000 last_nav_alt.6837
/var/tmp//ccIKJK9V.s:3441   .bss.nav_leg_length:0000000000000000 $d
/var/tmp//ccIKJK9V.s:3452   .bss.last_wp:0000000000000000 $d
/var/tmp//ccIKJK9V.s:3459   .bss.flight_altitude:0000000000000000 $d
/var/tmp//ccIKJK9V.s:3466   .bss.nav_climb:0000000000000000 $d
/var/tmp//ccIKJK9V.s:3473   .bss.nav_flight_altitude:0000000000000000 $d
/var/tmp//ccIKJK9V.s:3484   .bss.nav_segment_end:0000000000000000 $d
/var/tmp//ccIKJK9V.s:3486   .bss.navigation_carrot:0000000000000000 $d
/var/tmp//ccIKJK9V.s:3497   .bss.nav_circle_centre:0000000000000000 $d
/var/tmp//ccIKJK9V.s:3503   .bss.vertical_mode:0000000000000000 $d
/var/tmp//ccIKJK9V.s:3505   .bss.prescaler.7773:0000000000000000 $d
/var/tmp//ccIKJK9V.s:3509   .bss.prescaler.7773:0000000000000000 prescaler.7773
/var/tmp//ccIKJK9V.s:3512   .bss.nav_roll:0000000000000000 $d
/var/tmp//ccIKJK9V.s:3519   .bss.nav_pitch:0000000000000000 $d
/var/tmp//ccIKJK9V.s:3526   .bss.nav_circle_radius:0000000000000000 $d
/var/tmp//ccIKJK9V.s:3533   .bss.navigation_target:0000000000000000 $d
/var/tmp//ccIKJK9V.s:3540   .bss.nav_circle_radians:0000000000000000 $d
/var/tmp//ccIKJK9V.s:3547   .bss.nav_altitude:0000000000000000 $d
/var/tmp//ccIKJK9V.s:3554   .bss.nav_throttle:0000000000000000 $d
                     .debug_frame:0000000000000010 $d
/var/tmp//ccIKJK9V.s:325    .text.nav_run:0000000000000054 $t

UNDEFINED SYMBOLS
stateCalcPositionEnu_i
state
__aeabi_fmul
__aeabi_f2iz
__aeabi_f2d
__aeabi_dmul
__aeabi_d2iz
memcpy
nav_block
nav_stage
__aeabi_i2d
__aeabi_dcmpgt
pprz_trig_int
ins
ins_ltp_initialised
__aeabi_ddiv
__aeabi_d2f
__aeabi_i2f
gps
ins_ltp_def
stage_time
uart_check_free_space
uart_transmit
uart2
downlink_nb_msgs
downlink_nb_bytes
ck_a
ck_b
downlink_nb_ovrn
autopilot_detect_ground
__aeabi_fcmpgt
autopilot_set_motors_on
stateCalcPositionEnu_f
block_time
autopilot_mode
nav_init_block
autopilot_detect_ground_once
