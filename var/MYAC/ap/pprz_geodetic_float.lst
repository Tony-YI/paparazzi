   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"pprz_geodetic_float.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	__aeabi_f2d
  19              		.global	__aeabi_dmul
  20              		.global	__aeabi_dadd
  21              		.global	__aeabi_d2f
  22              		.section	.text.isometric_latitude_fast_f,"ax",%progbits
  23              		.align	1
  24              		.thumb
  25              		.thumb_func
  27              	isometric_latitude_fast_f:
  28              	.LFB17:
  29              		.file 1 "math/pprz_geodetic_float.c"
   1:math/pprz_geodetic_float.c **** #include "pprz_geodetic_float.h"
   2:math/pprz_geodetic_float.c **** 
   3:math/pprz_geodetic_float.c **** #include "pprz_algebra_float.h"
   4:math/pprz_geodetic_float.c **** #include <math.h>
   5:math/pprz_geodetic_float.c **** 
   6:math/pprz_geodetic_float.c **** /* for ecef_of_XX functions the double versions are needed */
   7:math/pprz_geodetic_float.c **** #include "pprz_geodetic_double.h"
   8:math/pprz_geodetic_float.c **** 
   9:math/pprz_geodetic_float.c **** void ltp_def_from_ecef_f(struct LtpDef_f* def, struct EcefCoor_f* ecef) {
  10:math/pprz_geodetic_float.c **** 
  11:math/pprz_geodetic_float.c ****   /* store the origin of the tangeant plane       */
  12:math/pprz_geodetic_float.c ****   VECT3_COPY(def->ecef, *ecef);
  13:math/pprz_geodetic_float.c ****   /* compute the lla representation of the origin */
  14:math/pprz_geodetic_float.c ****   lla_of_ecef_f(&def->lla, &def->ecef);
  15:math/pprz_geodetic_float.c ****   /* store the rotation matrix                    */
  16:math/pprz_geodetic_float.c ****   const float sin_lat = sinf(def->lla.lat);
  17:math/pprz_geodetic_float.c ****   const float cos_lat = cosf(def->lla.lat);
  18:math/pprz_geodetic_float.c ****   const float sin_lon = sinf(def->lla.lon);
  19:math/pprz_geodetic_float.c ****   const float cos_lon = cosf(def->lla.lon);
  20:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[0] = -sin_lon;
  21:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[1] =  cos_lon;
  22:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[2] =  0.; /* this element is always zero http://en.wikipedia.org/wiki/Geodetic
  23:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[3] = -sin_lat*cos_lon;
  24:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[4] = -sin_lat*sin_lon;
  25:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[5] =  cos_lat;
  26:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[6] =  cos_lat*cos_lon;
  27:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[7] =  cos_lat*sin_lon;
  28:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[8] =  sin_lat;
  29:math/pprz_geodetic_float.c **** 
  30:math/pprz_geodetic_float.c **** }
  31:math/pprz_geodetic_float.c **** 
  32:math/pprz_geodetic_float.c **** void ltp_def_from_lla_f(struct LtpDef_f* def, struct LlaCoor_f* lla) {
  33:math/pprz_geodetic_float.c ****   /* store the origin of the tangeant plane */
  34:math/pprz_geodetic_float.c ****   LLA_COPY(def->lla, *lla);
  35:math/pprz_geodetic_float.c ****   /* compute the ecef representation of the origin */
  36:math/pprz_geodetic_float.c ****   ecef_of_lla_f(&def->ecef, &def->lla);
  37:math/pprz_geodetic_float.c **** 
  38:math/pprz_geodetic_float.c ****   /* store the rotation matrix                    */
  39:math/pprz_geodetic_float.c ****   const float sin_lat = sinf(def->lla.lat);
  40:math/pprz_geodetic_float.c ****   const float cos_lat = cosf(def->lla.lat);
  41:math/pprz_geodetic_float.c ****   const float sin_lon = sinf(def->lla.lon);
  42:math/pprz_geodetic_float.c ****   const float cos_lon = cosf(def->lla.lon);
  43:math/pprz_geodetic_float.c **** 
  44:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[0] = -sin_lon;
  45:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[1] =  cos_lon;
  46:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[2] =  0.; /* this element is always zero http://en.wikipedia.org/wiki/Geodetic
  47:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[3] = -sin_lat*cos_lon;
  48:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[4] = -sin_lat*sin_lon;
  49:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[5] =  cos_lat;
  50:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[6] =  cos_lat*cos_lon;
  51:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[7] =  cos_lat*sin_lon;
  52:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[8] =  sin_lat;
  53:math/pprz_geodetic_float.c **** }
  54:math/pprz_geodetic_float.c **** 
  55:math/pprz_geodetic_float.c **** void enu_of_ecef_point_f(struct EnuCoor_f* enu, struct LtpDef_f* def, struct EcefCoor_f* ecef) {
  56:math/pprz_geodetic_float.c ****   struct EcefCoor_f delta;
  57:math/pprz_geodetic_float.c ****   VECT3_DIFF(delta, *ecef, def->ecef);
  58:math/pprz_geodetic_float.c ****   MAT33_VECT3_MUL(*enu, def->ltp_of_ecef, delta);
  59:math/pprz_geodetic_float.c **** }
  60:math/pprz_geodetic_float.c **** 
  61:math/pprz_geodetic_float.c **** void ned_of_ecef_point_f(struct NedCoor_f* ned, struct LtpDef_f* def, struct EcefCoor_f* ecef) {
  62:math/pprz_geodetic_float.c ****   struct EnuCoor_f enu;
  63:math/pprz_geodetic_float.c ****   enu_of_ecef_point_f(&enu, def, ecef);
  64:math/pprz_geodetic_float.c ****   ENU_OF_TO_NED(*ned, enu);
  65:math/pprz_geodetic_float.c **** }
  66:math/pprz_geodetic_float.c **** 
  67:math/pprz_geodetic_float.c **** 
  68:math/pprz_geodetic_float.c **** void enu_of_ecef_vect_f(struct EnuCoor_f* enu, struct LtpDef_f* def, struct EcefCoor_f* ecef) {
  69:math/pprz_geodetic_float.c ****   MAT33_VECT3_MUL(*enu, def->ltp_of_ecef, *ecef);
  70:math/pprz_geodetic_float.c **** }
  71:math/pprz_geodetic_float.c **** 
  72:math/pprz_geodetic_float.c **** void ned_of_ecef_vect_f(struct NedCoor_f* ned, struct LtpDef_f* def, struct EcefCoor_f* ecef) {
  73:math/pprz_geodetic_float.c ****   struct EnuCoor_f enu;
  74:math/pprz_geodetic_float.c ****   enu_of_ecef_vect_f(&enu, def, ecef);
  75:math/pprz_geodetic_float.c ****   ENU_OF_TO_NED(*ned, enu);
  76:math/pprz_geodetic_float.c **** }
  77:math/pprz_geodetic_float.c **** 
  78:math/pprz_geodetic_float.c **** void enu_of_lla_point_f(struct EnuCoor_f* enu, struct LtpDef_f* def, struct LlaCoor_f* lla) {
  79:math/pprz_geodetic_float.c ****   struct EcefCoor_f ecef;
  80:math/pprz_geodetic_float.c ****   ecef_of_lla_f(&ecef,lla);
  81:math/pprz_geodetic_float.c ****   enu_of_ecef_point_f(enu,def,&ecef);
  82:math/pprz_geodetic_float.c **** }
  83:math/pprz_geodetic_float.c **** 
  84:math/pprz_geodetic_float.c **** void ned_of_lla_point_f(struct NedCoor_f* ned, struct LtpDef_f* def, struct LlaCoor_f* lla) {
  85:math/pprz_geodetic_float.c ****   struct EcefCoor_f ecef;
  86:math/pprz_geodetic_float.c ****   ecef_of_lla_f(&ecef,lla);
  87:math/pprz_geodetic_float.c ****   ned_of_ecef_point_f(ned,def,&ecef);
  88:math/pprz_geodetic_float.c **** }
  89:math/pprz_geodetic_float.c **** 
  90:math/pprz_geodetic_float.c **** /*
  91:math/pprz_geodetic_float.c ****  * not enought precision with float - use double
  92:math/pprz_geodetic_float.c ****  */
  93:math/pprz_geodetic_float.c **** void ecef_of_enu_point_f(struct EcefCoor_f* ecef, struct LtpDef_f* def, struct EnuCoor_f* enu) {
  94:math/pprz_geodetic_float.c ****   /* convert used floats to double */
  95:math/pprz_geodetic_float.c ****   struct DoubleMat33 ltp_of_ecef_d;
  96:math/pprz_geodetic_float.c ****   ltp_of_ecef_d.m[0] = (double) def->ltp_of_ecef.m[0];
  97:math/pprz_geodetic_float.c ****   ltp_of_ecef_d.m[1] = (double) def->ltp_of_ecef.m[1];
  98:math/pprz_geodetic_float.c ****   ltp_of_ecef_d.m[2] = (double) def->ltp_of_ecef.m[2];
  99:math/pprz_geodetic_float.c ****   ltp_of_ecef_d.m[3] = (double) def->ltp_of_ecef.m[3];
 100:math/pprz_geodetic_float.c ****   ltp_of_ecef_d.m[4] = (double) def->ltp_of_ecef.m[4];
 101:math/pprz_geodetic_float.c ****   ltp_of_ecef_d.m[5] = (double) def->ltp_of_ecef.m[5];
 102:math/pprz_geodetic_float.c ****   ltp_of_ecef_d.m[6] = (double) def->ltp_of_ecef.m[6];
 103:math/pprz_geodetic_float.c ****   ltp_of_ecef_d.m[7] = (double) def->ltp_of_ecef.m[7];
 104:math/pprz_geodetic_float.c ****   ltp_of_ecef_d.m[8] = (double) def->ltp_of_ecef.m[8];
 105:math/pprz_geodetic_float.c ****   struct EnuCoor_f enu_d;
 106:math/pprz_geodetic_float.c ****   enu_d.x = (double) enu->x;
 107:math/pprz_geodetic_float.c ****   enu_d.y = (double) enu->y;
 108:math/pprz_geodetic_float.c ****   enu_d.z = (double) enu->z;
 109:math/pprz_geodetic_float.c **** 
 110:math/pprz_geodetic_float.c ****   /* compute in double */
 111:math/pprz_geodetic_float.c ****   struct EcefCoor_d ecef_d;
 112:math/pprz_geodetic_float.c ****   MAT33_VECT3_TRANSP_MUL(ecef_d, ltp_of_ecef_d, enu_d);
 113:math/pprz_geodetic_float.c **** 
 114:math/pprz_geodetic_float.c ****   /* convert result back to float and add it*/
 115:math/pprz_geodetic_float.c ****   ecef->x = (float) ecef_d.x + def->ecef.x;
 116:math/pprz_geodetic_float.c ****   ecef->y = (float) ecef_d.y + def->ecef.y;
 117:math/pprz_geodetic_float.c ****   ecef->z = (float) ecef_d.z + def->ecef.z;
 118:math/pprz_geodetic_float.c **** }
 119:math/pprz_geodetic_float.c **** 
 120:math/pprz_geodetic_float.c **** void ecef_of_ned_point_f(struct EcefCoor_f* ecef, struct LtpDef_f* def, struct NedCoor_f* ned) {
 121:math/pprz_geodetic_float.c ****   struct EnuCoor_f enu;
 122:math/pprz_geodetic_float.c ****   ENU_OF_TO_NED(enu, *ned);
 123:math/pprz_geodetic_float.c ****   ecef_of_enu_point_f(ecef, def, &enu);
 124:math/pprz_geodetic_float.c **** }
 125:math/pprz_geodetic_float.c **** 
 126:math/pprz_geodetic_float.c **** void ecef_of_enu_vect_f(struct EcefCoor_f* ecef, struct LtpDef_f* def, struct EnuCoor_f* enu) {
 127:math/pprz_geodetic_float.c ****   /* convert used floats to double */
 128:math/pprz_geodetic_float.c ****   struct DoubleMat33 ltp_of_ecef_d;
 129:math/pprz_geodetic_float.c ****   ltp_of_ecef_d.m[0] = (double) def->ltp_of_ecef.m[0];
 130:math/pprz_geodetic_float.c ****   ltp_of_ecef_d.m[1] = (double) def->ltp_of_ecef.m[1];
 131:math/pprz_geodetic_float.c ****   ltp_of_ecef_d.m[2] = (double) def->ltp_of_ecef.m[2];
 132:math/pprz_geodetic_float.c ****   ltp_of_ecef_d.m[3] = (double) def->ltp_of_ecef.m[3];
 133:math/pprz_geodetic_float.c ****   ltp_of_ecef_d.m[4] = (double) def->ltp_of_ecef.m[4];
 134:math/pprz_geodetic_float.c ****   ltp_of_ecef_d.m[5] = (double) def->ltp_of_ecef.m[5];
 135:math/pprz_geodetic_float.c ****   ltp_of_ecef_d.m[6] = (double) def->ltp_of_ecef.m[6];
 136:math/pprz_geodetic_float.c ****   ltp_of_ecef_d.m[7] = (double) def->ltp_of_ecef.m[7];
 137:math/pprz_geodetic_float.c ****   ltp_of_ecef_d.m[8] = (double) def->ltp_of_ecef.m[8];
 138:math/pprz_geodetic_float.c ****   struct EnuCoor_f enu_d;
 139:math/pprz_geodetic_float.c ****   enu_d.x = (double) enu->x;
 140:math/pprz_geodetic_float.c ****   enu_d.y = (double) enu->y;
 141:math/pprz_geodetic_float.c ****   enu_d.z = (double) enu->z;
 142:math/pprz_geodetic_float.c **** 
 143:math/pprz_geodetic_float.c ****   /* compute in double */
 144:math/pprz_geodetic_float.c ****   struct EcefCoor_d ecef_d;
 145:math/pprz_geodetic_float.c ****   MAT33_VECT3_TRANSP_MUL(ecef_d, ltp_of_ecef_d, enu_d);
 146:math/pprz_geodetic_float.c **** 
 147:math/pprz_geodetic_float.c ****   /* convert result back to float*/
 148:math/pprz_geodetic_float.c ****   ecef->x = (float) ecef_d.x;
 149:math/pprz_geodetic_float.c ****   ecef->y = (float) ecef_d.y;
 150:math/pprz_geodetic_float.c ****   ecef->z = (float) ecef_d.z;
 151:math/pprz_geodetic_float.c **** }
 152:math/pprz_geodetic_float.c **** 
 153:math/pprz_geodetic_float.c **** void ecef_of_ned_vect_f(struct EcefCoor_f* ecef, struct LtpDef_f* def, struct NedCoor_f* ned) {
 154:math/pprz_geodetic_float.c ****   struct EnuCoor_f enu;
 155:math/pprz_geodetic_float.c ****   ENU_OF_TO_NED(enu, *ned);
 156:math/pprz_geodetic_float.c ****   ecef_of_enu_vect_f(ecef, def, &enu);
 157:math/pprz_geodetic_float.c **** }
 158:math/pprz_geodetic_float.c **** /* end use double versions */
 159:math/pprz_geodetic_float.c **** 
 160:math/pprz_geodetic_float.c **** 
 161:math/pprz_geodetic_float.c **** 
 162:math/pprz_geodetic_float.c **** 
 163:math/pprz_geodetic_float.c **** /* http://en.wikipedia.org/wiki/Geodetic_system */
 164:math/pprz_geodetic_float.c **** void lla_of_ecef_f(struct LlaCoor_f* out, struct EcefCoor_f* in) {
 165:math/pprz_geodetic_float.c **** 
 166:math/pprz_geodetic_float.c ****   // FIXME : make an ellipsoid struct
 167:math/pprz_geodetic_float.c ****   static const float a = 6378137.0;           /* earth semimajor axis in meters */
 168:math/pprz_geodetic_float.c ****   static const float f = 1./298.257223563;    /* reciprocal flattening          */
 169:math/pprz_geodetic_float.c ****   const float b = a*(1.-f);                   /* semi-minor axis                */
 170:math/pprz_geodetic_float.c ****   const float b2 = b*b;
 171:math/pprz_geodetic_float.c **** 
 172:math/pprz_geodetic_float.c ****   const float e2 = 2.*f-(f*f);                /* first eccentricity squared     */
 173:math/pprz_geodetic_float.c ****   const float ep2 = f*(2.-f)/((1.-f)*(1.-f)); /* second eccentricity squared    */
 174:math/pprz_geodetic_float.c ****   const float E2 = a*a - b2;
 175:math/pprz_geodetic_float.c **** 
 176:math/pprz_geodetic_float.c **** 
 177:math/pprz_geodetic_float.c ****   const float z2 = in->z*in->z;
 178:math/pprz_geodetic_float.c ****   const float r2 = in->x*in->x+in->y*in->y;
 179:math/pprz_geodetic_float.c ****   const float r = sqrtf(r2);
 180:math/pprz_geodetic_float.c ****   const float F = 54.*b2*z2;
 181:math/pprz_geodetic_float.c ****   const float G = r2 + (1-e2)*z2 - e2*E2;
 182:math/pprz_geodetic_float.c ****   const float c = (e2*e2*F*r2)/(G*G*G);
 183:math/pprz_geodetic_float.c ****   const float s = powf( (1 + c + sqrtf(c*c + 2*c)), 1./3.);
 184:math/pprz_geodetic_float.c ****   const float s1 = 1+s+1/s;
 185:math/pprz_geodetic_float.c ****   const float P = F/(3*s1*s1*G*G);
 186:math/pprz_geodetic_float.c ****   const float Q = sqrtf(1+2*e2*e2*P);
 187:math/pprz_geodetic_float.c ****   const float ro = -(e2*P*r)/(1+Q) + sqrtf((a*a/2)*(1+1/Q) - ((1-e2)*P*z2)/(Q*(1+Q)) - P*r2/2);
 188:math/pprz_geodetic_float.c ****   const float tmp = (r - e2*ro)*(r - e2*ro);
 189:math/pprz_geodetic_float.c ****   const float U = sqrtf( tmp + z2 );
 190:math/pprz_geodetic_float.c ****   const float V = sqrtf( tmp + (1-e2)*z2 );
 191:math/pprz_geodetic_float.c ****   const float zo = (b2*in->z)/(a*V);
 192:math/pprz_geodetic_float.c **** 
 193:math/pprz_geodetic_float.c ****   out->alt = U*(1 - b2/(a*V));
 194:math/pprz_geodetic_float.c ****   out->lat = atanf((in->z + ep2*zo)/r);
 195:math/pprz_geodetic_float.c ****   out->lon = atan2f(in->y,in->x);
 196:math/pprz_geodetic_float.c **** 
 197:math/pprz_geodetic_float.c **** }
 198:math/pprz_geodetic_float.c **** 
 199:math/pprz_geodetic_float.c **** void ecef_of_lla_f(struct EcefCoor_f* out, struct LlaCoor_f* in) {
 200:math/pprz_geodetic_float.c **** 
 201:math/pprz_geodetic_float.c ****   // FIXME : make an ellipsoid struct
 202:math/pprz_geodetic_float.c ****   static const float a = 6378137.0;           /* earth semimajor axis in meters */
 203:math/pprz_geodetic_float.c ****   static const float f = 1./298.257223563;    /* reciprocal flattening          */
 204:math/pprz_geodetic_float.c ****   const float e2 = 2.*f-(f*f);                /* first eccentricity squared     */
 205:math/pprz_geodetic_float.c **** 
 206:math/pprz_geodetic_float.c ****   const float sin_lat = sinf(in->lat);
 207:math/pprz_geodetic_float.c ****   const float cos_lat = cosf(in->lat);
 208:math/pprz_geodetic_float.c ****   const float sin_lon = sinf(in->lon);
 209:math/pprz_geodetic_float.c ****   const float cos_lon = cosf(in->lon);
 210:math/pprz_geodetic_float.c ****   const float chi = sqrtf(1. - e2*sin_lat*sin_lat);
 211:math/pprz_geodetic_float.c ****   const float a_chi = a / chi;
 212:math/pprz_geodetic_float.c **** 
 213:math/pprz_geodetic_float.c ****   out->x = (a_chi + in->alt) * cos_lat * cos_lon;
 214:math/pprz_geodetic_float.c ****   out->y = (a_chi + in->alt) * cos_lat * sin_lon;
 215:math/pprz_geodetic_float.c ****   out->z = (a_chi*(1. - e2) + in->alt) * sin_lat;
 216:math/pprz_geodetic_float.c **** }
 217:math/pprz_geodetic_float.c **** 
 218:math/pprz_geodetic_float.c **** 
 219:math/pprz_geodetic_float.c **** 
 220:math/pprz_geodetic_float.c **** 
 221:math/pprz_geodetic_float.c **** #include "math/pprz_geodetic_utm.h"
 222:math/pprz_geodetic_float.c **** 
 223:math/pprz_geodetic_float.c **** struct complex { float re; float im; };
 224:math/pprz_geodetic_float.c **** #define CScal(k, z) { z.re *= k;  z.im *= k; }
 225:math/pprz_geodetic_float.c **** #define CAdd(z1, z2) { z2.re += z1.re;  z2.im += z1.im; }
 226:math/pprz_geodetic_float.c **** #define CSub(z1, z2) { z2.re -= z1.re;  z2.im -= z1.im; }
 227:math/pprz_geodetic_float.c **** #define CI(z) { float tmp = z.re; z.re = - z.im; z.im = tmp; }
 228:math/pprz_geodetic_float.c **** #define CExp(z) { float e = exp(z.re); z.re = e*cos(z.im); z.im = e*sin(z.im); }
 229:math/pprz_geodetic_float.c **** /* Expanded #define CSin(z) { CI(z); struct complex _z = {-z.re, -z.im}; CExp(z); CExp(_z); CSub(_z
 230:math/pprz_geodetic_float.c **** 
 231:math/pprz_geodetic_float.c **** #define CSin(z) { CI(z); struct complex _z = {-z.re, -z.im}; float e = exp(z.re); float cos_z_im = 
 232:math/pprz_geodetic_float.c **** 
 233:math/pprz_geodetic_float.c **** 
 234:math/pprz_geodetic_float.c **** static inline float isometric_latitude_f(float phi, float e) {
 235:math/pprz_geodetic_float.c ****   return log (tan (M_PI_4 + phi / 2.0)) - e / 2.0 * log((1.0 + e * sin(phi)) / (1.0 - e * sin(phi))
 236:math/pprz_geodetic_float.c **** }
 237:math/pprz_geodetic_float.c **** 
 238:math/pprz_geodetic_float.c **** static inline float isometric_latitude_fast_f(float phi) {
  30              		.loc 1 238 0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              	.LVL0:
  35 0000 08B5     		push	{r3, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 8
  38              		.cfi_offset 3, -8
  39              		.cfi_offset 14, -4
 239:math/pprz_geodetic_float.c ****   return log (tan (M_PI_4 + phi / 2.0));
  40              		.loc 1 239 0
  41 0002 FFF7FEFF 		bl	__aeabi_f2d
  42              	.LVL1:
  43 0006 0022     		movs	r2, #0
  44 0008 094B     		ldr	r3, .L2+8
  45 000a FFF7FEFF 		bl	__aeabi_dmul
  46              	.LVL2:
  47 000e 06A3     		adr	r3, .L2
  48 0010 D3E90023 		ldrd	r2, [r3]
  49 0014 FFF7FEFF 		bl	__aeabi_dadd
  50              	.LVL3:
  51 0018 FFF7FEFF 		bl	tan
  52              	.LVL4:
  53 001c FFF7FEFF 		bl	log
  54              	.LVL5:
  55 0020 FFF7FEFF 		bl	__aeabi_d2f
  56              	.LVL6:
 240:math/pprz_geodetic_float.c **** }
  57              		.loc 1 240 0
  58 0024 08BD     		pop	{r3, pc}
  59              	.L3:
  60 0026 00BF     		.align	3
  61              	.L2:
  62 0028 182D4454 		.word	1413754136
  63 002c FB21E93F 		.word	1072243195
  64 0030 0000E03F 		.word	1071644672
  65              		.cfi_endproc
  66              	.LFE17:
  68              		.global	__aeabi_fsub
  69              		.global	__aeabi_fmul
  70              		.global	__aeabi_fadd
  71 0034 AFF30080 		.section	.text.enu_of_ecef_point_f,"ax",%progbits
  72              		.align	1
  73              		.global	enu_of_ecef_point_f
  74              		.thumb
  75              		.thumb_func
  77              	enu_of_ecef_point_f:
  78              	.LFB4:
  55:math/pprz_geodetic_float.c **** void enu_of_ecef_point_f(struct EnuCoor_f* enu, struct LtpDef_f* def, struct EcefCoor_f* ecef) {
  79              		.loc 1 55 0
  80              		.cfi_startproc
  81              		@ args = 0, pretend = 0, frame = 0
  82              		@ frame_needed = 0, uses_anonymous_args = 0
  83              	.LVL7:
  84 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
  85              	.LCFI1:
  86              		.cfi_def_cfa_offset 32
  87              		.cfi_offset 3, -32
  88              		.cfi_offset 4, -28
  89              		.cfi_offset 5, -24
  90              		.cfi_offset 6, -20
  91              		.cfi_offset 7, -16
  92              		.cfi_offset 8, -12
  93              		.cfi_offset 9, -8
  94              		.cfi_offset 14, -4
  55:math/pprz_geodetic_float.c **** void enu_of_ecef_point_f(struct EnuCoor_f* enu, struct LtpDef_f* def, struct EcefCoor_f* ecef) {
  95              		.loc 1 55 0
  96 0004 0C46     		mov	r4, r1
  97 0006 0546     		mov	r5, r0
  57:math/pprz_geodetic_float.c ****   VECT3_DIFF(delta, *ecef, def->ecef);
  98              		.loc 1 57 0
  99 0008 0968     		ldr	r1, [r1, #0]	@ float
 100              	.LVL8:
 101 000a 1068     		ldr	r0, [r2, #0]	@ float
 102              	.LVL9:
  55:math/pprz_geodetic_float.c **** void enu_of_ecef_point_f(struct EnuCoor_f* enu, struct LtpDef_f* def, struct EcefCoor_f* ecef) {
 103              		.loc 1 55 0
 104 000c 1646     		mov	r6, r2
  57:math/pprz_geodetic_float.c ****   VECT3_DIFF(delta, *ecef, def->ecef);
 105              		.loc 1 57 0
 106 000e FFF7FEFF 		bl	__aeabi_fsub
 107              	.LVL10:
 108 0012 6168     		ldr	r1, [r4, #4]	@ float
 109 0014 8046     		mov	r8, r0
 110              	.LVL11:
 111 0016 7068     		ldr	r0, [r6, #4]	@ float
 112              	.LVL12:
 113 0018 FFF7FEFF 		bl	__aeabi_fsub
 114              	.LVL13:
 115 001c A168     		ldr	r1, [r4, #8]	@ float
 116 001e 0746     		mov	r7, r0
 117              	.LVL14:
 118 0020 B068     		ldr	r0, [r6, #8]	@ float
 119              	.LVL15:
 120 0022 FFF7FEFF 		bl	__aeabi_fsub
 121              	.LVL16:
  58:math/pprz_geodetic_float.c ****   MAT33_VECT3_MUL(*enu, def->ltp_of_ecef, delta);
 122              		.loc 1 58 0
 123 0026 A169     		ldr	r1, [r4, #24]	@ float
  57:math/pprz_geodetic_float.c ****   VECT3_DIFF(delta, *ecef, def->ecef);
 124              		.loc 1 57 0
 125 0028 0646     		mov	r6, r0
 126              	.LVL17:
  58:math/pprz_geodetic_float.c ****   MAT33_VECT3_MUL(*enu, def->ltp_of_ecef, delta);
 127              		.loc 1 58 0
 128 002a 4046     		mov	r0, r8
 129              	.LVL18:
 130 002c FFF7FEFF 		bl	__aeabi_fmul
 131              	.LVL19:
 132 0030 E169     		ldr	r1, [r4, #28]	@ float
 133 0032 8146     		mov	r9, r0
 134 0034 3846     		mov	r0, r7
 135 0036 FFF7FEFF 		bl	__aeabi_fmul
 136              	.LVL20:
 137 003a 0146     		mov	r1, r0
 138 003c 4846     		mov	r0, r9
 139 003e FFF7FEFF 		bl	__aeabi_fadd
 140              	.LVL21:
 141 0042 216A     		ldr	r1, [r4, #32]	@ float
 142 0044 8146     		mov	r9, r0
 143 0046 3046     		mov	r0, r6
 144 0048 FFF7FEFF 		bl	__aeabi_fmul
 145              	.LVL22:
 146 004c 0146     		mov	r1, r0
 147 004e 4846     		mov	r0, r9
 148 0050 FFF7FEFF 		bl	__aeabi_fadd
 149              	.LVL23:
 150 0054 616A     		ldr	r1, [r4, #36]	@ float
 151 0056 2860     		str	r0, [r5, #0]	@ float
 152 0058 4046     		mov	r0, r8
 153 005a FFF7FEFF 		bl	__aeabi_fmul
 154              	.LVL24:
 155 005e A16A     		ldr	r1, [r4, #40]	@ float
 156 0060 8146     		mov	r9, r0
 157 0062 3846     		mov	r0, r7
 158 0064 FFF7FEFF 		bl	__aeabi_fmul
 159              	.LVL25:
 160 0068 0146     		mov	r1, r0
 161 006a 4846     		mov	r0, r9
 162 006c FFF7FEFF 		bl	__aeabi_fadd
 163              	.LVL26:
 164 0070 E16A     		ldr	r1, [r4, #44]	@ float
 165 0072 8146     		mov	r9, r0
 166 0074 3046     		mov	r0, r6
 167 0076 FFF7FEFF 		bl	__aeabi_fmul
 168              	.LVL27:
 169 007a 0146     		mov	r1, r0
 170 007c 4846     		mov	r0, r9
 171 007e FFF7FEFF 		bl	__aeabi_fadd
 172              	.LVL28:
 173 0082 216B     		ldr	r1, [r4, #48]	@ float
 174 0084 6860     		str	r0, [r5, #4]	@ float
 175 0086 4046     		mov	r0, r8
 176 0088 FFF7FEFF 		bl	__aeabi_fmul
 177              	.LVL29:
 178 008c 616B     		ldr	r1, [r4, #52]	@ float
 179 008e 8046     		mov	r8, r0
 180              	.LVL30:
 181 0090 3846     		mov	r0, r7
 182 0092 FFF7FEFF 		bl	__aeabi_fmul
 183              	.LVL31:
 184 0096 0146     		mov	r1, r0
 185 0098 4046     		mov	r0, r8
 186 009a FFF7FEFF 		bl	__aeabi_fadd
 187              	.LVL32:
 188 009e A16B     		ldr	r1, [r4, #56]	@ float
 189 00a0 0746     		mov	r7, r0
 190              	.LVL33:
 191 00a2 3046     		mov	r0, r6
 192 00a4 FFF7FEFF 		bl	__aeabi_fmul
 193              	.LVL34:
 194 00a8 0146     		mov	r1, r0
 195 00aa 3846     		mov	r0, r7
 196 00ac FFF7FEFF 		bl	__aeabi_fadd
 197              	.LVL35:
 198 00b0 A860     		str	r0, [r5, #8]	@ float
 199 00b2 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 200              		.cfi_endproc
 201              	.LFE4:
 203              		.section	.text.ned_of_ecef_point_f,"ax",%progbits
 204              		.align	1
 205              		.global	ned_of_ecef_point_f
 206              		.thumb
 207              		.thumb_func
 209              	ned_of_ecef_point_f:
 210              	.LFB5:
  61:math/pprz_geodetic_float.c **** void ned_of_ecef_point_f(struct NedCoor_f* ned, struct LtpDef_f* def, struct EcefCoor_f* ecef) {
 211              		.loc 1 61 0
 212              		.cfi_startproc
 213              		@ args = 0, pretend = 0, frame = 16
 214              		@ frame_needed = 0, uses_anonymous_args = 0
 215              	.LVL36:
 216 0000 1FB5     		push	{r0, r1, r2, r3, r4, lr}
 217              	.LCFI2:
 218              		.cfi_def_cfa_offset 24
 219              		.cfi_offset 0, -24
 220              		.cfi_offset 1, -20
 221              		.cfi_offset 2, -16
 222              		.cfi_offset 3, -12
 223              		.cfi_offset 4, -8
 224              		.cfi_offset 14, -4
  61:math/pprz_geodetic_float.c **** void ned_of_ecef_point_f(struct NedCoor_f* ned, struct LtpDef_f* def, struct EcefCoor_f* ecef) {
 225              		.loc 1 61 0
 226 0002 0446     		mov	r4, r0
  63:math/pprz_geodetic_float.c ****   enu_of_ecef_point_f(&enu, def, ecef);
 227              		.loc 1 63 0
 228 0004 01A8     		add	r0, sp, #4
 229              	.LVL37:
 230 0006 FFF7FEFF 		bl	enu_of_ecef_point_f
 231              	.LVL38:
  64:math/pprz_geodetic_float.c ****   ENU_OF_TO_NED(*ned, enu);
 232              		.loc 1 64 0
 233 000a 0399     		ldr	r1, [sp, #12]
 234 000c 029B     		ldr	r3, [sp, #8]	@ float
 235 000e 0198     		ldr	r0, [sp, #4]	@ float
 236 0010 01F10042 		add	r2, r1, #-2147483648
 237 0014 2360     		str	r3, [r4, #0]	@ float
 238 0016 6060     		str	r0, [r4, #4]	@ float
 239 0018 A260     		str	r2, [r4, #8]	@ float
  65:math/pprz_geodetic_float.c **** }
 240              		.loc 1 65 0
 241 001a 1FBD     		pop	{r0, r1, r2, r3, r4, pc}
 242              		.cfi_endproc
 243              	.LFE5:
 245              		.section	.text.enu_of_ecef_vect_f,"ax",%progbits
 246              		.align	1
 247              		.global	enu_of_ecef_vect_f
 248              		.thumb
 249              		.thumb_func
 251              	enu_of_ecef_vect_f:
 252              	.LFB6:
  68:math/pprz_geodetic_float.c **** void enu_of_ecef_vect_f(struct EnuCoor_f* enu, struct LtpDef_f* def, struct EcefCoor_f* ecef) {
 253              		.loc 1 68 0
 254              		.cfi_startproc
 255              		@ args = 0, pretend = 0, frame = 0
 256              		@ frame_needed = 0, uses_anonymous_args = 0
 257              	.LVL39:
 258 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 259              	.LCFI3:
 260              		.cfi_def_cfa_offset 32
 261              		.cfi_offset 3, -32
 262              		.cfi_offset 4, -28
 263              		.cfi_offset 5, -24
 264              		.cfi_offset 6, -20
 265              		.cfi_offset 7, -16
 266              		.cfi_offset 8, -12
 267              		.cfi_offset 9, -8
 268              		.cfi_offset 14, -4
  69:math/pprz_geodetic_float.c ****   MAT33_VECT3_MUL(*enu, def->ltp_of_ecef, *ecef);
 269              		.loc 1 69 0
 270 0004 D2F80080 		ldr	r8, [r2, #0]	@ float
  68:math/pprz_geodetic_float.c **** void enu_of_ecef_vect_f(struct EnuCoor_f* enu, struct LtpDef_f* def, struct EcefCoor_f* ecef) {
 271              		.loc 1 68 0
 272 0008 0C46     		mov	r4, r1
 273 000a 0546     		mov	r5, r0
  69:math/pprz_geodetic_float.c ****   MAT33_VECT3_MUL(*enu, def->ltp_of_ecef, *ecef);
 274              		.loc 1 69 0
 275 000c 8969     		ldr	r1, [r1, #24]	@ float
 276              	.LVL40:
 277 000e 4046     		mov	r0, r8
 278              	.LVL41:
 279 0010 5768     		ldr	r7, [r2, #4]	@ float
 280 0012 9668     		ldr	r6, [r2, #8]	@ float
 281 0014 FFF7FEFF 		bl	__aeabi_fmul
 282              	.LVL42:
 283 0018 E169     		ldr	r1, [r4, #28]	@ float
 284 001a 8146     		mov	r9, r0
 285 001c 3846     		mov	r0, r7
 286 001e FFF7FEFF 		bl	__aeabi_fmul
 287              	.LVL43:
 288 0022 0146     		mov	r1, r0
 289 0024 4846     		mov	r0, r9
 290 0026 FFF7FEFF 		bl	__aeabi_fadd
 291              	.LVL44:
 292 002a 216A     		ldr	r1, [r4, #32]	@ float
 293 002c 8146     		mov	r9, r0
 294 002e 3046     		mov	r0, r6
 295 0030 FFF7FEFF 		bl	__aeabi_fmul
 296              	.LVL45:
 297 0034 0146     		mov	r1, r0
 298 0036 4846     		mov	r0, r9
 299 0038 FFF7FEFF 		bl	__aeabi_fadd
 300              	.LVL46:
 301 003c 616A     		ldr	r1, [r4, #36]	@ float
 302 003e 2860     		str	r0, [r5, #0]	@ float
 303 0040 4046     		mov	r0, r8
 304 0042 FFF7FEFF 		bl	__aeabi_fmul
 305              	.LVL47:
 306 0046 A16A     		ldr	r1, [r4, #40]	@ float
 307 0048 8146     		mov	r9, r0
 308 004a 3846     		mov	r0, r7
 309 004c FFF7FEFF 		bl	__aeabi_fmul
 310              	.LVL48:
 311 0050 0146     		mov	r1, r0
 312 0052 4846     		mov	r0, r9
 313 0054 FFF7FEFF 		bl	__aeabi_fadd
 314              	.LVL49:
 315 0058 E16A     		ldr	r1, [r4, #44]	@ float
 316 005a 8146     		mov	r9, r0
 317 005c 3046     		mov	r0, r6
 318 005e FFF7FEFF 		bl	__aeabi_fmul
 319              	.LVL50:
 320 0062 0146     		mov	r1, r0
 321 0064 4846     		mov	r0, r9
 322 0066 FFF7FEFF 		bl	__aeabi_fadd
 323              	.LVL51:
 324 006a 216B     		ldr	r1, [r4, #48]	@ float
 325 006c 6860     		str	r0, [r5, #4]	@ float
 326 006e 4046     		mov	r0, r8
 327 0070 FFF7FEFF 		bl	__aeabi_fmul
 328              	.LVL52:
 329 0074 616B     		ldr	r1, [r4, #52]	@ float
 330 0076 8046     		mov	r8, r0
 331 0078 3846     		mov	r0, r7
 332 007a FFF7FEFF 		bl	__aeabi_fmul
 333              	.LVL53:
 334 007e 0146     		mov	r1, r0
 335 0080 4046     		mov	r0, r8
 336 0082 FFF7FEFF 		bl	__aeabi_fadd
 337              	.LVL54:
 338 0086 A16B     		ldr	r1, [r4, #56]	@ float
 339 0088 0746     		mov	r7, r0
 340 008a 3046     		mov	r0, r6
 341 008c FFF7FEFF 		bl	__aeabi_fmul
 342              	.LVL55:
 343 0090 0146     		mov	r1, r0
 344 0092 3846     		mov	r0, r7
 345 0094 FFF7FEFF 		bl	__aeabi_fadd
 346              	.LVL56:
 347 0098 A860     		str	r0, [r5, #8]	@ float
 348 009a BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 349              		.cfi_endproc
 350              	.LFE6:
 352              		.section	.text.ned_of_ecef_vect_f,"ax",%progbits
 353              		.align	1
 354              		.global	ned_of_ecef_vect_f
 355              		.thumb
 356              		.thumb_func
 358              	ned_of_ecef_vect_f:
 359              	.LFB7:
  72:math/pprz_geodetic_float.c **** void ned_of_ecef_vect_f(struct NedCoor_f* ned, struct LtpDef_f* def, struct EcefCoor_f* ecef) {
 360              		.loc 1 72 0
 361              		.cfi_startproc
 362              		@ args = 0, pretend = 0, frame = 16
 363              		@ frame_needed = 0, uses_anonymous_args = 0
 364              	.LVL57:
 365 0000 1FB5     		push	{r0, r1, r2, r3, r4, lr}
 366              	.LCFI4:
 367              		.cfi_def_cfa_offset 24
 368              		.cfi_offset 0, -24
 369              		.cfi_offset 1, -20
 370              		.cfi_offset 2, -16
 371              		.cfi_offset 3, -12
 372              		.cfi_offset 4, -8
 373              		.cfi_offset 14, -4
  72:math/pprz_geodetic_float.c **** void ned_of_ecef_vect_f(struct NedCoor_f* ned, struct LtpDef_f* def, struct EcefCoor_f* ecef) {
 374              		.loc 1 72 0
 375 0002 0446     		mov	r4, r0
  74:math/pprz_geodetic_float.c ****   enu_of_ecef_vect_f(&enu, def, ecef);
 376              		.loc 1 74 0
 377 0004 01A8     		add	r0, sp, #4
 378              	.LVL58:
 379 0006 FFF7FEFF 		bl	enu_of_ecef_vect_f
 380              	.LVL59:
  75:math/pprz_geodetic_float.c ****   ENU_OF_TO_NED(*ned, enu);
 381              		.loc 1 75 0
 382 000a 0399     		ldr	r1, [sp, #12]
 383 000c 029B     		ldr	r3, [sp, #8]	@ float
 384 000e 0198     		ldr	r0, [sp, #4]	@ float
 385 0010 01F10042 		add	r2, r1, #-2147483648
 386 0014 2360     		str	r3, [r4, #0]	@ float
 387 0016 6060     		str	r0, [r4, #4]	@ float
 388 0018 A260     		str	r2, [r4, #8]	@ float
  76:math/pprz_geodetic_float.c **** }
 389              		.loc 1 76 0
 390 001a 1FBD     		pop	{r0, r1, r2, r3, r4, pc}
 391              		.cfi_endproc
 392              	.LFE7:
 394              		.section	.text.ecef_of_enu_point_f,"ax",%progbits
 395              		.align	1
 396              		.global	ecef_of_enu_point_f
 397              		.thumb
 398              		.thumb_func
 400              	ecef_of_enu_point_f:
 401              	.LFB10:
  93:math/pprz_geodetic_float.c **** void ecef_of_enu_point_f(struct EcefCoor_f* ecef, struct LtpDef_f* def, struct EnuCoor_f* enu) {
 402              		.loc 1 93 0
 403              		.cfi_startproc
 404              		@ args = 0, pretend = 0, frame = 16
 405              		@ frame_needed = 0, uses_anonymous_args = 0
 406              	.LVL60:
 407 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 408              	.LCFI5:
 409              		.cfi_def_cfa_offset 36
 410              		.cfi_offset 4, -36
 411              		.cfi_offset 5, -32
 412              		.cfi_offset 6, -28
 413              		.cfi_offset 7, -24
 414              		.cfi_offset 8, -20
 415              		.cfi_offset 9, -16
 416              		.cfi_offset 10, -12
 417              		.cfi_offset 11, -8
 418              		.cfi_offset 14, -4
 419 0004 8146     		mov	r9, r0
 420 0006 85B0     		sub	sp, sp, #20
 421              	.LCFI6:
 422              		.cfi_def_cfa_offset 56
 112:math/pprz_geodetic_float.c ****   MAT33_VECT3_TRANSP_MUL(ecef_d, ltp_of_ecef_d, enu_d);
 423              		.loc 1 112 0
 424 0008 1068     		ldr	r0, [r2, #0]	@ float
 425              	.LVL61:
  93:math/pprz_geodetic_float.c **** void ecef_of_enu_point_f(struct EcefCoor_f* ecef, struct LtpDef_f* def, struct EnuCoor_f* enu) {
 426              		.loc 1 93 0
 427 000a 8846     		mov	r8, r1
 428              	.LVL62:
 429 000c 1446     		mov	r4, r2
 112:math/pprz_geodetic_float.c ****   MAT33_VECT3_TRANSP_MUL(ecef_d, ltp_of_ecef_d, enu_d);
 430              		.loc 1 112 0
 431 000e FFF7FEFF 		bl	__aeabi_f2d
 432              	.LVL63:
 433 0012 0646     		mov	r6, r0
 434 0014 6068     		ldr	r0, [r4, #4]	@ float
 435              	.LVL64:
 436 0016 0F46     		mov	r7, r1
 437 0018 FFF7FEFF 		bl	__aeabi_f2d
 438              	.LVL65:
 439 001c 8246     		mov	sl, r0
 440 001e A068     		ldr	r0, [r4, #8]	@ float
 441              	.LVL66:
 442 0020 8B46     		mov	fp, r1
 443 0022 FFF7FEFF 		bl	__aeabi_f2d
 444              	.LVL67:
 445 0026 CDE90001 		strd	r0, [sp]
 446              	.LVL68:
  97:math/pprz_geodetic_float.c ****   ltp_of_ecef_d.m[1] = (double) def->ltp_of_ecef.m[1];
 447              		.loc 1 97 0
 448 002a D8F81C00 		ldr	r0, [r8, #28]	@ float
 449              	.LVL69:
 450 002e FFF7FEFF 		bl	__aeabi_f2d
 451              	.LVL70:
 112:math/pprz_geodetic_float.c ****   MAT33_VECT3_TRANSP_MUL(ecef_d, ltp_of_ecef_d, enu_d);
 452              		.loc 1 112 0
 453 0032 3246     		mov	r2, r6
 454 0034 3B46     		mov	r3, r7
 455 0036 FFF7FEFF 		bl	__aeabi_dmul
 456              	.LVL71:
 457 003a 0446     		mov	r4, r0
 458              	.LVL72:
 100:math/pprz_geodetic_float.c ****   ltp_of_ecef_d.m[4] = (double) def->ltp_of_ecef.m[4];
 459              		.loc 1 100 0
 460 003c D8F82800 		ldr	r0, [r8, #40]	@ float
 112:math/pprz_geodetic_float.c ****   MAT33_VECT3_TRANSP_MUL(ecef_d, ltp_of_ecef_d, enu_d);
 461              		.loc 1 112 0
 462 0040 0D46     		mov	r5, r1
 100:math/pprz_geodetic_float.c ****   ltp_of_ecef_d.m[4] = (double) def->ltp_of_ecef.m[4];
 463              		.loc 1 100 0
 464 0042 FFF7FEFF 		bl	__aeabi_f2d
 465              	.LVL73:
 112:math/pprz_geodetic_float.c ****   MAT33_VECT3_TRANSP_MUL(ecef_d, ltp_of_ecef_d, enu_d);
 466              		.loc 1 112 0
 467 0046 5246     		mov	r2, sl
 468 0048 5B46     		mov	r3, fp
 469 004a FFF7FEFF 		bl	__aeabi_dmul
 470              	.LVL74:
 471 004e 0246     		mov	r2, r0
 472 0050 0B46     		mov	r3, r1
 473 0052 2046     		mov	r0, r4
 474 0054 2946     		mov	r1, r5
 475 0056 FFF7FEFF 		bl	__aeabi_dadd
 476              	.LVL75:
 477 005a 0446     		mov	r4, r0
 103:math/pprz_geodetic_float.c ****   ltp_of_ecef_d.m[7] = (double) def->ltp_of_ecef.m[7];
 478              		.loc 1 103 0
 479 005c D8F83400 		ldr	r0, [r8, #52]	@ float
 112:math/pprz_geodetic_float.c ****   MAT33_VECT3_TRANSP_MUL(ecef_d, ltp_of_ecef_d, enu_d);
 480              		.loc 1 112 0
 481 0060 0D46     		mov	r5, r1
 103:math/pprz_geodetic_float.c ****   ltp_of_ecef_d.m[7] = (double) def->ltp_of_ecef.m[7];
 482              		.loc 1 103 0
 483 0062 FFF7FEFF 		bl	__aeabi_f2d
 484              	.LVL76:
 112:math/pprz_geodetic_float.c ****   MAT33_VECT3_TRANSP_MUL(ecef_d, ltp_of_ecef_d, enu_d);
 485              		.loc 1 112 0
 486 0066 DDE90023 		ldrd	r2, [sp]
 487 006a FFF7FEFF 		bl	__aeabi_dmul
 488              	.LVL77:
 489 006e 0246     		mov	r2, r0
 490 0070 0B46     		mov	r3, r1
 491 0072 2046     		mov	r0, r4
 492 0074 2946     		mov	r1, r5
 493 0076 FFF7FEFF 		bl	__aeabi_dadd
 494              	.LVL78:
 495 007a CDE90201 		strd	r0, [sp, #8]
 496              	.LVL79:
  98:math/pprz_geodetic_float.c ****   ltp_of_ecef_d.m[2] = (double) def->ltp_of_ecef.m[2];
 497              		.loc 1 98 0
 498 007e D8F82000 		ldr	r0, [r8, #32]	@ float
 499              	.LVL80:
 500 0082 FFF7FEFF 		bl	__aeabi_f2d
 501              	.LVL81:
 112:math/pprz_geodetic_float.c ****   MAT33_VECT3_TRANSP_MUL(ecef_d, ltp_of_ecef_d, enu_d);
 502              		.loc 1 112 0
 503 0086 3246     		mov	r2, r6
 504 0088 3B46     		mov	r3, r7
 505 008a FFF7FEFF 		bl	__aeabi_dmul
 506              	.LVL82:
 507 008e 0446     		mov	r4, r0
 101:math/pprz_geodetic_float.c ****   ltp_of_ecef_d.m[5] = (double) def->ltp_of_ecef.m[5];
 508              		.loc 1 101 0
 509 0090 D8F82C00 		ldr	r0, [r8, #44]	@ float
 112:math/pprz_geodetic_float.c ****   MAT33_VECT3_TRANSP_MUL(ecef_d, ltp_of_ecef_d, enu_d);
 510              		.loc 1 112 0
 511 0094 0D46     		mov	r5, r1
 101:math/pprz_geodetic_float.c ****   ltp_of_ecef_d.m[5] = (double) def->ltp_of_ecef.m[5];
 512              		.loc 1 101 0
 513 0096 FFF7FEFF 		bl	__aeabi_f2d
 514              	.LVL83:
 112:math/pprz_geodetic_float.c ****   MAT33_VECT3_TRANSP_MUL(ecef_d, ltp_of_ecef_d, enu_d);
 515              		.loc 1 112 0
 516 009a 5246     		mov	r2, sl
 517 009c 5B46     		mov	r3, fp
 518 009e FFF7FEFF 		bl	__aeabi_dmul
 519              	.LVL84:
 520 00a2 0246     		mov	r2, r0
 521 00a4 0B46     		mov	r3, r1
 522 00a6 2046     		mov	r0, r4
 523 00a8 2946     		mov	r1, r5
 524 00aa FFF7FEFF 		bl	__aeabi_dadd
 525              	.LVL85:
 526 00ae 0446     		mov	r4, r0
 104:math/pprz_geodetic_float.c ****   ltp_of_ecef_d.m[8] = (double) def->ltp_of_ecef.m[8];
 527              		.loc 1 104 0
 528 00b0 D8F83800 		ldr	r0, [r8, #56]	@ float
 112:math/pprz_geodetic_float.c ****   MAT33_VECT3_TRANSP_MUL(ecef_d, ltp_of_ecef_d, enu_d);
 529              		.loc 1 112 0
 530 00b4 0D46     		mov	r5, r1
 104:math/pprz_geodetic_float.c ****   ltp_of_ecef_d.m[8] = (double) def->ltp_of_ecef.m[8];
 531              		.loc 1 104 0
 532 00b6 FFF7FEFF 		bl	__aeabi_f2d
 533              	.LVL86:
 112:math/pprz_geodetic_float.c ****   MAT33_VECT3_TRANSP_MUL(ecef_d, ltp_of_ecef_d, enu_d);
 534              		.loc 1 112 0
 535 00ba DDE90023 		ldrd	r2, [sp]
 536 00be FFF7FEFF 		bl	__aeabi_dmul
 537              	.LVL87:
 538 00c2 0246     		mov	r2, r0
 539 00c4 0B46     		mov	r3, r1
 540 00c6 2046     		mov	r0, r4
 541 00c8 2946     		mov	r1, r5
 542 00ca FFF7FEFF 		bl	__aeabi_dadd
 543              	.LVL88:
 544 00ce 0446     		mov	r4, r0
  96:math/pprz_geodetic_float.c ****   ltp_of_ecef_d.m[0] = (double) def->ltp_of_ecef.m[0];
 545              		.loc 1 96 0
 546 00d0 D8F81800 		ldr	r0, [r8, #24]	@ float
 547              	.LVL89:
 112:math/pprz_geodetic_float.c ****   MAT33_VECT3_TRANSP_MUL(ecef_d, ltp_of_ecef_d, enu_d);
 548              		.loc 1 112 0
 549 00d4 0D46     		mov	r5, r1
 550              	.LVL90:
  96:math/pprz_geodetic_float.c ****   ltp_of_ecef_d.m[0] = (double) def->ltp_of_ecef.m[0];
 551              		.loc 1 96 0
 552 00d6 FFF7FEFF 		bl	__aeabi_f2d
 553              	.LVL91:
 112:math/pprz_geodetic_float.c ****   MAT33_VECT3_TRANSP_MUL(ecef_d, ltp_of_ecef_d, enu_d);
 554              		.loc 1 112 0
 555 00da 3246     		mov	r2, r6
 556 00dc 3B46     		mov	r3, r7
 557 00de FFF7FEFF 		bl	__aeabi_dmul
 558              	.LVL92:
 559 00e2 0646     		mov	r6, r0
  99:math/pprz_geodetic_float.c ****   ltp_of_ecef_d.m[3] = (double) def->ltp_of_ecef.m[3];
 560              		.loc 1 99 0
 561 00e4 D8F82400 		ldr	r0, [r8, #36]	@ float
 562              	.LVL93:
 112:math/pprz_geodetic_float.c ****   MAT33_VECT3_TRANSP_MUL(ecef_d, ltp_of_ecef_d, enu_d);
 563              		.loc 1 112 0
 564 00e8 0F46     		mov	r7, r1
  99:math/pprz_geodetic_float.c ****   ltp_of_ecef_d.m[3] = (double) def->ltp_of_ecef.m[3];
 565              		.loc 1 99 0
 566 00ea FFF7FEFF 		bl	__aeabi_f2d
 567              	.LVL94:
 112:math/pprz_geodetic_float.c ****   MAT33_VECT3_TRANSP_MUL(ecef_d, ltp_of_ecef_d, enu_d);
 568              		.loc 1 112 0
 569 00ee 5246     		mov	r2, sl
 570 00f0 5B46     		mov	r3, fp
 571 00f2 FFF7FEFF 		bl	__aeabi_dmul
 572              	.LVL95:
 573 00f6 0246     		mov	r2, r0
 574 00f8 0B46     		mov	r3, r1
 575 00fa 3046     		mov	r0, r6
 576 00fc 3946     		mov	r1, r7
 577 00fe FFF7FEFF 		bl	__aeabi_dadd
 578              	.LVL96:
 579 0102 0646     		mov	r6, r0
 102:math/pprz_geodetic_float.c ****   ltp_of_ecef_d.m[6] = (double) def->ltp_of_ecef.m[6];
 580              		.loc 1 102 0
 581 0104 D8F83000 		ldr	r0, [r8, #48]	@ float
 112:math/pprz_geodetic_float.c ****   MAT33_VECT3_TRANSP_MUL(ecef_d, ltp_of_ecef_d, enu_d);
 582              		.loc 1 112 0
 583 0108 0F46     		mov	r7, r1
 102:math/pprz_geodetic_float.c ****   ltp_of_ecef_d.m[6] = (double) def->ltp_of_ecef.m[6];
 584              		.loc 1 102 0
 585 010a FFF7FEFF 		bl	__aeabi_f2d
 586              	.LVL97:
 112:math/pprz_geodetic_float.c ****   MAT33_VECT3_TRANSP_MUL(ecef_d, ltp_of_ecef_d, enu_d);
 587              		.loc 1 112 0
 588 010e DDE90023 		ldrd	r2, [sp]
 589 0112 FFF7FEFF 		bl	__aeabi_dmul
 590              	.LVL98:
 591 0116 0246     		mov	r2, r0
 592 0118 0B46     		mov	r3, r1
 593 011a 3046     		mov	r0, r6
 594 011c 3946     		mov	r1, r7
 595 011e FFF7FEFF 		bl	__aeabi_dadd
 596              	.LVL99:
 115:math/pprz_geodetic_float.c ****   ecef->x = (float) ecef_d.x + def->ecef.x;
 597              		.loc 1 115 0
 598 0122 FFF7FEFF 		bl	__aeabi_d2f
 599              	.LVL100:
 600 0126 D8F80010 		ldr	r1, [r8, #0]	@ float
 601 012a FFF7FEFF 		bl	__aeabi_fadd
 602              	.LVL101:
 603 012e C9F80000 		str	r0, [r9, #0]	@ float
 116:math/pprz_geodetic_float.c ****   ecef->y = (float) ecef_d.y + def->ecef.y;
 604              		.loc 1 116 0
 605 0132 DDE90201 		ldrd	r0, [sp, #8]
 606 0136 FFF7FEFF 		bl	__aeabi_d2f
 607              	.LVL102:
 608 013a D8F80410 		ldr	r1, [r8, #4]	@ float
 609 013e FFF7FEFF 		bl	__aeabi_fadd
 610              	.LVL103:
 117:math/pprz_geodetic_float.c ****   ecef->z = (float) ecef_d.z + def->ecef.z;
 611              		.loc 1 117 0
 612 0142 2946     		mov	r1, r5
 116:math/pprz_geodetic_float.c ****   ecef->y = (float) ecef_d.y + def->ecef.y;
 613              		.loc 1 116 0
 614 0144 C9F80400 		str	r0, [r9, #4]	@ float
 117:math/pprz_geodetic_float.c ****   ecef->z = (float) ecef_d.z + def->ecef.z;
 615              		.loc 1 117 0
 616 0148 2046     		mov	r0, r4
 617 014a FFF7FEFF 		bl	__aeabi_d2f
 618              	.LVL104:
 619 014e D8F80810 		ldr	r1, [r8, #8]	@ float
 620 0152 FFF7FEFF 		bl	__aeabi_fadd
 621              	.LVL105:
 622 0156 C9F80800 		str	r0, [r9, #8]	@ float
 118:math/pprz_geodetic_float.c **** }
 623              		.loc 1 118 0
 624 015a 05B0     		add	sp, sp, #20
 625 015c BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 626              		.cfi_endproc
 627              	.LFE10:
 629              		.section	.text.ecef_of_ned_point_f,"ax",%progbits
 630              		.align	1
 631              		.global	ecef_of_ned_point_f
 632              		.thumb
 633              		.thumb_func
 635              	ecef_of_ned_point_f:
 636              	.LFB11:
 120:math/pprz_geodetic_float.c **** void ecef_of_ned_point_f(struct EcefCoor_f* ecef, struct LtpDef_f* def, struct NedCoor_f* ned) {
 637              		.loc 1 120 0
 638              		.cfi_startproc
 639              		@ args = 0, pretend = 0, frame = 16
 640              		@ frame_needed = 0, uses_anonymous_args = 0
 641              	.LVL106:
 642 0000 1FB5     		push	{r0, r1, r2, r3, r4, lr}
 643              	.LCFI7:
 644              		.cfi_def_cfa_offset 24
 645              		.cfi_offset 0, -24
 646              		.cfi_offset 1, -20
 647              		.cfi_offset 2, -16
 648              		.cfi_offset 3, -12
 649              		.cfi_offset 4, -8
 650              		.cfi_offset 14, -4
 122:math/pprz_geodetic_float.c ****   ENU_OF_TO_NED(enu, *ned);
 651              		.loc 1 122 0
 652 0002 5368     		ldr	r3, [r2, #4]	@ float
 653 0004 0193     		str	r3, [sp, #4]	@ float
 654 0006 1368     		ldr	r3, [r2, #0]	@ float
 655 0008 9268     		ldr	r2, [r2, #8]
 656              	.LVL107:
 657 000a 0293     		str	r3, [sp, #8]	@ float
 658 000c 02F10043 		add	r3, r2, #-2147483648
 123:math/pprz_geodetic_float.c ****   ecef_of_enu_point_f(ecef, def, &enu);
 659              		.loc 1 123 0
 660 0010 01AA     		add	r2, sp, #4
 122:math/pprz_geodetic_float.c ****   ENU_OF_TO_NED(enu, *ned);
 661              		.loc 1 122 0
 662 0012 0393     		str	r3, [sp, #12]	@ float
 123:math/pprz_geodetic_float.c ****   ecef_of_enu_point_f(ecef, def, &enu);
 663              		.loc 1 123 0
 664 0014 FFF7FEFF 		bl	ecef_of_enu_point_f
 665              	.LVL108:
 124:math/pprz_geodetic_float.c **** }
 666              		.loc 1 124 0
 667 0018 05B0     		add	sp, sp, #20
 668 001a 00BD     		pop	{pc}
 669              		.cfi_endproc
 670              	.LFE11:
 672              		.section	.text.ecef_of_enu_vect_f,"ax",%progbits
 673              		.align	1
 674              		.global	ecef_of_enu_vect_f
 675              		.thumb
 676              		.thumb_func
 678              	ecef_of_enu_vect_f:
 679              	.LFB12:
 126:math/pprz_geodetic_float.c **** void ecef_of_enu_vect_f(struct EcefCoor_f* ecef, struct LtpDef_f* def, struct EnuCoor_f* enu) {
 680              		.loc 1 126 0
 681              		.cfi_startproc
 682              		@ args = 0, pretend = 0, frame = 16
 683              		@ frame_needed = 0, uses_anonymous_args = 0
 684              	.LVL109:
 685 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 686              	.LCFI8:
 687              		.cfi_def_cfa_offset 36
 688              		.cfi_offset 4, -36
 689              		.cfi_offset 5, -32
 690              		.cfi_offset 6, -28
 691              		.cfi_offset 7, -24
 692              		.cfi_offset 8, -20
 693              		.cfi_offset 9, -16
 694              		.cfi_offset 10, -12
 695              		.cfi_offset 11, -8
 696              		.cfi_offset 14, -4
 697 0004 8146     		mov	r9, r0
 698 0006 85B0     		sub	sp, sp, #20
 699              	.LCFI9:
 700              		.cfi_def_cfa_offset 56
 145:math/pprz_geodetic_float.c ****   MAT33_VECT3_TRANSP_MUL(ecef_d, ltp_of_ecef_d, enu_d);
 701              		.loc 1 145 0
 702 0008 1068     		ldr	r0, [r2, #0]	@ float
 703              	.LVL110:
 126:math/pprz_geodetic_float.c **** void ecef_of_enu_vect_f(struct EcefCoor_f* ecef, struct LtpDef_f* def, struct EnuCoor_f* enu) {
 704              		.loc 1 126 0
 705 000a 8846     		mov	r8, r1
 706              	.LVL111:
 707 000c 1446     		mov	r4, r2
 145:math/pprz_geodetic_float.c ****   MAT33_VECT3_TRANSP_MUL(ecef_d, ltp_of_ecef_d, enu_d);
 708              		.loc 1 145 0
 709 000e FFF7FEFF 		bl	__aeabi_f2d
 710              	.LVL112:
 711 0012 0646     		mov	r6, r0
 712 0014 6068     		ldr	r0, [r4, #4]	@ float
 713              	.LVL113:
 714 0016 0F46     		mov	r7, r1
 715 0018 FFF7FEFF 		bl	__aeabi_f2d
 716              	.LVL114:
 717 001c 8246     		mov	sl, r0
 718 001e A068     		ldr	r0, [r4, #8]	@ float
 719              	.LVL115:
 720 0020 8B46     		mov	fp, r1
 721 0022 FFF7FEFF 		bl	__aeabi_f2d
 722              	.LVL116:
 723 0026 CDE90001 		strd	r0, [sp]
 724              	.LVL117:
 130:math/pprz_geodetic_float.c ****   ltp_of_ecef_d.m[1] = (double) def->ltp_of_ecef.m[1];
 725              		.loc 1 130 0
 726 002a D8F81C00 		ldr	r0, [r8, #28]	@ float
 727              	.LVL118:
 728 002e FFF7FEFF 		bl	__aeabi_f2d
 729              	.LVL119:
 145:math/pprz_geodetic_float.c ****   MAT33_VECT3_TRANSP_MUL(ecef_d, ltp_of_ecef_d, enu_d);
 730              		.loc 1 145 0
 731 0032 3246     		mov	r2, r6
 732 0034 3B46     		mov	r3, r7
 733 0036 FFF7FEFF 		bl	__aeabi_dmul
 734              	.LVL120:
 735 003a 0446     		mov	r4, r0
 736              	.LVL121:
 133:math/pprz_geodetic_float.c ****   ltp_of_ecef_d.m[4] = (double) def->ltp_of_ecef.m[4];
 737              		.loc 1 133 0
 738 003c D8F82800 		ldr	r0, [r8, #40]	@ float
 145:math/pprz_geodetic_float.c ****   MAT33_VECT3_TRANSP_MUL(ecef_d, ltp_of_ecef_d, enu_d);
 739              		.loc 1 145 0
 740 0040 0D46     		mov	r5, r1
 133:math/pprz_geodetic_float.c ****   ltp_of_ecef_d.m[4] = (double) def->ltp_of_ecef.m[4];
 741              		.loc 1 133 0
 742 0042 FFF7FEFF 		bl	__aeabi_f2d
 743              	.LVL122:
 145:math/pprz_geodetic_float.c ****   MAT33_VECT3_TRANSP_MUL(ecef_d, ltp_of_ecef_d, enu_d);
 744              		.loc 1 145 0
 745 0046 5246     		mov	r2, sl
 746 0048 5B46     		mov	r3, fp
 747 004a FFF7FEFF 		bl	__aeabi_dmul
 748              	.LVL123:
 749 004e 0246     		mov	r2, r0
 750 0050 0B46     		mov	r3, r1
 751 0052 2046     		mov	r0, r4
 752 0054 2946     		mov	r1, r5
 753 0056 FFF7FEFF 		bl	__aeabi_dadd
 754              	.LVL124:
 755 005a 0446     		mov	r4, r0
 136:math/pprz_geodetic_float.c ****   ltp_of_ecef_d.m[7] = (double) def->ltp_of_ecef.m[7];
 756              		.loc 1 136 0
 757 005c D8F83400 		ldr	r0, [r8, #52]	@ float
 145:math/pprz_geodetic_float.c ****   MAT33_VECT3_TRANSP_MUL(ecef_d, ltp_of_ecef_d, enu_d);
 758              		.loc 1 145 0
 759 0060 0D46     		mov	r5, r1
 136:math/pprz_geodetic_float.c ****   ltp_of_ecef_d.m[7] = (double) def->ltp_of_ecef.m[7];
 760              		.loc 1 136 0
 761 0062 FFF7FEFF 		bl	__aeabi_f2d
 762              	.LVL125:
 145:math/pprz_geodetic_float.c ****   MAT33_VECT3_TRANSP_MUL(ecef_d, ltp_of_ecef_d, enu_d);
 763              		.loc 1 145 0
 764 0066 DDE90023 		ldrd	r2, [sp]
 765 006a FFF7FEFF 		bl	__aeabi_dmul
 766              	.LVL126:
 767 006e 0246     		mov	r2, r0
 768 0070 0B46     		mov	r3, r1
 769 0072 2046     		mov	r0, r4
 770 0074 2946     		mov	r1, r5
 771 0076 FFF7FEFF 		bl	__aeabi_dadd
 772              	.LVL127:
 773 007a CDE90201 		strd	r0, [sp, #8]
 774              	.LVL128:
 131:math/pprz_geodetic_float.c ****   ltp_of_ecef_d.m[2] = (double) def->ltp_of_ecef.m[2];
 775              		.loc 1 131 0
 776 007e D8F82000 		ldr	r0, [r8, #32]	@ float
 777              	.LVL129:
 778 0082 FFF7FEFF 		bl	__aeabi_f2d
 779              	.LVL130:
 145:math/pprz_geodetic_float.c ****   MAT33_VECT3_TRANSP_MUL(ecef_d, ltp_of_ecef_d, enu_d);
 780              		.loc 1 145 0
 781 0086 3246     		mov	r2, r6
 782 0088 3B46     		mov	r3, r7
 783 008a FFF7FEFF 		bl	__aeabi_dmul
 784              	.LVL131:
 785 008e 0446     		mov	r4, r0
 134:math/pprz_geodetic_float.c ****   ltp_of_ecef_d.m[5] = (double) def->ltp_of_ecef.m[5];
 786              		.loc 1 134 0
 787 0090 D8F82C00 		ldr	r0, [r8, #44]	@ float
 145:math/pprz_geodetic_float.c ****   MAT33_VECT3_TRANSP_MUL(ecef_d, ltp_of_ecef_d, enu_d);
 788              		.loc 1 145 0
 789 0094 0D46     		mov	r5, r1
 134:math/pprz_geodetic_float.c ****   ltp_of_ecef_d.m[5] = (double) def->ltp_of_ecef.m[5];
 790              		.loc 1 134 0
 791 0096 FFF7FEFF 		bl	__aeabi_f2d
 792              	.LVL132:
 145:math/pprz_geodetic_float.c ****   MAT33_VECT3_TRANSP_MUL(ecef_d, ltp_of_ecef_d, enu_d);
 793              		.loc 1 145 0
 794 009a 5246     		mov	r2, sl
 795 009c 5B46     		mov	r3, fp
 796 009e FFF7FEFF 		bl	__aeabi_dmul
 797              	.LVL133:
 798 00a2 0246     		mov	r2, r0
 799 00a4 0B46     		mov	r3, r1
 800 00a6 2046     		mov	r0, r4
 801 00a8 2946     		mov	r1, r5
 802 00aa FFF7FEFF 		bl	__aeabi_dadd
 803              	.LVL134:
 804 00ae 0446     		mov	r4, r0
 137:math/pprz_geodetic_float.c ****   ltp_of_ecef_d.m[8] = (double) def->ltp_of_ecef.m[8];
 805              		.loc 1 137 0
 806 00b0 D8F83800 		ldr	r0, [r8, #56]	@ float
 145:math/pprz_geodetic_float.c ****   MAT33_VECT3_TRANSP_MUL(ecef_d, ltp_of_ecef_d, enu_d);
 807              		.loc 1 145 0
 808 00b4 0D46     		mov	r5, r1
 137:math/pprz_geodetic_float.c ****   ltp_of_ecef_d.m[8] = (double) def->ltp_of_ecef.m[8];
 809              		.loc 1 137 0
 810 00b6 FFF7FEFF 		bl	__aeabi_f2d
 811              	.LVL135:
 145:math/pprz_geodetic_float.c ****   MAT33_VECT3_TRANSP_MUL(ecef_d, ltp_of_ecef_d, enu_d);
 812              		.loc 1 145 0
 813 00ba DDE90023 		ldrd	r2, [sp]
 814 00be FFF7FEFF 		bl	__aeabi_dmul
 815              	.LVL136:
 816 00c2 0246     		mov	r2, r0
 817 00c4 0B46     		mov	r3, r1
 818 00c6 2046     		mov	r0, r4
 819 00c8 2946     		mov	r1, r5
 820 00ca FFF7FEFF 		bl	__aeabi_dadd
 821              	.LVL137:
 822 00ce 0446     		mov	r4, r0
 129:math/pprz_geodetic_float.c ****   ltp_of_ecef_d.m[0] = (double) def->ltp_of_ecef.m[0];
 823              		.loc 1 129 0
 824 00d0 D8F81800 		ldr	r0, [r8, #24]	@ float
 825              	.LVL138:
 145:math/pprz_geodetic_float.c ****   MAT33_VECT3_TRANSP_MUL(ecef_d, ltp_of_ecef_d, enu_d);
 826              		.loc 1 145 0
 827 00d4 0D46     		mov	r5, r1
 828              	.LVL139:
 129:math/pprz_geodetic_float.c ****   ltp_of_ecef_d.m[0] = (double) def->ltp_of_ecef.m[0];
 829              		.loc 1 129 0
 830 00d6 FFF7FEFF 		bl	__aeabi_f2d
 831              	.LVL140:
 145:math/pprz_geodetic_float.c ****   MAT33_VECT3_TRANSP_MUL(ecef_d, ltp_of_ecef_d, enu_d);
 832              		.loc 1 145 0
 833 00da 3246     		mov	r2, r6
 834 00dc 3B46     		mov	r3, r7
 835 00de FFF7FEFF 		bl	__aeabi_dmul
 836              	.LVL141:
 837 00e2 0646     		mov	r6, r0
 132:math/pprz_geodetic_float.c ****   ltp_of_ecef_d.m[3] = (double) def->ltp_of_ecef.m[3];
 838              		.loc 1 132 0
 839 00e4 D8F82400 		ldr	r0, [r8, #36]	@ float
 840              	.LVL142:
 145:math/pprz_geodetic_float.c ****   MAT33_VECT3_TRANSP_MUL(ecef_d, ltp_of_ecef_d, enu_d);
 841              		.loc 1 145 0
 842 00e8 0F46     		mov	r7, r1
 132:math/pprz_geodetic_float.c ****   ltp_of_ecef_d.m[3] = (double) def->ltp_of_ecef.m[3];
 843              		.loc 1 132 0
 844 00ea FFF7FEFF 		bl	__aeabi_f2d
 845              	.LVL143:
 145:math/pprz_geodetic_float.c ****   MAT33_VECT3_TRANSP_MUL(ecef_d, ltp_of_ecef_d, enu_d);
 846              		.loc 1 145 0
 847 00ee 5246     		mov	r2, sl
 848 00f0 5B46     		mov	r3, fp
 849 00f2 FFF7FEFF 		bl	__aeabi_dmul
 850              	.LVL144:
 851 00f6 0246     		mov	r2, r0
 852 00f8 0B46     		mov	r3, r1
 853 00fa 3046     		mov	r0, r6
 854 00fc 3946     		mov	r1, r7
 855 00fe FFF7FEFF 		bl	__aeabi_dadd
 856              	.LVL145:
 857 0102 0646     		mov	r6, r0
 135:math/pprz_geodetic_float.c ****   ltp_of_ecef_d.m[6] = (double) def->ltp_of_ecef.m[6];
 858              		.loc 1 135 0
 859 0104 D8F83000 		ldr	r0, [r8, #48]	@ float
 145:math/pprz_geodetic_float.c ****   MAT33_VECT3_TRANSP_MUL(ecef_d, ltp_of_ecef_d, enu_d);
 860              		.loc 1 145 0
 861 0108 0F46     		mov	r7, r1
 135:math/pprz_geodetic_float.c ****   ltp_of_ecef_d.m[6] = (double) def->ltp_of_ecef.m[6];
 862              		.loc 1 135 0
 863 010a FFF7FEFF 		bl	__aeabi_f2d
 864              	.LVL146:
 145:math/pprz_geodetic_float.c ****   MAT33_VECT3_TRANSP_MUL(ecef_d, ltp_of_ecef_d, enu_d);
 865              		.loc 1 145 0
 866 010e DDE90023 		ldrd	r2, [sp]
 867 0112 FFF7FEFF 		bl	__aeabi_dmul
 868              	.LVL147:
 869 0116 0246     		mov	r2, r0
 870 0118 0B46     		mov	r3, r1
 871 011a 3046     		mov	r0, r6
 872 011c 3946     		mov	r1, r7
 873 011e FFF7FEFF 		bl	__aeabi_dadd
 874              	.LVL148:
 148:math/pprz_geodetic_float.c ****   ecef->x = (float) ecef_d.x;
 875              		.loc 1 148 0
 876 0122 FFF7FEFF 		bl	__aeabi_d2f
 877              	.LVL149:
 878 0126 C9F80000 		str	r0, [r9, #0]	@ float
 149:math/pprz_geodetic_float.c ****   ecef->y = (float) ecef_d.y;
 879              		.loc 1 149 0
 880 012a DDE90201 		ldrd	r0, [sp, #8]
 881 012e FFF7FEFF 		bl	__aeabi_d2f
 882              	.LVL150:
 150:math/pprz_geodetic_float.c ****   ecef->z = (float) ecef_d.z;
 883              		.loc 1 150 0
 884 0132 2946     		mov	r1, r5
 149:math/pprz_geodetic_float.c ****   ecef->y = (float) ecef_d.y;
 885              		.loc 1 149 0
 886 0134 C9F80400 		str	r0, [r9, #4]	@ float
 150:math/pprz_geodetic_float.c ****   ecef->z = (float) ecef_d.z;
 887              		.loc 1 150 0
 888 0138 2046     		mov	r0, r4
 889 013a FFF7FEFF 		bl	__aeabi_d2f
 890              	.LVL151:
 891 013e C9F80800 		str	r0, [r9, #8]	@ float
 151:math/pprz_geodetic_float.c **** }
 892              		.loc 1 151 0
 893 0142 05B0     		add	sp, sp, #20
 894 0144 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 895              		.cfi_endproc
 896              	.LFE12:
 898              		.section	.text.ecef_of_ned_vect_f,"ax",%progbits
 899              		.align	1
 900              		.global	ecef_of_ned_vect_f
 901              		.thumb
 902              		.thumb_func
 904              	ecef_of_ned_vect_f:
 905              	.LFB13:
 153:math/pprz_geodetic_float.c **** void ecef_of_ned_vect_f(struct EcefCoor_f* ecef, struct LtpDef_f* def, struct NedCoor_f* ned) {
 906              		.loc 1 153 0
 907              		.cfi_startproc
 908              		@ args = 0, pretend = 0, frame = 16
 909              		@ frame_needed = 0, uses_anonymous_args = 0
 910              	.LVL152:
 911 0000 1FB5     		push	{r0, r1, r2, r3, r4, lr}
 912              	.LCFI10:
 913              		.cfi_def_cfa_offset 24
 914              		.cfi_offset 0, -24
 915              		.cfi_offset 1, -20
 916              		.cfi_offset 2, -16
 917              		.cfi_offset 3, -12
 918              		.cfi_offset 4, -8
 919              		.cfi_offset 14, -4
 155:math/pprz_geodetic_float.c ****   ENU_OF_TO_NED(enu, *ned);
 920              		.loc 1 155 0
 921 0002 5368     		ldr	r3, [r2, #4]	@ float
 922 0004 0193     		str	r3, [sp, #4]	@ float
 923 0006 1368     		ldr	r3, [r2, #0]	@ float
 924 0008 9268     		ldr	r2, [r2, #8]
 925              	.LVL153:
 926 000a 0293     		str	r3, [sp, #8]	@ float
 927 000c 02F10043 		add	r3, r2, #-2147483648
 156:math/pprz_geodetic_float.c ****   ecef_of_enu_vect_f(ecef, def, &enu);
 928              		.loc 1 156 0
 929 0010 01AA     		add	r2, sp, #4
 155:math/pprz_geodetic_float.c ****   ENU_OF_TO_NED(enu, *ned);
 930              		.loc 1 155 0
 931 0012 0393     		str	r3, [sp, #12]	@ float
 156:math/pprz_geodetic_float.c ****   ecef_of_enu_vect_f(ecef, def, &enu);
 932              		.loc 1 156 0
 933 0014 FFF7FEFF 		bl	ecef_of_enu_vect_f
 934              	.LVL154:
 157:math/pprz_geodetic_float.c **** }
 935              		.loc 1 157 0
 936 0018 05B0     		add	sp, sp, #20
 937 001a 00BD     		pop	{pc}
 938              		.cfi_endproc
 939              	.LFE13:
 941              		.global	__aeabi_fdiv
 942              		.section	.text.lla_of_ecef_f,"ax",%progbits
 943              		.align	1
 944              		.global	lla_of_ecef_f
 945              		.thumb
 946              		.thumb_func
 948              	lla_of_ecef_f:
 949              	.LFB14:
 164:math/pprz_geodetic_float.c **** void lla_of_ecef_f(struct LlaCoor_f* out, struct EcefCoor_f* in) {
 950              		.loc 1 164 0
 951              		.cfi_startproc
 952              		@ args = 0, pretend = 0, frame = 16
 953              		@ frame_needed = 0, uses_anonymous_args = 0
 954              	.LVL155:
 955 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 956              	.LCFI11:
 957              		.cfi_def_cfa_offset 36
 958              		.cfi_offset 4, -36
 959              		.cfi_offset 5, -32
 960              		.cfi_offset 6, -28
 961              		.cfi_offset 7, -24
 962              		.cfi_offset 8, -20
 963              		.cfi_offset 9, -16
 964              		.cfi_offset 10, -12
 965              		.cfi_offset 11, -8
 966              		.cfi_offset 14, -4
 967 0004 8046     		mov	r8, r0
 177:math/pprz_geodetic_float.c ****   const float z2 = in->z*in->z;
 968              		.loc 1 177 0
 969 0006 8868     		ldr	r0, [r1, #8]	@ float
 970              	.LVL156:
 164:math/pprz_geodetic_float.c **** void lla_of_ecef_f(struct LlaCoor_f* out, struct EcefCoor_f* in) {
 971              		.loc 1 164 0
 972 0008 85B0     		sub	sp, sp, #20
 973              	.LCFI12:
 974              		.cfi_def_cfa_offset 56
 164:math/pprz_geodetic_float.c **** void lla_of_ecef_f(struct LlaCoor_f* out, struct EcefCoor_f* in) {
 975              		.loc 1 164 0
 976 000a 0C46     		mov	r4, r1
 177:math/pprz_geodetic_float.c ****   const float z2 = in->z*in->z;
 977              		.loc 1 177 0
 978 000c 0146     		mov	r1, r0
 979              	.LVL157:
 980 000e FFF7FEFF 		bl	__aeabi_fmul
 981              	.LVL158:
 982 0012 0646     		mov	r6, r0
 983              	.LVL159:
 178:math/pprz_geodetic_float.c ****   const float r2 = in->x*in->x+in->y*in->y;
 984              		.loc 1 178 0
 985 0014 2068     		ldr	r0, [r4, #0]	@ float
 986              	.LVL160:
 987 0016 6768     		ldr	r7, [r4, #4]	@ float
 988 0018 0146     		mov	r1, r0
 989 001a FFF7FEFF 		bl	__aeabi_fmul
 990              	.LVL161:
 991 001e 3946     		mov	r1, r7
 992 0020 0546     		mov	r5, r0
 993 0022 3846     		mov	r0, r7
 994 0024 FFF7FEFF 		bl	__aeabi_fmul
 995              	.LVL162:
 996 0028 0146     		mov	r1, r0
 997 002a 2846     		mov	r0, r5
 998 002c FFF7FEFF 		bl	__aeabi_fadd
 999              	.LVL163:
 1000 0030 8246     		mov	sl, r0
 1001              	.LVL164:
 179:math/pprz_geodetic_float.c ****   const float r = sqrtf(r2);
 1002              		.loc 1 179 0
 1003 0032 FFF7FEFF 		bl	sqrtf
 1004              	.LVL165:
 1005 0036 8146     		mov	r9, r0
 1006              	.LVL166:
 180:math/pprz_geodetic_float.c ****   const float F = 54.*b2*z2;
 1007              		.loc 1 180 0
 1008 0038 3046     		mov	r0, r6
 1009              	.LVL167:
 1010 003a FFF7FEFF 		bl	__aeabi_f2d
 1011              	.LVL168:
 1012 003e 84A3     		adr	r3, .L13
 1013 0040 D3E90023 		ldrd	r2, [r3]
 1014 0044 FFF7FEFF 		bl	__aeabi_dmul
 1015              	.LVL169:
 1016 0048 FFF7FEFF 		bl	__aeabi_d2f
 1017              	.LVL170:
 181:math/pprz_geodetic_float.c ****   const float G = r2 + (1-e2)*z2 - e2*E2;
 1018              		.loc 1 181 0
 1019 004c 8249     		ldr	r1, .L13+8
 180:math/pprz_geodetic_float.c ****   const float F = 54.*b2*z2;
 1020              		.loc 1 180 0
 1021 004e 8346     		mov	fp, r0
 1022              	.LVL171:
 181:math/pprz_geodetic_float.c ****   const float G = r2 + (1-e2)*z2 - e2*E2;
 1023              		.loc 1 181 0
 1024 0050 3046     		mov	r0, r6
 1025              	.LVL172:
 1026 0052 FFF7FEFF 		bl	__aeabi_fmul
 1027              	.LVL173:
 1028 0056 0346     		mov	r3, r0
 1029 0058 1946     		mov	r1, r3
 1030 005a 5046     		mov	r0, sl
 1031 005c 0193     		str	r3, [sp, #4]
 1032 005e FFF7FEFF 		bl	__aeabi_fadd
 1033              	.LVL174:
 1034 0062 7E49     		ldr	r1, .L13+12
 1035 0064 FFF7FEFF 		bl	__aeabi_fsub
 1036              	.LVL175:
 182:math/pprz_geodetic_float.c ****   const float c = (e2*e2*F*r2)/(G*G*G);
 1037              		.loc 1 182 0
 1038 0068 7D49     		ldr	r1, .L13+16
 181:math/pprz_geodetic_float.c ****   const float G = r2 + (1-e2)*z2 - e2*E2;
 1039              		.loc 1 181 0
 1040 006a 0546     		mov	r5, r0
 1041              	.LVL176:
 182:math/pprz_geodetic_float.c ****   const float c = (e2*e2*F*r2)/(G*G*G);
 1042              		.loc 1 182 0
 1043 006c 5846     		mov	r0, fp
 1044              	.LVL177:
 1045 006e FFF7FEFF 		bl	__aeabi_fmul
 1046              	.LVL178:
 1047 0072 5146     		mov	r1, sl
 1048 0074 FFF7FEFF 		bl	__aeabi_fmul
 1049              	.LVL179:
 1050 0078 2946     		mov	r1, r5
 1051 007a 0746     		mov	r7, r0
 1052 007c 2846     		mov	r0, r5
 1053 007e FFF7FEFF 		bl	__aeabi_fmul
 1054              	.LVL180:
 1055 0082 2946     		mov	r1, r5
 1056 0084 FFF7FEFF 		bl	__aeabi_fmul
 1057              	.LVL181:
 1058 0088 0146     		mov	r1, r0
 1059 008a 3846     		mov	r0, r7
 1060 008c FFF7FEFF 		bl	__aeabi_fdiv
 1061              	.LVL182:
 183:math/pprz_geodetic_float.c ****   const float s = powf( (1 + c + sqrtf(c*c + 2*c)), 1./3.);
 1062              		.loc 1 183 0
 1063 0090 0146     		mov	r1, r0
 182:math/pprz_geodetic_float.c ****   const float c = (e2*e2*F*r2)/(G*G*G);
 1064              		.loc 1 182 0
 1065 0092 0746     		mov	r7, r0
 1066              	.LVL183:
 183:math/pprz_geodetic_float.c ****   const float s = powf( (1 + c + sqrtf(c*c + 2*c)), 1./3.);
 1067              		.loc 1 183 0
 1068 0094 FFF7FEFF 		bl	__aeabi_fmul
 1069              	.LVL184:
 1070 0098 3946     		mov	r1, r7
 1071 009a 0246     		mov	r2, r0
 1072 009c 3846     		mov	r0, r7
 1073 009e 0292     		str	r2, [sp, #8]
 1074 00a0 FFF7FEFF 		bl	__aeabi_fadd
 1075              	.LVL185:
 1076 00a4 0146     		mov	r1, r0
 1077 00a6 0298     		ldr	r0, [sp, #8]
 1078 00a8 FFF7FEFF 		bl	__aeabi_fadd
 1079              	.LVL186:
 1080 00ac FFF7FEFF 		bl	sqrtf
 1081              	.LVL187:
 1082 00b0 4FF07E51 		mov	r1, #1065353216
 1083 00b4 0346     		mov	r3, r0
 1084 00b6 3846     		mov	r0, r7
 1085 00b8 0293     		str	r3, [sp, #8]
 1086 00ba FFF7FEFF 		bl	__aeabi_fadd
 1087              	.LVL188:
 1088 00be 0299     		ldr	r1, [sp, #8]
 1089 00c0 FFF7FEFF 		bl	__aeabi_fadd
 1090              	.LVL189:
 1091 00c4 6749     		ldr	r1, .L13+20
 1092 00c6 FFF7FEFF 		bl	powf
 1093              	.LVL190:
 184:math/pprz_geodetic_float.c ****   const float s1 = 1+s+1/s;
 1094              		.loc 1 184 0
 1095 00ca 4FF07E51 		mov	r1, #1065353216
 1096 00ce 0290     		str	r0, [sp, #8]
 1097 00d0 FFF7FEFF 		bl	__aeabi_fadd
 1098              	.LVL191:
 1099 00d4 029A     		ldr	r2, [sp, #8]
 1100 00d6 0746     		mov	r7, r0
 1101              	.LVL192:
 1102 00d8 1146     		mov	r1, r2
 1103 00da 4FF07E50 		mov	r0, #1065353216
 1104 00de FFF7FEFF 		bl	__aeabi_fdiv
 1105              	.LVL193:
 1106 00e2 0146     		mov	r1, r0
 1107 00e4 3846     		mov	r0, r7
 1108 00e6 FFF7FEFF 		bl	__aeabi_fadd
 1109              	.LVL194:
 185:math/pprz_geodetic_float.c ****   const float P = F/(3*s1*s1*G*G);
 1110              		.loc 1 185 0
 1111 00ea 5F49     		ldr	r1, .L13+24
 184:math/pprz_geodetic_float.c ****   const float s1 = 1+s+1/s;
 1112              		.loc 1 184 0
 1113 00ec 0746     		mov	r7, r0
 1114              	.LVL195:
 185:math/pprz_geodetic_float.c ****   const float P = F/(3*s1*s1*G*G);
 1115              		.loc 1 185 0
 1116 00ee FFF7FEFF 		bl	__aeabi_fmul
 1117              	.LVL196:
 1118 00f2 3946     		mov	r1, r7
 1119 00f4 FFF7FEFF 		bl	__aeabi_fmul
 1120              	.LVL197:
 1121 00f8 2946     		mov	r1, r5
 1122 00fa FFF7FEFF 		bl	__aeabi_fmul
 1123              	.LVL198:
 1124 00fe 2946     		mov	r1, r5
 1125 0100 FFF7FEFF 		bl	__aeabi_fmul
 1126              	.LVL199:
 1127 0104 0146     		mov	r1, r0
 1128 0106 5846     		mov	r0, fp
 1129 0108 FFF7FEFF 		bl	__aeabi_fdiv
 1130              	.LVL200:
 186:math/pprz_geodetic_float.c ****   const float Q = sqrtf(1+2*e2*e2*P);
 1131              		.loc 1 186 0
 1132 010c 5749     		ldr	r1, .L13+28
 185:math/pprz_geodetic_float.c ****   const float P = F/(3*s1*s1*G*G);
 1133              		.loc 1 185 0
 1134 010e 0546     		mov	r5, r0
 1135              	.LVL201:
 186:math/pprz_geodetic_float.c ****   const float Q = sqrtf(1+2*e2*e2*P);
 1136              		.loc 1 186 0
 1137 0110 FFF7FEFF 		bl	__aeabi_fmul
 1138              	.LVL202:
 1139 0114 4FF07E51 		mov	r1, #1065353216
 1140 0118 FFF7FEFF 		bl	__aeabi_fadd
 1141              	.LVL203:
 1142 011c FFF7FEFF 		bl	sqrtf
 1143              	.LVL204:
 187:math/pprz_geodetic_float.c ****   const float ro = -(e2*P*r)/(1+Q) + sqrtf((a*a/2)*(1+1/Q) - ((1-e2)*P*z2)/(Q*(1+Q)) - P*r2/2);
 1144              		.loc 1 187 0
 1145 0120 4FF07E51 		mov	r1, #1065353216
 186:math/pprz_geodetic_float.c ****   const float Q = sqrtf(1+2*e2*e2*P);
 1146              		.loc 1 186 0
 1147 0124 8346     		mov	fp, r0
 1148              	.LVL205:
 187:math/pprz_geodetic_float.c ****   const float ro = -(e2*P*r)/(1+Q) + sqrtf((a*a/2)*(1+1/Q) - ((1-e2)*P*z2)/(Q*(1+Q)) - P*r2/2);
 1149              		.loc 1 187 0
 1150 0126 FFF7FEFF 		bl	__aeabi_fadd
 1151              	.LVL206:
 1152 012a 5946     		mov	r1, fp
 1153 012c 0746     		mov	r7, r0
 1154              	.LVL207:
 1155 012e 4FF07E50 		mov	r0, #1065353216
 1156 0132 FFF7FEFF 		bl	__aeabi_fdiv
 1157              	.LVL208:
 1158 0136 4FF07E51 		mov	r1, #1065353216
 1159 013a FFF7FEFF 		bl	__aeabi_fadd
 1160              	.LVL209:
 1161 013e 4C49     		ldr	r1, .L13+32
 1162 0140 FFF7FEFF 		bl	__aeabi_fmul
 1163              	.LVL210:
 1164 0144 4449     		ldr	r1, .L13+8
 1165 0146 0346     		mov	r3, r0
 1166 0148 2846     		mov	r0, r5
 1167 014a 0293     		str	r3, [sp, #8]
 1168 014c FFF7FEFF 		bl	__aeabi_fmul
 1169              	.LVL211:
 1170 0150 3146     		mov	r1, r6
 1171 0152 FFF7FEFF 		bl	__aeabi_fmul
 1172              	.LVL212:
 1173 0156 3946     		mov	r1, r7
 1174 0158 8446     		mov	ip, r0
 1175 015a 5846     		mov	r0, fp
 1176 015c CDF80CC0 		str	ip, [sp, #12]
 1177 0160 FFF7FEFF 		bl	__aeabi_fmul
 1178              	.LVL213:
 1179 0164 DDF80CB0 		ldr	fp, [sp, #12]
 1180              	.LVL214:
 1181 0168 0146     		mov	r1, r0
 1182 016a 5846     		mov	r0, fp
 1183 016c FFF7FEFF 		bl	__aeabi_fdiv
 1184              	.LVL215:
 1185 0170 0146     		mov	r1, r0
 1186 0172 0298     		ldr	r0, [sp, #8]
 1187 0174 FFF7FEFF 		bl	__aeabi_fsub
 1188              	.LVL216:
 1189 0178 5146     		mov	r1, sl
 1190 017a 8346     		mov	fp, r0
 1191 017c 2846     		mov	r0, r5
 1192 017e FFF7FEFF 		bl	__aeabi_fmul
 1193              	.LVL217:
 1194 0182 4FF07C51 		mov	r1, #1056964608
 1195 0186 FFF7FEFF 		bl	__aeabi_fmul
 1196              	.LVL218:
 1197 018a 0146     		mov	r1, r0
 1198 018c 5846     		mov	r0, fp
 1199 018e FFF7FEFF 		bl	__aeabi_fsub
 1200              	.LVL219:
 1201 0192 FFF7FEFF 		bl	sqrtf
 1202              	.LVL220:
 1203 0196 3749     		ldr	r1, .L13+36
 1204 0198 8246     		mov	sl, r0
 1205              	.LVL221:
 1206 019a 2846     		mov	r0, r5
 1207              	.LVL222:
 1208 019c FFF7FEFF 		bl	__aeabi_fmul
 1209              	.LVL223:
 1210 01a0 4946     		mov	r1, r9
 1211 01a2 FFF7FEFF 		bl	__aeabi_fmul
 1212              	.LVL224:
 1213 01a6 3946     		mov	r1, r7
 1214 01a8 00F10040 		add	r0, r0, #-2147483648
 1215 01ac FFF7FEFF 		bl	__aeabi_fdiv
 1216              	.LVL225:
 1217 01b0 5146     		mov	r1, sl
 1218 01b2 FFF7FEFF 		bl	__aeabi_fadd
 1219              	.LVL226:
 188:math/pprz_geodetic_float.c ****   const float tmp = (r - e2*ro)*(r - e2*ro);
 1220              		.loc 1 188 0
 1221 01b6 2F49     		ldr	r1, .L13+36
 1222 01b8 FFF7FEFF 		bl	__aeabi_fmul
 1223              	.LVL227:
 1224 01bc 0146     		mov	r1, r0
 1225 01be 4846     		mov	r0, r9
 1226 01c0 FFF7FEFF 		bl	__aeabi_fsub
 1227              	.LVL228:
 1228 01c4 0146     		mov	r1, r0
 1229 01c6 FFF7FEFF 		bl	__aeabi_fmul
 1230              	.LVL229:
 189:math/pprz_geodetic_float.c ****   const float U = sqrtf( tmp + z2 );
 1231              		.loc 1 189 0
 1232 01ca 3146     		mov	r1, r6
 188:math/pprz_geodetic_float.c ****   const float tmp = (r - e2*ro)*(r - e2*ro);
 1233              		.loc 1 188 0
 1234 01cc 0546     		mov	r5, r0
 1235              	.LVL230:
 189:math/pprz_geodetic_float.c ****   const float U = sqrtf( tmp + z2 );
 1236              		.loc 1 189 0
 1237 01ce FFF7FEFF 		bl	__aeabi_fadd
 1238              	.LVL231:
 1239 01d2 FFF7FEFF 		bl	sqrtf
 1240              	.LVL232:
 190:math/pprz_geodetic_float.c ****   const float V = sqrtf( tmp + (1-e2)*z2 );
 1241              		.loc 1 190 0
 1242 01d6 019E     		ldr	r6, [sp, #4]
 1243              	.LVL233:
 189:math/pprz_geodetic_float.c ****   const float U = sqrtf( tmp + z2 );
 1244              		.loc 1 189 0
 1245 01d8 0746     		mov	r7, r0
 1246              	.LVL234:
 190:math/pprz_geodetic_float.c ****   const float V = sqrtf( tmp + (1-e2)*z2 );
 1247              		.loc 1 190 0
 1248 01da 3146     		mov	r1, r6
 1249 01dc 2846     		mov	r0, r5
 1250              	.LVL235:
 1251 01de FFF7FEFF 		bl	__aeabi_fadd
 1252              	.LVL236:
 1253 01e2 FFF7FEFF 		bl	sqrtf
 1254              	.LVL237:
 191:math/pprz_geodetic_float.c ****   const float zo = (b2*in->z)/(a*V);
 1255              		.loc 1 191 0
 1256 01e6 2449     		ldr	r1, .L13+40
 1257 01e8 FFF7FEFF 		bl	__aeabi_fmul
 1258              	.LVL238:
 1259 01ec 0646     		mov	r6, r0
 193:math/pprz_geodetic_float.c ****   out->alt = U*(1 - b2/(a*V));
 1260              		.loc 1 193 0
 1261 01ee 3146     		mov	r1, r6
 1262 01f0 2248     		ldr	r0, .L13+44
 1263 01f2 FFF7FEFF 		bl	__aeabi_fdiv
 1264              	.LVL239:
 1265 01f6 0146     		mov	r1, r0
 1266 01f8 4FF07E50 		mov	r0, #1065353216
 1267 01fc FFF7FEFF 		bl	__aeabi_fsub
 1268              	.LVL240:
 1269 0200 0146     		mov	r1, r0
 1270 0202 3846     		mov	r0, r7
 1271 0204 FFF7FEFF 		bl	__aeabi_fmul
 1272              	.LVL241:
 191:math/pprz_geodetic_float.c ****   const float zo = (b2*in->z)/(a*V);
 1273              		.loc 1 191 0
 1274 0208 A568     		ldr	r5, [r4, #8]	@ float
 1275              	.LVL242:
 1276 020a 1C49     		ldr	r1, .L13+44
 193:math/pprz_geodetic_float.c ****   out->alt = U*(1 - b2/(a*V));
 1277              		.loc 1 193 0
 1278 020c C8F80800 		str	r0, [r8, #8]	@ float
 191:math/pprz_geodetic_float.c ****   const float zo = (b2*in->z)/(a*V);
 1279              		.loc 1 191 0
 1280 0210 2846     		mov	r0, r5
 1281 0212 FFF7FEFF 		bl	__aeabi_fmul
 1282              	.LVL243:
 1283 0216 3146     		mov	r1, r6
 1284 0218 FFF7FEFF 		bl	__aeabi_fdiv
 1285              	.LVL244:
 194:math/pprz_geodetic_float.c ****   out->lat = atanf((in->z + ep2*zo)/r);
 1286              		.loc 1 194 0
 1287 021c 1849     		ldr	r1, .L13+48
 1288 021e FFF7FEFF 		bl	__aeabi_fmul
 1289              	.LVL245:
 1290 0222 0146     		mov	r1, r0
 1291 0224 2846     		mov	r0, r5
 1292 0226 FFF7FEFF 		bl	__aeabi_fadd
 1293              	.LVL246:
 1294 022a 4946     		mov	r1, r9
 1295 022c FFF7FEFF 		bl	__aeabi_fdiv
 1296              	.LVL247:
 1297 0230 FFF7FEFF 		bl	atanf
 1298              	.LVL248:
 195:math/pprz_geodetic_float.c ****   out->lon = atan2f(in->y,in->x);
 1299              		.loc 1 195 0
 1300 0234 2168     		ldr	r1, [r4, #0]	@ float
 194:math/pprz_geodetic_float.c ****   out->lat = atanf((in->z + ep2*zo)/r);
 1301              		.loc 1 194 0
 1302 0236 C8F80400 		str	r0, [r8, #4]	@ float
 195:math/pprz_geodetic_float.c ****   out->lon = atan2f(in->y,in->x);
 1303              		.loc 1 195 0
 1304 023a 6068     		ldr	r0, [r4, #4]	@ float
 1305 023c FFF7FEFF 		bl	atan2f
 1306              	.LVL249:
 1307 0240 C8F80000 		str	r0, [r8, #0]	@ float
 197:math/pprz_geodetic_float.c **** }
 1308              		.loc 1 197 0
 1309 0244 05B0     		add	sp, sp, #20
 1310 0246 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 1311              	.L14:
 1312 024a 00BFAFF3 		.align	3
 1312      0080
 1313              	.L13:
 1314 0250 000000DC 		.word	3690987520
 1315 0254 3E021F43 		.word	1126105662
 1316 0258 47497E3F 		.word	1065240903
 1317 025c 8B53D94E 		.word	1322865547
 1318 0260 70F73B38 		.word	943454064
 1319 0264 ABAAAA3E 		.word	1051372203
 1320 0268 00004040 		.word	1077936128
 1321 026c 70F7BB38 		.word	951842672
 1322 0270 CAFE9355 		.word	1435762378
 1323 0274 875CDB3B 		.word	1004231815
 1324 0278 32A5C24A 		.word	1254270258
 1325 027c 2A011356 		.word	1444086058
 1326 0280 FFD6DC3B 		.word	1004328703
 1327              		.cfi_endproc
 1328              	.LFE14:
 1330 0284 AFF30080 		.section	.text.ltp_def_from_ecef_f,"ax",%progbits
 1331              		.align	1
 1332              		.global	ltp_def_from_ecef_f
 1333              		.thumb
 1334              		.thumb_func
 1336              	ltp_def_from_ecef_f:
 1337              	.LFB2:
   9:math/pprz_geodetic_float.c **** void ltp_def_from_ecef_f(struct LtpDef_f* def, struct EcefCoor_f* ecef) {
 1338              		.loc 1 9 0
 1339              		.cfi_startproc
 1340              		@ args = 0, pretend = 0, frame = 0
 1341              		@ frame_needed = 0, uses_anonymous_args = 0
 1342              	.LVL250:
 1343 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 1344              	.LCFI13:
 1345              		.cfi_def_cfa_offset 32
 1346              		.cfi_offset 3, -32
 1347              		.cfi_offset 4, -28
 1348              		.cfi_offset 5, -24
 1349              		.cfi_offset 6, -20
 1350              		.cfi_offset 7, -16
 1351              		.cfi_offset 8, -12
 1352              		.cfi_offset 9, -8
 1353              		.cfi_offset 14, -4
  12:math/pprz_geodetic_float.c ****   VECT3_COPY(def->ecef, *ecef);
 1354              		.loc 1 12 0
 1355 0004 0B68     		ldr	r3, [r1, #0]	@ float
   9:math/pprz_geodetic_float.c **** void ltp_def_from_ecef_f(struct LtpDef_f* def, struct EcefCoor_f* ecef) {
 1356              		.loc 1 9 0
 1357 0006 0446     		mov	r4, r0
  12:math/pprz_geodetic_float.c ****   VECT3_COPY(def->ecef, *ecef);
 1358              		.loc 1 12 0
 1359 0008 0360     		str	r3, [r0, #0]	@ float
 1360 000a 4868     		ldr	r0, [r1, #4]	@ float
 1361              	.LVL251:
 1362 000c 8968     		ldr	r1, [r1, #8]	@ float
 1363              	.LVL252:
 1364 000e 6060     		str	r0, [r4, #4]	@ float
 1365 0010 A160     		str	r1, [r4, #8]	@ float
  14:math/pprz_geodetic_float.c ****   lla_of_ecef_f(&def->lla, &def->ecef);
 1366              		.loc 1 14 0
 1367 0012 04F10C00 		add	r0, r4, #12
 1368 0016 2146     		mov	r1, r4
 1369 0018 FFF7FEFF 		bl	lla_of_ecef_f
 1370              	.LVL253:
  16:math/pprz_geodetic_float.c ****   const float sin_lat = sinf(def->lla.lat);
 1371              		.loc 1 16 0
 1372 001c 2569     		ldr	r5, [r4, #16]	@ float
 1373 001e 2846     		mov	r0, r5
 1374 0020 FFF7FEFF 		bl	sinf
 1375              	.LVL254:
 1376 0024 8046     		mov	r8, r0
 1377              	.LVL255:
  17:math/pprz_geodetic_float.c ****   const float cos_lat = cosf(def->lla.lat);
 1378              		.loc 1 17 0
 1379 0026 2846     		mov	r0, r5
 1380              	.LVL256:
 1381 0028 FFF7FEFF 		bl	cosf
 1382              	.LVL257:
  18:math/pprz_geodetic_float.c ****   const float sin_lon = sinf(def->lla.lon);
 1383              		.loc 1 18 0
 1384 002c E768     		ldr	r7, [r4, #12]	@ float
  17:math/pprz_geodetic_float.c ****   const float cos_lat = cosf(def->lla.lat);
 1385              		.loc 1 17 0
 1386 002e 0646     		mov	r6, r0
 1387              	.LVL258:
  18:math/pprz_geodetic_float.c ****   const float sin_lon = sinf(def->lla.lon);
 1388              		.loc 1 18 0
 1389 0030 3846     		mov	r0, r7
 1390              	.LVL259:
 1391 0032 FFF7FEFF 		bl	sinf
 1392              	.LVL260:
 1393 0036 0546     		mov	r5, r0
 1394              	.LVL261:
  19:math/pprz_geodetic_float.c ****   const float cos_lon = cosf(def->lla.lon);
 1395              		.loc 1 19 0
 1396 0038 3846     		mov	r0, r7
 1397              	.LVL262:
 1398 003a FFF7FEFF 		bl	cosf
 1399              	.LVL263:
  23:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[3] = -sin_lat*cos_lon;
 1400              		.loc 1 23 0
 1401 003e 08F10049 		add	r9, r8, #-2147483648
  20:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[0] = -sin_lon;
 1402              		.loc 1 20 0
 1403 0042 05F10042 		add	r2, r5, #-2147483648
  22:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[2] =  0.; /* this element is always zero http://en.wikipedia.org/wiki/Geodetic
 1404              		.loc 1 22 0
 1405 0046 0023     		movs	r3, #0
  19:math/pprz_geodetic_float.c ****   const float cos_lon = cosf(def->lla.lon);
 1406              		.loc 1 19 0
 1407 0048 0746     		mov	r7, r0
 1408              	.LVL264:
  20:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[0] = -sin_lon;
 1409              		.loc 1 20 0
 1410 004a A261     		str	r2, [r4, #24]	@ float
  22:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[2] =  0.; /* this element is always zero http://en.wikipedia.org/wiki/Geodetic
 1411              		.loc 1 22 0
 1412 004c 2362     		str	r3, [r4, #32]	@ float
  21:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[1] =  cos_lon;
 1413              		.loc 1 21 0
 1414 004e E061     		str	r0, [r4, #28]	@ float
  23:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[3] = -sin_lat*cos_lon;
 1415              		.loc 1 23 0
 1416 0050 3946     		mov	r1, r7
 1417 0052 4846     		mov	r0, r9
 1418              	.LVL265:
 1419 0054 FFF7FEFF 		bl	__aeabi_fmul
 1420              	.LVL266:
  24:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[4] = -sin_lat*sin_lon;
 1421              		.loc 1 24 0
 1422 0058 2946     		mov	r1, r5
  23:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[3] = -sin_lat*cos_lon;
 1423              		.loc 1 23 0
 1424 005a 6062     		str	r0, [r4, #36]	@ float
  24:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[4] = -sin_lat*sin_lon;
 1425              		.loc 1 24 0
 1426 005c 4846     		mov	r0, r9
 1427 005e FFF7FEFF 		bl	__aeabi_fmul
 1428              	.LVL267:
  26:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[6] =  cos_lat*cos_lon;
 1429              		.loc 1 26 0
 1430 0062 3946     		mov	r1, r7
  24:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[4] = -sin_lat*sin_lon;
 1431              		.loc 1 24 0
 1432 0064 A062     		str	r0, [r4, #40]	@ float
  25:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[5] =  cos_lat;
 1433              		.loc 1 25 0
 1434 0066 E662     		str	r6, [r4, #44]	@ float
  26:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[6] =  cos_lat*cos_lon;
 1435              		.loc 1 26 0
 1436 0068 3046     		mov	r0, r6
 1437 006a FFF7FEFF 		bl	__aeabi_fmul
 1438              	.LVL268:
  27:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[7] =  cos_lat*sin_lon;
 1439              		.loc 1 27 0
 1440 006e 2946     		mov	r1, r5
  26:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[6] =  cos_lat*cos_lon;
 1441              		.loc 1 26 0
 1442 0070 2063     		str	r0, [r4, #48]	@ float
  27:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[7] =  cos_lat*sin_lon;
 1443              		.loc 1 27 0
 1444 0072 3046     		mov	r0, r6
 1445 0074 FFF7FEFF 		bl	__aeabi_fmul
 1446              	.LVL269:
  28:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[8] =  sin_lat;
 1447              		.loc 1 28 0
 1448 0078 C4F83880 		str	r8, [r4, #56]	@ float
  27:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[7] =  cos_lat*sin_lon;
 1449              		.loc 1 27 0
 1450 007c 6063     		str	r0, [r4, #52]	@ float
  28:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[8] =  sin_lat;
 1451              		.loc 1 28 0
 1452 007e BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 1453              		.cfi_endproc
 1454              	.LFE2:
 1456              		.section	.text.ecef_of_lla_f,"ax",%progbits
 1457              		.align	1
 1458              		.global	ecef_of_lla_f
 1459              		.thumb
 1460              		.thumb_func
 1462              	ecef_of_lla_f:
 1463              	.LFB15:
 199:math/pprz_geodetic_float.c **** void ecef_of_lla_f(struct EcefCoor_f* out, struct LlaCoor_f* in) {
 1464              		.loc 1 199 0
 1465              		.cfi_startproc
 1466              		@ args = 0, pretend = 0, frame = 0
 1467              		@ frame_needed = 0, uses_anonymous_args = 0
 1468              	.LVL270:
 1469 0000 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 1470              	.LCFI14:
 1471              		.cfi_def_cfa_offset 40
 1472              		.cfi_offset 3, -40
 1473              		.cfi_offset 4, -36
 1474              		.cfi_offset 5, -32
 1475              		.cfi_offset 6, -28
 1476              		.cfi_offset 7, -24
 1477              		.cfi_offset 8, -20
 1478              		.cfi_offset 9, -16
 1479              		.cfi_offset 10, -12
 1480              		.cfi_offset 11, -8
 1481              		.cfi_offset 14, -4
 206:math/pprz_geodetic_float.c ****   const float sin_lat = sinf(in->lat);
 1482              		.loc 1 206 0
 1483 0004 4D68     		ldr	r5, [r1, #4]	@ float
 199:math/pprz_geodetic_float.c **** void ecef_of_lla_f(struct EcefCoor_f* out, struct LlaCoor_f* in) {
 1484              		.loc 1 199 0
 1485 0006 0646     		mov	r6, r0
 206:math/pprz_geodetic_float.c ****   const float sin_lat = sinf(in->lat);
 1486              		.loc 1 206 0
 1487 0008 2846     		mov	r0, r5
 1488              	.LVL271:
 199:math/pprz_geodetic_float.c **** void ecef_of_lla_f(struct EcefCoor_f* out, struct LlaCoor_f* in) {
 1489              		.loc 1 199 0
 1490 000a 0C46     		mov	r4, r1
 206:math/pprz_geodetic_float.c ****   const float sin_lat = sinf(in->lat);
 1491              		.loc 1 206 0
 1492 000c FFF7FEFF 		bl	sinf
 1493              	.LVL272:
 1494 0010 0746     		mov	r7, r0
 1495              	.LVL273:
 207:math/pprz_geodetic_float.c ****   const float cos_lat = cosf(in->lat);
 1496              		.loc 1 207 0
 1497 0012 2846     		mov	r0, r5
 1498              	.LVL274:
 1499 0014 FFF7FEFF 		bl	cosf
 1500              	.LVL275:
 208:math/pprz_geodetic_float.c ****   const float sin_lon = sinf(in->lon);
 1501              		.loc 1 208 0
 1502 0018 2568     		ldr	r5, [r4, #0]	@ float
 207:math/pprz_geodetic_float.c ****   const float cos_lat = cosf(in->lat);
 1503              		.loc 1 207 0
 1504 001a 8346     		mov	fp, r0
 1505              	.LVL276:
 208:math/pprz_geodetic_float.c ****   const float sin_lon = sinf(in->lon);
 1506              		.loc 1 208 0
 1507 001c 2846     		mov	r0, r5
 1508              	.LVL277:
 1509 001e FFF7FEFF 		bl	sinf
 1510              	.LVL278:
 1511 0022 8146     		mov	r9, r0
 1512              	.LVL279:
 209:math/pprz_geodetic_float.c ****   const float cos_lon = cosf(in->lon);
 1513              		.loc 1 209 0
 1514 0024 2846     		mov	r0, r5
 1515              	.LVL280:
 1516 0026 FFF7FEFF 		bl	cosf
 1517              	.LVL281:
 210:math/pprz_geodetic_float.c ****   const float chi = sqrtf(1. - e2*sin_lat*sin_lat);
 1518              		.loc 1 210 0
 1519 002a 2749     		ldr	r1, .L17+8
 209:math/pprz_geodetic_float.c ****   const float cos_lon = cosf(in->lon);
 1520              		.loc 1 209 0
 1521 002c 8246     		mov	sl, r0
 1522              	.LVL282:
 210:math/pprz_geodetic_float.c ****   const float chi = sqrtf(1. - e2*sin_lat*sin_lat);
 1523              		.loc 1 210 0
 1524 002e 3846     		mov	r0, r7
 1525              	.LVL283:
 1526 0030 FFF7FEFF 		bl	__aeabi_fmul
 1527              	.LVL284:
 1528 0034 3946     		mov	r1, r7
 1529 0036 FFF7FEFF 		bl	__aeabi_fmul
 1530              	.LVL285:
 1531 003a 0146     		mov	r1, r0
 1532 003c 4FF07E50 		mov	r0, #1065353216
 1533 0040 FFF7FEFF 		bl	__aeabi_fsub
 1534              	.LVL286:
 1535 0044 FFF7FEFF 		bl	sqrtf
 1536              	.LVL287:
 1537 0048 0146     		mov	r1, r0
 1538              	.LVL288:
 211:math/pprz_geodetic_float.c ****   const float a_chi = a / chi;
 1539              		.loc 1 211 0
 1540 004a 2048     		ldr	r0, .L17+12
 1541              	.LVL289:
 1542 004c FFF7FEFF 		bl	__aeabi_fdiv
 1543              	.LVL290:
 213:math/pprz_geodetic_float.c ****   out->x = (a_chi + in->alt) * cos_lat * cos_lon;
 1544              		.loc 1 213 0
 1545 0050 D4F80880 		ldr	r8, [r4, #8]	@ float
 211:math/pprz_geodetic_float.c ****   const float a_chi = a / chi;
 1546              		.loc 1 211 0
 1547 0054 0546     		mov	r5, r0
 1548              	.LVL291:
 213:math/pprz_geodetic_float.c ****   out->x = (a_chi + in->alt) * cos_lat * cos_lon;
 1549              		.loc 1 213 0
 1550 0056 4146     		mov	r1, r8
 1551 0058 FFF7FEFF 		bl	__aeabi_fadd
 1552              	.LVL292:
 1553 005c 5946     		mov	r1, fp
 1554 005e FFF7FEFF 		bl	__aeabi_fmul
 1555              	.LVL293:
 1556 0062 5146     		mov	r1, sl
 1557 0064 0446     		mov	r4, r0
 1558              	.LVL294:
 1559 0066 FFF7FEFF 		bl	__aeabi_fmul
 1560              	.LVL295:
 214:math/pprz_geodetic_float.c ****   out->y = (a_chi + in->alt) * cos_lat * sin_lon;
 1561              		.loc 1 214 0
 1562 006a 4946     		mov	r1, r9
 213:math/pprz_geodetic_float.c ****   out->x = (a_chi + in->alt) * cos_lat * cos_lon;
 1563              		.loc 1 213 0
 1564 006c 3060     		str	r0, [r6, #0]	@ float
 214:math/pprz_geodetic_float.c ****   out->y = (a_chi + in->alt) * cos_lat * sin_lon;
 1565              		.loc 1 214 0
 1566 006e 2046     		mov	r0, r4
 1567 0070 FFF7FEFF 		bl	__aeabi_fmul
 1568              	.LVL296:
 1569 0074 7060     		str	r0, [r6, #4]	@ float
 215:math/pprz_geodetic_float.c ****   out->z = (a_chi*(1. - e2) + in->alt) * sin_lat;
 1570              		.loc 1 215 0
 1571 0076 2846     		mov	r0, r5
 1572 0078 FFF7FEFF 		bl	__aeabi_f2d
 1573              	.LVL297:
 1574 007c 10A3     		adr	r3, .L17
 1575 007e D3E90023 		ldrd	r2, [r3]
 1576 0082 FFF7FEFF 		bl	__aeabi_dmul
 1577              	.LVL298:
 1578 0086 0446     		mov	r4, r0
 1579 0088 4046     		mov	r0, r8
 1580 008a 0D46     		mov	r5, r1
 1581              	.LVL299:
 1582 008c FFF7FEFF 		bl	__aeabi_f2d
 1583              	.LVL300:
 1584 0090 0246     		mov	r2, r0
 1585 0092 0B46     		mov	r3, r1
 1586 0094 2046     		mov	r0, r4
 1587 0096 2946     		mov	r1, r5
 1588 0098 FFF7FEFF 		bl	__aeabi_dadd
 1589              	.LVL301:
 1590 009c 0446     		mov	r4, r0
 1591 009e 3846     		mov	r0, r7
 1592 00a0 0D46     		mov	r5, r1
 1593 00a2 FFF7FEFF 		bl	__aeabi_f2d
 1594              	.LVL302:
 1595 00a6 0246     		mov	r2, r0
 1596 00a8 0B46     		mov	r3, r1
 1597 00aa 2046     		mov	r0, r4
 1598 00ac 2946     		mov	r1, r5
 1599 00ae FFF7FEFF 		bl	__aeabi_dmul
 1600              	.LVL303:
 1601 00b2 FFF7FEFF 		bl	__aeabi_d2f
 1602              	.LVL304:
 1603 00b6 B060     		str	r0, [r6, #8]	@ float
 1604 00b8 BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 1605              	.L18:
 1606 00bc AFF30080 		.align	3
 1607              	.L17:
 1608 00c0 000040DE 		.word	3728736256
 1609 00c4 28C9EF3F 		.word	1072679208
 1610 00c8 875CDB3B 		.word	1004231815
 1611 00cc 32A5C24A 		.word	1254270258
 1612              		.cfi_endproc
 1613              	.LFE15:
 1615              		.section	.text.ned_of_lla_point_f,"ax",%progbits
 1616              		.align	1
 1617              		.global	ned_of_lla_point_f
 1618              		.thumb
 1619              		.thumb_func
 1621              	ned_of_lla_point_f:
 1622              	.LFB9:
  84:math/pprz_geodetic_float.c **** void ned_of_lla_point_f(struct NedCoor_f* ned, struct LtpDef_f* def, struct LlaCoor_f* lla) {
 1623              		.loc 1 84 0
 1624              		.cfi_startproc
 1625              		@ args = 0, pretend = 0, frame = 16
 1626              		@ frame_needed = 0, uses_anonymous_args = 0
 1627              	.LVL305:
 1628 0000 30B5     		push	{r4, r5, lr}
 1629              	.LCFI15:
 1630              		.cfi_def_cfa_offset 12
 1631              		.cfi_offset 4, -12
 1632              		.cfi_offset 5, -8
 1633              		.cfi_offset 14, -4
 1634 0002 85B0     		sub	sp, sp, #20
 1635              	.LCFI16:
 1636              		.cfi_def_cfa_offset 32
  84:math/pprz_geodetic_float.c **** void ned_of_lla_point_f(struct NedCoor_f* ned, struct LtpDef_f* def, struct LlaCoor_f* lla) {
 1637              		.loc 1 84 0
 1638 0004 0546     		mov	r5, r0
 1639 0006 0C46     		mov	r4, r1
  86:math/pprz_geodetic_float.c ****   ecef_of_lla_f(&ecef,lla);
 1640              		.loc 1 86 0
 1641 0008 01A8     		add	r0, sp, #4
 1642              	.LVL306:
 1643 000a 1146     		mov	r1, r2
 1644              	.LVL307:
 1645 000c FFF7FEFF 		bl	ecef_of_lla_f
 1646              	.LVL308:
  87:math/pprz_geodetic_float.c ****   ned_of_ecef_point_f(ned,def,&ecef);
 1647              		.loc 1 87 0
 1648 0010 2846     		mov	r0, r5
 1649 0012 2146     		mov	r1, r4
 1650 0014 01AA     		add	r2, sp, #4
 1651 0016 FFF7FEFF 		bl	ned_of_ecef_point_f
 1652              	.LVL309:
  88:math/pprz_geodetic_float.c **** }
 1653              		.loc 1 88 0
 1654 001a 05B0     		add	sp, sp, #20
 1655 001c 30BD     		pop	{r4, r5, pc}
 1656              		.cfi_endproc
 1657              	.LFE9:
 1659              		.section	.text.enu_of_lla_point_f,"ax",%progbits
 1660              		.align	1
 1661              		.global	enu_of_lla_point_f
 1662              		.thumb
 1663              		.thumb_func
 1665              	enu_of_lla_point_f:
 1666              	.LFB8:
  78:math/pprz_geodetic_float.c **** void enu_of_lla_point_f(struct EnuCoor_f* enu, struct LtpDef_f* def, struct LlaCoor_f* lla) {
 1667              		.loc 1 78 0
 1668              		.cfi_startproc
 1669              		@ args = 0, pretend = 0, frame = 16
 1670              		@ frame_needed = 0, uses_anonymous_args = 0
 1671              	.LVL310:
 1672 0000 30B5     		push	{r4, r5, lr}
 1673              	.LCFI17:
 1674              		.cfi_def_cfa_offset 12
 1675              		.cfi_offset 4, -12
 1676              		.cfi_offset 5, -8
 1677              		.cfi_offset 14, -4
 1678 0002 85B0     		sub	sp, sp, #20
 1679              	.LCFI18:
 1680              		.cfi_def_cfa_offset 32
  78:math/pprz_geodetic_float.c **** void enu_of_lla_point_f(struct EnuCoor_f* enu, struct LtpDef_f* def, struct LlaCoor_f* lla) {
 1681              		.loc 1 78 0
 1682 0004 0546     		mov	r5, r0
 1683 0006 0C46     		mov	r4, r1
  80:math/pprz_geodetic_float.c ****   ecef_of_lla_f(&ecef,lla);
 1684              		.loc 1 80 0
 1685 0008 01A8     		add	r0, sp, #4
 1686              	.LVL311:
 1687 000a 1146     		mov	r1, r2
 1688              	.LVL312:
 1689 000c FFF7FEFF 		bl	ecef_of_lla_f
 1690              	.LVL313:
  81:math/pprz_geodetic_float.c ****   enu_of_ecef_point_f(enu,def,&ecef);
 1691              		.loc 1 81 0
 1692 0010 2846     		mov	r0, r5
 1693 0012 2146     		mov	r1, r4
 1694 0014 01AA     		add	r2, sp, #4
 1695 0016 FFF7FEFF 		bl	enu_of_ecef_point_f
 1696              	.LVL314:
  82:math/pprz_geodetic_float.c **** }
 1697              		.loc 1 82 0
 1698 001a 05B0     		add	sp, sp, #20
 1699 001c 30BD     		pop	{r4, r5, pc}
 1700              		.cfi_endproc
 1701              	.LFE8:
 1703              		.section	.text.ltp_def_from_lla_f,"ax",%progbits
 1704              		.align	1
 1705              		.global	ltp_def_from_lla_f
 1706              		.thumb
 1707              		.thumb_func
 1709              	ltp_def_from_lla_f:
 1710              	.LFB3:
  32:math/pprz_geodetic_float.c **** void ltp_def_from_lla_f(struct LtpDef_f* def, struct LlaCoor_f* lla) {
 1711              		.loc 1 32 0
 1712              		.cfi_startproc
 1713              		@ args = 0, pretend = 0, frame = 0
 1714              		@ frame_needed = 0, uses_anonymous_args = 0
 1715              	.LVL315:
 1716 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 1717              	.LCFI19:
 1718              		.cfi_def_cfa_offset 32
 1719              		.cfi_offset 3, -32
 1720              		.cfi_offset 4, -28
 1721              		.cfi_offset 5, -24
 1722              		.cfi_offset 6, -20
 1723              		.cfi_offset 7, -16
 1724              		.cfi_offset 8, -12
 1725              		.cfi_offset 9, -8
 1726              		.cfi_offset 14, -4
  34:math/pprz_geodetic_float.c ****   LLA_COPY(def->lla, *lla);
 1727              		.loc 1 34 0
 1728 0004 0A68     		ldr	r2, [r1, #0]	@ float
 1729 0006 4B68     		ldr	r3, [r1, #4]	@ float
 1730 0008 8968     		ldr	r1, [r1, #8]	@ float
 1731              	.LVL316:
  32:math/pprz_geodetic_float.c **** void ltp_def_from_lla_f(struct LtpDef_f* def, struct LlaCoor_f* lla) {
 1732              		.loc 1 32 0
 1733 000a 0446     		mov	r4, r0
  34:math/pprz_geodetic_float.c ****   LLA_COPY(def->lla, *lla);
 1734              		.loc 1 34 0
 1735 000c C260     		str	r2, [r0, #12]	@ float
 1736 000e 0361     		str	r3, [r0, #16]	@ float
 1737 0010 4161     		str	r1, [r0, #20]	@ float
  36:math/pprz_geodetic_float.c ****   ecef_of_lla_f(&def->ecef, &def->lla);
 1738              		.loc 1 36 0
 1739 0012 00F10C01 		add	r1, r0, #12
 1740 0016 FFF7FEFF 		bl	ecef_of_lla_f
 1741              	.LVL317:
  39:math/pprz_geodetic_float.c ****   const float sin_lat = sinf(def->lla.lat);
 1742              		.loc 1 39 0
 1743 001a 2569     		ldr	r5, [r4, #16]	@ float
 1744 001c 2846     		mov	r0, r5
 1745 001e FFF7FEFF 		bl	sinf
 1746              	.LVL318:
 1747 0022 8046     		mov	r8, r0
 1748              	.LVL319:
  40:math/pprz_geodetic_float.c ****   const float cos_lat = cosf(def->lla.lat);
 1749              		.loc 1 40 0
 1750 0024 2846     		mov	r0, r5
 1751              	.LVL320:
 1752 0026 FFF7FEFF 		bl	cosf
 1753              	.LVL321:
  41:math/pprz_geodetic_float.c ****   const float sin_lon = sinf(def->lla.lon);
 1754              		.loc 1 41 0
 1755 002a E768     		ldr	r7, [r4, #12]	@ float
  40:math/pprz_geodetic_float.c ****   const float cos_lat = cosf(def->lla.lat);
 1756              		.loc 1 40 0
 1757 002c 0646     		mov	r6, r0
 1758              	.LVL322:
  41:math/pprz_geodetic_float.c ****   const float sin_lon = sinf(def->lla.lon);
 1759              		.loc 1 41 0
 1760 002e 3846     		mov	r0, r7
 1761              	.LVL323:
 1762 0030 FFF7FEFF 		bl	sinf
 1763              	.LVL324:
 1764 0034 0546     		mov	r5, r0
 1765              	.LVL325:
  42:math/pprz_geodetic_float.c ****   const float cos_lon = cosf(def->lla.lon);
 1766              		.loc 1 42 0
 1767 0036 3846     		mov	r0, r7
 1768              	.LVL326:
 1769 0038 FFF7FEFF 		bl	cosf
 1770              	.LVL327:
  47:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[3] = -sin_lat*cos_lon;
 1771              		.loc 1 47 0
 1772 003c 08F10049 		add	r9, r8, #-2147483648
  46:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[2] =  0.; /* this element is always zero http://en.wikipedia.org/wiki/Geodetic
 1773              		.loc 1 46 0
 1774 0040 0023     		movs	r3, #0
  42:math/pprz_geodetic_float.c ****   const float cos_lon = cosf(def->lla.lon);
 1775              		.loc 1 42 0
 1776 0042 0746     		mov	r7, r0
 1777              	.LVL328:
  44:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[0] = -sin_lon;
 1778              		.loc 1 44 0
 1779 0044 05F10040 		add	r0, r5, #-2147483648
 1780              	.LVL329:
  46:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[2] =  0.; /* this element is always zero http://en.wikipedia.org/wiki/Geodetic
 1781              		.loc 1 46 0
 1782 0048 2362     		str	r3, [r4, #32]	@ float
  44:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[0] = -sin_lon;
 1783              		.loc 1 44 0
 1784 004a A061     		str	r0, [r4, #24]	@ float
  47:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[3] = -sin_lat*cos_lon;
 1785              		.loc 1 47 0
 1786 004c 3946     		mov	r1, r7
  45:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[1] =  cos_lon;
 1787              		.loc 1 45 0
 1788 004e E761     		str	r7, [r4, #28]	@ float
  47:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[3] = -sin_lat*cos_lon;
 1789              		.loc 1 47 0
 1790 0050 4846     		mov	r0, r9
 1791 0052 FFF7FEFF 		bl	__aeabi_fmul
 1792              	.LVL330:
  48:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[4] = -sin_lat*sin_lon;
 1793              		.loc 1 48 0
 1794 0056 2946     		mov	r1, r5
  47:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[3] = -sin_lat*cos_lon;
 1795              		.loc 1 47 0
 1796 0058 6062     		str	r0, [r4, #36]	@ float
  48:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[4] = -sin_lat*sin_lon;
 1797              		.loc 1 48 0
 1798 005a 4846     		mov	r0, r9
 1799 005c FFF7FEFF 		bl	__aeabi_fmul
 1800              	.LVL331:
  50:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[6] =  cos_lat*cos_lon;
 1801              		.loc 1 50 0
 1802 0060 3946     		mov	r1, r7
  48:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[4] = -sin_lat*sin_lon;
 1803              		.loc 1 48 0
 1804 0062 A062     		str	r0, [r4, #40]	@ float
  49:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[5] =  cos_lat;
 1805              		.loc 1 49 0
 1806 0064 E662     		str	r6, [r4, #44]	@ float
  50:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[6] =  cos_lat*cos_lon;
 1807              		.loc 1 50 0
 1808 0066 3046     		mov	r0, r6
 1809 0068 FFF7FEFF 		bl	__aeabi_fmul
 1810              	.LVL332:
  51:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[7] =  cos_lat*sin_lon;
 1811              		.loc 1 51 0
 1812 006c 2946     		mov	r1, r5
  50:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[6] =  cos_lat*cos_lon;
 1813              		.loc 1 50 0
 1814 006e 2063     		str	r0, [r4, #48]	@ float
  51:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[7] =  cos_lat*sin_lon;
 1815              		.loc 1 51 0
 1816 0070 3046     		mov	r0, r6
 1817 0072 FFF7FEFF 		bl	__aeabi_fmul
 1818              	.LVL333:
  52:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[8] =  sin_lat;
 1819              		.loc 1 52 0
 1820 0076 C4F83880 		str	r8, [r4, #56]	@ float
  51:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[7] =  cos_lat*sin_lon;
 1821              		.loc 1 51 0
 1822 007a 6063     		str	r0, [r4, #52]	@ float
  52:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[8] =  sin_lat;
 1823              		.loc 1 52 0
 1824 007c BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 1825              		.cfi_endproc
 1826              	.LFE3:
 1828              		.global	__aeabi_i2d
 1829              		.global	__aeabi_dsub
 1830              		.global	__aeabi_ddiv
 1831              		.global	__aeabi_i2f
 1832              		.section	.text.utm_of_lla_f,"ax",%progbits
 1833              		.align	1
 1834              		.global	utm_of_lla_f
 1835              		.thumb
 1836              		.thumb_func
 1838              	utm_of_lla_f:
 1839              	.LFB19:
 241:math/pprz_geodetic_float.c **** 
 242:math/pprz_geodetic_float.c **** static inline float inverse_isometric_latitude_f(float lat, float e, float epsilon) {
 243:math/pprz_geodetic_float.c ****   float exp_l = exp(lat);
 244:math/pprz_geodetic_float.c ****   float phi0 = 2 * atan(exp_l) - M_PI_2;
 245:math/pprz_geodetic_float.c ****   float phi_;
 246:math/pprz_geodetic_float.c ****   uint8_t max_iter = 3; /* To be sure to return */
 247:math/pprz_geodetic_float.c **** 
 248:math/pprz_geodetic_float.c ****   do {
 249:math/pprz_geodetic_float.c ****     phi_ = phi0;
 250:math/pprz_geodetic_float.c ****     float sin_phi = e * sin(phi_);
 251:math/pprz_geodetic_float.c ****     phi0 = 2 * atan (pow((1 + sin_phi) / (1. - sin_phi), e/2.) * exp_l) - M_PI_2;
 252:math/pprz_geodetic_float.c ****     max_iter--;
 253:math/pprz_geodetic_float.c ****   } while (max_iter && fabs(phi_ - phi0) > epsilon);
 254:math/pprz_geodetic_float.c ****   return phi0;
 255:math/pprz_geodetic_float.c **** }
 256:math/pprz_geodetic_float.c **** 
 257:math/pprz_geodetic_float.c **** void utm_of_lla_f(struct UtmCoor_f* utm, struct LlaCoor_f* lla) {
 1840              		.loc 1 257 0
 1841              		.cfi_startproc
 1842              		@ args = 0, pretend = 0, frame = 24
 1843              		@ frame_needed = 0, uses_anonymous_args = 0
 1844              	.LVL334:
 1845 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 1846              	.LCFI20:
 1847              		.cfi_def_cfa_offset 36
 1848              		.cfi_offset 4, -36
 1849              		.cfi_offset 5, -32
 1850              		.cfi_offset 6, -28
 1851              		.cfi_offset 7, -24
 1852              		.cfi_offset 8, -20
 1853              		.cfi_offset 9, -16
 1854              		.cfi_offset 10, -12
 1855              		.cfi_offset 11, -8
 1856              		.cfi_offset 14, -4
 1857 0004 8046     		mov	r8, r0
 258:math/pprz_geodetic_float.c ****   float lambda_c = LambdaOfUtmZone(utm->zone);
 1858              		.loc 1 258 0
 1859 0006 007B     		ldrb	r0, [r0, #12]	@ zero_extendqisi2
 1860              	.LVL335:
 1861 0008 0623     		movs	r3, #6
 1862 000a 0138     		subs	r0, r0, #1
 1863 000c 5843     		muls	r0, r3, r0
 257:math/pprz_geodetic_float.c **** void utm_of_lla_f(struct UtmCoor_f* utm, struct LlaCoor_f* lla) {
 1864              		.loc 1 257 0
 1865 000e 87B0     		sub	sp, sp, #28
 1866              	.LCFI21:
 1867              		.cfi_def_cfa_offset 64
 1868              		.loc 1 258 0
 1869 0010 B138     		subs	r0, r0, #177
 257:math/pprz_geodetic_float.c **** void utm_of_lla_f(struct UtmCoor_f* utm, struct LlaCoor_f* lla) {
 1870              		.loc 1 257 0
 1871 0012 8946     		mov	r9, r1
 1872              		.loc 1 258 0
 1873 0014 FFF7FEFF 		bl	__aeabi_i2d
 1874              	.LVL336:
 1875 0018 8DA3     		adr	r3, .L26
 1876 001a D3E90023 		ldrd	r2, [r3]
 1877 001e FFF7FEFF 		bl	__aeabi_dmul
 1878              	.LVL337:
 1879 0022 FFF7FEFF 		bl	__aeabi_d2f
 1880              	.LVL338:
 1881 0026 8446     		mov	ip, r0
 1882              	.LVL339:
 1883              	.LBB9:
 1884              	.LBB10:
 235:math/pprz_geodetic_float.c ****   return log (tan (M_PI_4 + phi / 2.0)) - e / 2.0 * log((1.0 + e * sin(phi)) / (1.0 - e * sin(phi))
 1885              		.loc 1 235 0
 1886 0028 D9F80400 		ldr	r0, [r9, #4]	@ float
 1887              	.LVL340:
 1888 002c CDF804C0 		str	ip, [sp, #4]
 1889 0030 FFF7FEFF 		bl	__aeabi_f2d
 1890              	.LVL341:
 1891 0034 0022     		movs	r2, #0
 1892 0036 904B     		ldr	r3, .L26+40
 1893 0038 0646     		mov	r6, r0
 1894 003a 0F46     		mov	r7, r1
 1895 003c FFF7FEFF 		bl	__aeabi_dmul
 1896              	.LVL342:
 1897 0040 85A3     		adr	r3, .L26+8
 1898 0042 D3E90023 		ldrd	r2, [r3]
 1899 0046 FFF7FEFF 		bl	__aeabi_dadd
 1900              	.LVL343:
 1901 004a FFF7FEFF 		bl	tan
 1902              	.LVL344:
 1903 004e FFF7FEFF 		bl	log
 1904              	.LVL345:
 1905 0052 0446     		mov	r4, r0
 1906 0054 0D46     		mov	r5, r1
 1907 0056 3046     		mov	r0, r6
 1908 0058 3946     		mov	r1, r7
 1909 005a FFF7FEFF 		bl	sin
 1910              	.LVL346:
 1911 005e 80A3     		adr	r3, .L26+16
 1912 0060 D3E90023 		ldrd	r2, [r3]
 1913 0064 FFF7FEFF 		bl	__aeabi_dmul
 1914              	.LVL347:
 1915 0068 0022     		movs	r2, #0
 1916 006a 844B     		ldr	r3, .L26+44
 1917 006c 8246     		mov	sl, r0
 1918 006e 8B46     		mov	fp, r1
 1919 0070 FFF7FEFF 		bl	__aeabi_dadd
 1920              	.LVL348:
 1921 0074 5246     		mov	r2, sl
 1922 0076 0646     		mov	r6, r0
 1923 0078 0F46     		mov	r7, r1
 1924 007a 5B46     		mov	r3, fp
 1925 007c 0020     		movs	r0, #0
 1926 007e 7F49     		ldr	r1, .L26+44
 1927 0080 FFF7FEFF 		bl	__aeabi_dsub
 1928              	.LVL349:
 1929 0084 0246     		mov	r2, r0
 1930 0086 0B46     		mov	r3, r1
 1931 0088 3046     		mov	r0, r6
 1932 008a 3946     		mov	r1, r7
 1933 008c FFF7FEFF 		bl	__aeabi_ddiv
 1934              	.LVL350:
 1935 0090 FFF7FEFF 		bl	log
 1936              	.LVL351:
 1937              	.LBE10:
 1938              	.LBE9:
 259:math/pprz_geodetic_float.c ****   float ll = isometric_latitude_f(lla->lat , E);
 260:math/pprz_geodetic_float.c ****   float dl = lla->lon - lambda_c;
 1939              		.loc 1 260 0
 1940 0094 DDF804C0 		ldr	ip, [sp, #4]
 1941              	.LBB14:
 1942              	.LBB11:
 235:math/pprz_geodetic_float.c ****   return log (tan (M_PI_4 + phi / 2.0)) - e / 2.0 * log((1.0 + e * sin(phi)) / (1.0 - e * sin(phi))
 1943              		.loc 1 235 0
 1944 0098 0646     		mov	r6, r0
 1945 009a 0F46     		mov	r7, r1
 1946              	.LVL352:
 1947              	.LBE11:
 1948              	.LBE14:
 1949              		.loc 1 260 0
 1950 009c D9F80000 		ldr	r0, [r9, #0]	@ float
 1951 00a0 6146     		mov	r1, ip
 1952 00a2 FFF7FEFF 		bl	__aeabi_fsub
 1953              	.LVL353:
 261:math/pprz_geodetic_float.c ****   float phi_ = asin(sin(dl) / cosh(ll));
 1954              		.loc 1 261 0
 1955 00a6 FFF7FEFF 		bl	__aeabi_f2d
 1956              	.LVL354:
 1957 00aa CDE90201 		strd	r0, [sp, #8]
 1958 00ae FFF7FEFF 		bl	sin
 1959              	.LVL355:
 1960              	.LBB15:
 1961              	.LBB12:
 235:math/pprz_geodetic_float.c ****   return log (tan (M_PI_4 + phi / 2.0)) - e / 2.0 * log((1.0 + e * sin(phi)) / (1.0 - e * sin(phi))
 1962              		.loc 1 235 0
 1963 00b2 6DA3     		adr	r3, .L26+24
 1964 00b4 D3E90023 		ldrd	r2, [r3]
 1965              	.LBE12:
 1966              	.LBE15:
 1967              		.loc 1 261 0
 1968 00b8 8246     		mov	sl, r0
 1969 00ba 8B46     		mov	fp, r1
 1970              	.LBB16:
 1971              	.LBB13:
 235:math/pprz_geodetic_float.c ****   return log (tan (M_PI_4 + phi / 2.0)) - e / 2.0 * log((1.0 + e * sin(phi)) / (1.0 - e * sin(phi))
 1972              		.loc 1 235 0
 1973 00bc 3046     		mov	r0, r6
 1974 00be 3946     		mov	r1, r7
 1975 00c0 FFF7FEFF 		bl	__aeabi_dmul
 1976              	.LVL356:
 1977 00c4 0246     		mov	r2, r0
 1978 00c6 0B46     		mov	r3, r1
 1979 00c8 2046     		mov	r0, r4
 1980 00ca 2946     		mov	r1, r5
 1981 00cc FFF7FEFF 		bl	__aeabi_dsub
 1982              	.LVL357:
 1983 00d0 FFF7FEFF 		bl	__aeabi_d2f
 1984              	.LVL358:
 1985              	.LBE13:
 1986              	.LBE16:
 1987              		.loc 1 261 0
 1988 00d4 FFF7FEFF 		bl	__aeabi_f2d
 1989              	.LVL359:
 1990 00d8 0446     		mov	r4, r0
 1991 00da 0D46     		mov	r5, r1
 1992 00dc FFF7FEFF 		bl	cosh
 1993              	.LVL360:
 1994 00e0 0246     		mov	r2, r0
 1995 00e2 0B46     		mov	r3, r1
 1996 00e4 5046     		mov	r0, sl
 1997 00e6 5946     		mov	r1, fp
 1998 00e8 FFF7FEFF 		bl	__aeabi_ddiv
 1999              	.LVL361:
 2000 00ec FFF7FEFF 		bl	asin
 2001              	.LVL362:
 2002 00f0 FFF7FEFF 		bl	__aeabi_d2f
 2003              	.LVL363:
 262:math/pprz_geodetic_float.c ****   float ll_ = isometric_latitude_fast_f(phi_);
 2004              		.loc 1 262 0
 2005 00f4 FFF7FEFF 		bl	isometric_latitude_fast_f
 2006              	.LVL364:
 263:math/pprz_geodetic_float.c ****   float lambda_ = atan(sinh(ll) / cos(dl));
 2007              		.loc 1 263 0
 2008 00f8 2946     		mov	r1, r5
 262:math/pprz_geodetic_float.c ****   float ll_ = isometric_latitude_fast_f(phi_);
 2009              		.loc 1 262 0
 2010 00fa 0590     		str	r0, [sp, #20]	@ float
 2011              	.LVL365:
 2012              		.loc 1 263 0
 2013 00fc 2046     		mov	r0, r4
 2014              	.LVL366:
 2015 00fe FFF7FEFF 		bl	sinh
 2016              	.LVL367:
 2017 0102 0646     		mov	r6, r0
 2018 0104 0F46     		mov	r7, r1
 2019 0106 DDE90201 		ldrd	r0, [sp, #8]
 2020 010a FFF7FEFF 		bl	cos
 2021              	.LVL368:
 2022 010e 0246     		mov	r2, r0
 2023 0110 0B46     		mov	r3, r1
 2024 0112 3046     		mov	r0, r6
 2025 0114 3946     		mov	r1, r7
 2026 0116 FFF7FEFF 		bl	__aeabi_ddiv
 2027              	.LVL369:
 2028 011a FFF7FEFF 		bl	atan
 2029              	.LVL370:
 2030 011e FFF7FEFF 		bl	__aeabi_d2f
 2031              	.LVL371:
 264:math/pprz_geodetic_float.c ****   struct complex z_ = { lambda_,  ll_ };
 265:math/pprz_geodetic_float.c ****   CScal(serie_coeff_proj_mercator[0], z_);
 2032              		.loc 1 265 0
 2033 0122 5749     		ldr	r1, .L26+48
 263:math/pprz_geodetic_float.c ****   float lambda_ = atan(sinh(ll) / cos(dl));
 2034              		.loc 1 263 0
 2035 0124 0290     		str	r0, [sp, #8]	@ float
 2036              	.LVL372:
 2037              		.loc 1 265 0
 2038 0126 FFF7FEFF 		bl	__aeabi_fmul
 2039              	.LVL373:
 2040 012a 5549     		ldr	r1, .L26+48
 2041 012c 8246     		mov	sl, r0
 2042              	.LVL374:
 2043 012e 0598     		ldr	r0, [sp, #20]	@ float
 2044              	.LVL375:
 2045 0130 FFF7FEFF 		bl	__aeabi_fmul
 2046              	.LVL376:
 2047 0134 0226     		movs	r6, #2
 2048 0136 0246     		mov	r2, r0
 2049              	.LVL377:
 2050              	.L23:
 2051              	.LBB17:
 266:math/pprz_geodetic_float.c ****   uint8_t k;
 267:math/pprz_geodetic_float.c ****   for(k = 1; k < 3; k++) {
 268:math/pprz_geodetic_float.c ****     struct complex z = { lambda_,  ll_ };
 269:math/pprz_geodetic_float.c ****     CScal(2*k, z);
 2052              		.loc 1 269 0 discriminator 2
 2053 0138 3046     		mov	r0, r6
 2054              	.LVL378:
 2055 013a 0092     		str	r2, [sp, #0]
 2056 013c FFF7FEFF 		bl	__aeabi_i2f
 2057              	.LVL379:
 2058 0140 0446     		mov	r4, r0
 2059              	.LVL380:
 2060 0142 2146     		mov	r1, r4
 2061 0144 0598     		ldr	r0, [sp, #20]	@ float
 2062              	.LVL381:
 2063 0146 FFF7FEFF 		bl	__aeabi_fmul
 2064              	.LVL382:
 2065              	.LBB18:
 2066              	.LBB19:
 270:math/pprz_geodetic_float.c ****     CSin(z);
 2067              		.loc 1 270 0 discriminator 2
 2068 014a 00F10040 		add	r0, r0, #-2147483648
 2069              	.LBE19:
 2070 014e FFF7FEFF 		bl	__aeabi_f2d
 2071              	.LVL383:
 2072 0152 FFF7FEFF 		bl	exp
 2073              	.LVL384:
 2074 0156 FFF7FEFF 		bl	__aeabi_d2f
 2075              	.LVL385:
 2076              	.LBE18:
 269:math/pprz_geodetic_float.c ****     CScal(2*k, z);
 2077              		.loc 1 269 0 discriminator 2
 2078 015a 2146     		mov	r1, r4
 2079              	.LBB21:
 2080              		.loc 1 270 0 discriminator 2
 2081 015c 0746     		mov	r7, r0
 2082              	.LVL386:
 2083              	.LBE21:
 269:math/pprz_geodetic_float.c ****     CScal(2*k, z);
 2084              		.loc 1 269 0 discriminator 2
 2085 015e 0298     		ldr	r0, [sp, #8]	@ float
 2086              	.LVL387:
 2087 0160 FFF7FEFF 		bl	__aeabi_fmul
 2088              	.LVL388:
 2089              	.LBB22:
 2090              		.loc 1 270 0 discriminator 2
 2091 0164 FFF7FEFF 		bl	__aeabi_f2d
 2092              	.LVL389:
 2093 0168 0446     		mov	r4, r0
 2094              	.LVL390:
 2095 016a 0D46     		mov	r5, r1
 2096 016c FFF7FEFF 		bl	cos
 2097              	.LVL391:
 2098 0170 FFF7FEFF 		bl	__aeabi_d2f
 2099              	.LVL392:
 2100 0174 2946     		mov	r1, r5
 2101 0176 8346     		mov	fp, r0
 2102              	.LVL393:
 2103 0178 2046     		mov	r0, r4
 2104              	.LVL394:
 2105 017a FFF7FEFF 		bl	sin
 2106              	.LVL395:
 2107 017e FFF7FEFF 		bl	__aeabi_d2f
 2108              	.LVL396:
 2109              	.LBE22:
 271:math/pprz_geodetic_float.c ****     CScal(serie_coeff_proj_mercator[k], z);
 2110              		.loc 1 271 0 discriminator 2
 2111 0182 4049     		ldr	r1, .L26+52
 2112              	.LBB23:
 270:math/pprz_geodetic_float.c ****     CSin(z);
 2113              		.loc 1 270 0 discriminator 2
 2114 0184 0546     		mov	r5, r0
 2115              	.LVL397:
 2116              	.LBE23:
 2117              		.loc 1 271 0 discriminator 2
 2118 0186 51F81640 		ldr	r4, [r1, r6, lsl #1]	@ float
 2119              	.LVL398:
 2120              	.LBB24:
 270:math/pprz_geodetic_float.c ****     CSin(z);
 2121              		.loc 1 270 0 discriminator 2
 2122 018a 3846     		mov	r0, r7
 2123              	.LVL399:
 2124 018c 2946     		mov	r1, r5
 2125 018e FFF7FEFF 		bl	__aeabi_fmul
 2126              	.LVL400:
 2127 0192 3946     		mov	r1, r7
 2128 0194 8446     		mov	ip, r0
 2129 0196 05F10040 		add	r0, r5, #-2147483648
 2130 019a CDF804C0 		str	ip, [sp, #4]
 2131 019e FFF7FEFF 		bl	__aeabi_fdiv
 2132              	.LVL401:
 2133 01a2 DDF804C0 		ldr	ip, [sp, #4]
 2134 01a6 0146     		mov	r1, r0
 2135 01a8 6046     		mov	r0, ip
 2136 01aa FFF7FEFF 		bl	__aeabi_fsub
 2137              	.LVL402:
 2138 01ae 4FF03F41 		mov	r1, #-1090519040
 2139 01b2 FFF7FEFF 		bl	__aeabi_fmul
 2140              	.LVL403:
 2141              	.LBE24:
 2142              		.loc 1 271 0 discriminator 2
 2143 01b6 2146     		mov	r1, r4
 2144              	.LBB25:
 2145              	.LBB20:
 270:math/pprz_geodetic_float.c ****     CSin(z);
 2146              		.loc 1 270 0 discriminator 2
 2147 01b8 00F10040 		add	r0, r0, #-2147483648
 2148              	.LBE20:
 2149              	.LBE25:
 2150              		.loc 1 271 0 discriminator 2
 2151 01bc FFF7FEFF 		bl	__aeabi_fmul
 2152              	.LVL404:
 2153 01c0 0146     		mov	r1, r0
 272:math/pprz_geodetic_float.c ****     CAdd(z, z_);
 2154              		.loc 1 272 0 discriminator 2
 2155 01c2 5046     		mov	r0, sl
 2156 01c4 FFF7FEFF 		bl	__aeabi_fadd
 2157              	.LVL405:
 2158              	.LBB26:
 270:math/pprz_geodetic_float.c ****     CSin(z);
 2159              		.loc 1 270 0 discriminator 2
 2160 01c8 5946     		mov	r1, fp
 2161              	.LBE26:
 2162              		.loc 1 272 0 discriminator 2
 2163 01ca 8246     		mov	sl, r0
 2164              	.LVL406:
 2165              	.LBB27:
 270:math/pprz_geodetic_float.c ****     CSin(z);
 2166              		.loc 1 270 0 discriminator 2
 2167 01cc 3846     		mov	r0, r7
 2168              	.LVL407:
 2169 01ce FFF7FEFF 		bl	__aeabi_fmul
 2170              	.LVL408:
 2171 01d2 3946     		mov	r1, r7
 2172 01d4 0546     		mov	r5, r0
 2173              	.LVL409:
 2174 01d6 5846     		mov	r0, fp
 2175 01d8 FFF7FEFF 		bl	__aeabi_fdiv
 2176              	.LVL410:
 2177 01dc 0146     		mov	r1, r0
 2178 01de 2846     		mov	r0, r5
 2179 01e0 FFF7FEFF 		bl	__aeabi_fsub
 2180              	.LVL411:
 2181 01e4 4FF03F41 		mov	r1, #-1090519040
 2182 01e8 FFF7FEFF 		bl	__aeabi_fmul
 2183              	.LVL412:
 2184              	.LBE27:
 271:math/pprz_geodetic_float.c ****     CScal(serie_coeff_proj_mercator[k], z);
 2185              		.loc 1 271 0 discriminator 2
 2186 01ec 2146     		mov	r1, r4
 2187 01ee FFF7FEFF 		bl	__aeabi_fmul
 2188              	.LVL413:
 2189              		.loc 1 272 0 discriminator 2
 2190 01f2 009A     		ldr	r2, [sp, #0]
 271:math/pprz_geodetic_float.c ****     CScal(serie_coeff_proj_mercator[k], z);
 2191              		.loc 1 271 0 discriminator 2
 2192 01f4 0146     		mov	r1, r0
 2193              		.loc 1 272 0 discriminator 2
 2194 01f6 1046     		mov	r0, r2
 2195 01f8 FFF7FEFF 		bl	__aeabi_fadd
 2196              	.LVL414:
 2197 01fc 0236     		adds	r6, r6, #2
 2198              	.LBE17:
 267:math/pprz_geodetic_float.c ****   for(k = 1; k < 3; k++) {
 2199              		.loc 1 267 0 discriminator 2
 2200 01fe 062E     		cmp	r6, #6
 2201              	.LBB28:
 2202              		.loc 1 272 0 discriminator 2
 2203 0200 0246     		mov	r2, r0
 2204              	.LVL415:
 2205              	.LBE28:
 267:math/pprz_geodetic_float.c ****   for(k = 1; k < 3; k++) {
 2206              		.loc 1 267 0 discriminator 2
 2207 0202 99D1     		bne	.L23
 2208              	.LVL416:
 273:math/pprz_geodetic_float.c ****   }
 274:math/pprz_geodetic_float.c ****   CScal(N, z_);
 2209              		.loc 1 274 0
 2210 0204 FFF7FEFF 		bl	__aeabi_f2d
 2211              	.LVL417:
 2212 0208 19A3     		adr	r3, .L26+32
 2213 020a D3E90023 		ldrd	r2, [r3]
 2214 020e FFF7FEFF 		bl	__aeabi_dmul
 2215              	.LVL418:
 2216 0212 FFF7FEFF 		bl	__aeabi_d2f
 2217              	.LVL419:
 275:math/pprz_geodetic_float.c ****   utm->east = DELTA_EAST + z_.im;
 2218              		.loc 1 275 0
 2219 0216 1C49     		ldr	r1, .L26+56
 2220 0218 FFF7FEFF 		bl	__aeabi_fadd
 2221              	.LVL420:
 2222 021c C8F80400 		str	r0, [r8, #4]	@ float
 274:math/pprz_geodetic_float.c ****   CScal(N, z_);
 2223              		.loc 1 274 0
 2224 0220 5046     		mov	r0, sl
 2225 0222 FFF7FEFF 		bl	__aeabi_f2d
 2226              	.LVL421:
 2227 0226 12A3     		adr	r3, .L26+32
 2228 0228 D3E90023 		ldrd	r2, [r3]
 2229 022c FFF7FEFF 		bl	__aeabi_dmul
 2230              	.LVL422:
 2231 0230 FFF7FEFF 		bl	__aeabi_d2f
 2232              	.LVL423:
 276:math/pprz_geodetic_float.c ****   utm->north = DELTA_NORTH + z_.re;
 2233              		.loc 1 276 0
 2234 0234 0021     		movs	r1, #0
 2235 0236 FFF7FEFF 		bl	__aeabi_fadd
 2236              	.LVL424:
 277:math/pprz_geodetic_float.c **** 
 278:math/pprz_geodetic_float.c ****   // copy alt above reference ellipsoid
 279:math/pprz_geodetic_float.c ****   utm->alt = lla->alt;
 2237              		.loc 1 279 0
 2238 023a D9F80830 		ldr	r3, [r9, #8]	@ float
 276:math/pprz_geodetic_float.c ****   utm->north = DELTA_NORTH + z_.re;
 2239              		.loc 1 276 0
 2240 023e C8F80000 		str	r0, [r8, #0]	@ float
 2241              		.loc 1 279 0
 2242 0242 C8F80830 		str	r3, [r8, #8]	@ float
 280:math/pprz_geodetic_float.c **** }
 2243              		.loc 1 280 0
 2244 0246 07B0     		add	sp, sp, #28
 2245 0248 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 2246              	.L27:
 2247 024c AFF30080 		.align	3
 2248              	.L26:
 2249 0250 399D52A2 		.word	2723323193
 2250 0254 46DF913F 		.word	1066524486
 2251 0258 182D4454 		.word	1413754136
 2252 025c FB21E93F 		.word	1072243195
 2253 0260 00000040 		.word	1073741824
 2254 0264 1AF2B43F 		.word	1068823066
 2255 0268 00000040 		.word	1073741824
 2256 026c 1AF2A43F 		.word	1067774490
 2257 0270 585BB16F 		.word	1873894232
 2258 0274 28525841 		.word	1096307240
 2259 0278 0000E03F 		.word	1071644672
 2260 027c 0000F03F 		.word	1072693248
 2261 0280 2E927F3F 		.word	1065325102
 2262 0284 00000000 		.word	.LANCHOR0
 2263 0288 0024F448 		.word	1223959552
 2264              		.cfi_endproc
 2265              	.LFE19:
 2267              		.global	__aeabi_fcmpgt
 2268 028c AFF30080 		.section	.text.lla_of_utm_f,"ax",%progbits
 2269              		.align	1
 2270              		.global	lla_of_utm_f
 2271              		.thumb
 2272              		.thumb_func
 2274              	lla_of_utm_f:
 2275              	.LFB20:
 281:math/pprz_geodetic_float.c **** 
 282:math/pprz_geodetic_float.c **** void lla_of_utm_f(struct LlaCoor_f* lla, struct UtmCoor_f* utm) {
 2276              		.loc 1 282 0
 2277              		.cfi_startproc
 2278              		@ args = 0, pretend = 0, frame = 32
 2279              		@ frame_needed = 0, uses_anonymous_args = 0
 2280              	.LVL425:
 2281 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 2282              	.LCFI22:
 2283              		.cfi_def_cfa_offset 36
 2284              		.cfi_offset 4, -36
 2285              		.cfi_offset 5, -32
 2286              		.cfi_offset 6, -28
 2287              		.cfi_offset 7, -24
 2288              		.cfi_offset 8, -20
 2289              		.cfi_offset 9, -16
 2290              		.cfi_offset 10, -12
 2291              		.cfi_offset 11, -8
 2292              		.cfi_offset 14, -4
 2293 0004 8846     		mov	r8, r1
 2294 0006 89B0     		sub	sp, sp, #36
 2295              	.LCFI23:
 2296              		.cfi_def_cfa_offset 72
 2297              		.loc 1 282 0
 2298 0008 8246     		mov	sl, r0
 283:math/pprz_geodetic_float.c ****   float scale = 1 / N / serie_coeff_proj_mercator[0];
 284:math/pprz_geodetic_float.c ****   float real = (utm->north - DELTA_NORTH) * scale;
 2299              		.loc 1 284 0
 2300 000a 0868     		ldr	r0, [r1, #0]	@ float
 2301              	.LVL426:
 2302 000c 9E49     		ldr	r1, .L34+48
 2303              	.LVL427:
 2304 000e FFF7FEFF 		bl	__aeabi_fmul
 2305              	.LVL428:
 2306 0012 8346     		mov	fp, r0
 2307              	.LVL429:
 285:math/pprz_geodetic_float.c ****   float img = (utm->east - DELTA_EAST) * scale;
 2308              		.loc 1 285 0
 2309 0014 D8F80400 		ldr	r0, [r8, #4]	@ float
 2310              	.LVL430:
 2311 0018 FFF7FEFF 		bl	__aeabi_f2d
 2312              	.LVL431:
 2313 001c 8EA3     		adr	r3, .L34
 2314 001e D3E90023 		ldrd	r2, [r3]
 2315 0022 FFF7FEFF 		bl	__aeabi_dsub
 2316              	.LVL432:
 2317 0026 8EA3     		adr	r3, .L34+8
 2318 0028 D3E90023 		ldrd	r2, [r3]
 2319 002c FFF7FEFF 		bl	__aeabi_dmul
 2320              	.LVL433:
 2321 0030 FFF7FEFF 		bl	__aeabi_d2f
 2322              	.LVL434:
 2323              	.LBB36:
 286:math/pprz_geodetic_float.c ****   struct complex z = { real, img };
 287:math/pprz_geodetic_float.c **** 
 288:math/pprz_geodetic_float.c ****   uint8_t k;
 289:math/pprz_geodetic_float.c ****   for(k = 1; k < 2; k++) {
 290:math/pprz_geodetic_float.c ****     struct complex z_ = { real, img };
 291:math/pprz_geodetic_float.c ****     CScal(2*k, z_);
 2324              		.loc 1 291 0
 2325 0034 0146     		mov	r1, r0
 2326              	.LBE36:
 285:math/pprz_geodetic_float.c ****   float img = (utm->east - DELTA_EAST) * scale;
 2327              		.loc 1 285 0
 2328 0036 0746     		mov	r7, r0
 2329              	.LVL435:
 2330              	.LBB45:
 2331              		.loc 1 291 0
 2332 0038 FFF7FEFF 		bl	__aeabi_fadd
 2333              	.LVL436:
 2334              	.LBB37:
 2335              	.LBB38:
 292:math/pprz_geodetic_float.c ****     CSin(z_);
 2336              		.loc 1 292 0
 2337 003c 00F10040 		add	r0, r0, #-2147483648
 2338              	.LBE38:
 2339 0040 FFF7FEFF 		bl	__aeabi_f2d
 2340              	.LVL437:
 2341 0044 FFF7FEFF 		bl	exp
 2342              	.LVL438:
 2343 0048 FFF7FEFF 		bl	__aeabi_d2f
 2344              	.LVL439:
 2345              	.LBE37:
 291:math/pprz_geodetic_float.c ****     CScal(2*k, z_);
 2346              		.loc 1 291 0
 2347 004c 5946     		mov	r1, fp
 2348              	.LBB40:
 2349              		.loc 1 292 0
 2350 004e 8146     		mov	r9, r0
 2351              	.LVL440:
 2352              	.LBE40:
 291:math/pprz_geodetic_float.c ****     CScal(2*k, z_);
 2353              		.loc 1 291 0
 2354 0050 5846     		mov	r0, fp
 2355              	.LVL441:
 2356 0052 FFF7FEFF 		bl	__aeabi_fadd
 2357              	.LVL442:
 2358              	.LBB41:
 2359              		.loc 1 292 0
 2360 0056 FFF7FEFF 		bl	__aeabi_f2d
 2361              	.LVL443:
 2362 005a 0446     		mov	r4, r0
 2363 005c 0D46     		mov	r5, r1
 2364 005e FFF7FEFF 		bl	cos
 2365              	.LVL444:
 2366 0062 FFF7FEFF 		bl	__aeabi_d2f
 2367              	.LVL445:
 2368 0066 2946     		mov	r1, r5
 2369 0068 0646     		mov	r6, r0
 2370              	.LVL446:
 2371 006a 2046     		mov	r0, r4
 2372              	.LVL447:
 2373 006c FFF7FEFF 		bl	sin
 2374              	.LVL448:
 2375 0070 FFF7FEFF 		bl	__aeabi_d2f
 2376              	.LVL449:
 2377 0074 0446     		mov	r4, r0
 2378              	.LVL450:
 2379              	.LBE41:
 2380              	.LBE45:
 293:math/pprz_geodetic_float.c ****     CScal(serie_coeff_proj_mercator_inverse[k], z_);
 294:math/pprz_geodetic_float.c ****     CSub(z_, z);
 295:math/pprz_geodetic_float.c ****   }
 296:math/pprz_geodetic_float.c **** 
 297:math/pprz_geodetic_float.c ****   float lambda_c = LambdaOfUtmZone(utm->zone);
 2381              		.loc 1 297 0
 2382 0076 98F80C00 		ldrb	r0, [r8, #12]	@ zero_extendqisi2
 2383              	.LVL451:
 2384 007a 0623     		movs	r3, #6
 2385 007c 0138     		subs	r0, r0, #1
 2386 007e 5843     		muls	r0, r3, r0
 2387 0080 B138     		subs	r0, r0, #177
 2388 0082 FFF7FEFF 		bl	__aeabi_i2d
 2389              	.LVL452:
 2390 0086 78A3     		adr	r3, .L34+16
 2391 0088 D3E90023 		ldrd	r2, [r3]
 2392 008c FFF7FEFF 		bl	__aeabi_dmul
 2393              	.LVL453:
 2394 0090 FFF7FEFF 		bl	__aeabi_d2f
 2395              	.LVL454:
 298:math/pprz_geodetic_float.c ****   lla->lon = lambda_c + atan (sinh(z.im) / cos(z.re));
 2396              		.loc 1 298 0
 2397 0094 FFF7FEFF 		bl	__aeabi_f2d
 2398              	.LVL455:
 2399 0098 CDE90201 		strd	r0, [sp, #8]
 2400              	.LBB46:
 2401              	.LBB42:
 292:math/pprz_geodetic_float.c ****     CSin(z_);
 2402              		.loc 1 292 0
 2403 009c 3146     		mov	r1, r6
 2404 009e 4846     		mov	r0, r9
 2405 00a0 FFF7FEFF 		bl	__aeabi_fmul
 2406              	.LVL456:
 2407 00a4 4946     		mov	r1, r9
 2408 00a6 0546     		mov	r5, r0
 2409 00a8 3046     		mov	r0, r6
 2410 00aa FFF7FEFF 		bl	__aeabi_fdiv
 2411              	.LVL457:
 2412 00ae 0146     		mov	r1, r0
 2413 00b0 2846     		mov	r0, r5
 2414 00b2 FFF7FEFF 		bl	__aeabi_fsub
 2415              	.LVL458:
 2416 00b6 4FF03F41 		mov	r1, #-1090519040
 2417 00ba FFF7FEFF 		bl	__aeabi_fmul
 2418              	.LVL459:
 2419              	.LBE42:
 293:math/pprz_geodetic_float.c ****     CScal(serie_coeff_proj_mercator_inverse[k], z_);
 2420              		.loc 1 293 0
 2421 00be 7349     		ldr	r1, .L34+52
 2422 00c0 FFF7FEFF 		bl	__aeabi_fmul
 2423              	.LVL460:
 2424 00c4 0146     		mov	r1, r0
 294:math/pprz_geodetic_float.c ****     CSub(z_, z);
 2425              		.loc 1 294 0
 2426 00c6 3846     		mov	r0, r7
 2427 00c8 FFF7FEFF 		bl	__aeabi_fsub
 2428              	.LVL461:
 2429              	.LBE46:
 2430              		.loc 1 298 0
 2431 00cc FFF7FEFF 		bl	__aeabi_f2d
 2432              	.LVL462:
 2433 00d0 CDE90401 		strd	r0, [sp, #16]
 2434 00d4 FFF7FEFF 		bl	sinh
 2435              	.LVL463:
 2436 00d8 0646     		mov	r6, r0
 2437              	.LVL464:
 2438 00da 0F46     		mov	r7, r1
 2439              	.LVL465:
 2440              	.LBB47:
 2441              	.LBB43:
 292:math/pprz_geodetic_float.c ****     CSin(z_);
 2442              		.loc 1 292 0
 2443 00dc 4846     		mov	r0, r9
 2444 00de 2146     		mov	r1, r4
 2445 00e0 FFF7FEFF 		bl	__aeabi_fmul
 2446              	.LVL466:
 2447 00e4 4946     		mov	r1, r9
 2448 00e6 0346     		mov	r3, r0
 2449 00e8 04F10040 		add	r0, r4, #-2147483648
 2450 00ec 0193     		str	r3, [sp, #4]
 2451 00ee FFF7FEFF 		bl	__aeabi_fdiv
 2452              	.LVL467:
 2453 00f2 019B     		ldr	r3, [sp, #4]
 2454 00f4 0146     		mov	r1, r0
 2455 00f6 1846     		mov	r0, r3
 2456 00f8 FFF7FEFF 		bl	__aeabi_fsub
 2457              	.LVL468:
 2458 00fc 4FF03F41 		mov	r1, #-1090519040
 2459 0100 FFF7FEFF 		bl	__aeabi_fmul
 2460              	.LVL469:
 2461              	.LBE43:
 293:math/pprz_geodetic_float.c ****     CScal(serie_coeff_proj_mercator_inverse[k], z_);
 2462              		.loc 1 293 0
 2463 0104 6149     		ldr	r1, .L34+52
 2464              	.LBB44:
 2465              	.LBB39:
 292:math/pprz_geodetic_float.c ****     CSin(z_);
 2466              		.loc 1 292 0
 2467 0106 00F10040 		add	r0, r0, #-2147483648
 2468              	.LBE39:
 2469              	.LBE44:
 293:math/pprz_geodetic_float.c ****     CScal(serie_coeff_proj_mercator_inverse[k], z_);
 2470              		.loc 1 293 0
 2471 010a FFF7FEFF 		bl	__aeabi_fmul
 2472              	.LVL470:
 2473 010e 0146     		mov	r1, r0
 294:math/pprz_geodetic_float.c ****     CSub(z_, z);
 2474              		.loc 1 294 0
 2475 0110 5846     		mov	r0, fp
 2476 0112 FFF7FEFF 		bl	__aeabi_fsub
 2477              	.LVL471:
 2478              	.LBE47:
 2479              		.loc 1 298 0
 2480 0116 FFF7FEFF 		bl	__aeabi_f2d
 2481              	.LVL472:
 2482 011a CDE90601 		strd	r0, [sp, #24]
 2483 011e FFF7FEFF 		bl	cos
 2484              	.LVL473:
 2485 0122 0246     		mov	r2, r0
 2486 0124 0B46     		mov	r3, r1
 2487 0126 3046     		mov	r0, r6
 2488 0128 3946     		mov	r1, r7
 2489 012a FFF7FEFF 		bl	__aeabi_ddiv
 2490              	.LVL474:
 2491 012e FFF7FEFF 		bl	atan
 2492              	.LVL475:
 2493 0132 0246     		mov	r2, r0
 2494 0134 0B46     		mov	r3, r1
 2495 0136 DDE90201 		ldrd	r0, [sp, #8]
 2496 013a FFF7FEFF 		bl	__aeabi_dadd
 2497              	.LVL476:
 2498 013e FFF7FEFF 		bl	__aeabi_d2f
 2499              	.LVL477:
 2500 0142 CAF80000 		str	r0, [sl, #0]	@ float
 299:math/pprz_geodetic_float.c ****   float phi_ = asin (sin(z.re) / cosh(z.im));
 2501              		.loc 1 299 0
 2502 0146 DDE90601 		ldrd	r0, [sp, #24]
 2503 014a FFF7FEFF 		bl	sin
 2504              	.LVL478:
 2505 014e 0446     		mov	r4, r0
 2506              	.LVL479:
 2507 0150 0D46     		mov	r5, r1
 2508 0152 DDE90401 		ldrd	r0, [sp, #16]
 2509 0156 FFF7FEFF 		bl	cosh
 2510              	.LVL480:
 2511 015a 0246     		mov	r2, r0
 2512 015c 0B46     		mov	r3, r1
 2513 015e 2046     		mov	r0, r4
 2514 0160 2946     		mov	r1, r5
 2515 0162 FFF7FEFF 		bl	__aeabi_ddiv
 2516              	.LVL481:
 2517 0166 FFF7FEFF 		bl	asin
 2518              	.LVL482:
 2519 016a FFF7FEFF 		bl	__aeabi_d2f
 2520              	.LVL483:
 300:math/pprz_geodetic_float.c ****   float il = isometric_latitude_fast_f(phi_);
 2521              		.loc 1 300 0
 2522 016e FFF7FEFF 		bl	isometric_latitude_fast_f
 2523              	.LVL484:
 2524              	.LBB48:
 2525              	.LBB49:
 243:math/pprz_geodetic_float.c ****   float exp_l = exp(lat);
 2526              		.loc 1 243 0
 2527 0172 FFF7FEFF 		bl	__aeabi_f2d
 2528              	.LVL485:
 2529 0176 FFF7FEFF 		bl	exp
 2530              	.LVL486:
 2531 017a FFF7FEFF 		bl	__aeabi_d2f
 2532              	.LVL487:
 244:math/pprz_geodetic_float.c ****   float phi0 = 2 * atan(exp_l) - M_PI_2;
 2533              		.loc 1 244 0
 2534 017e FFF7FEFF 		bl	__aeabi_f2d
 2535              	.LVL488:
 2536 0182 0646     		mov	r6, r0
 2537 0184 0F46     		mov	r7, r1
 2538 0186 FFF7FEFF 		bl	atan
 2539              	.LVL489:
 2540 018a 0246     		mov	r2, r0
 2541 018c 0B46     		mov	r3, r1
 2542 018e FFF7FEFF 		bl	__aeabi_dadd
 2543              	.LVL490:
 2544 0192 37A3     		adr	r3, .L34+24
 2545 0194 D3E90023 		ldrd	r2, [r3]
 2546 0198 FFF7FEFF 		bl	__aeabi_dsub
 2547              	.LVL491:
 2548 019c FFF7FEFF 		bl	__aeabi_d2f
 2549              	.LVL492:
 2550 01a0 4FF0030B 		mov	fp, #3
 2551              	.LVL493:
 2552 01a4 8146     		mov	r9, r0
 2553              	.LVL494:
 2554              	.L30:
 2555              	.LBB50:
 250:math/pprz_geodetic_float.c ****     float sin_phi = e * sin(phi_);
 2556              		.loc 1 250 0
 2557 01a6 4846     		mov	r0, r9
 2558 01a8 FFF7FEFF 		bl	__aeabi_f2d
 2559              	.LVL495:
 2560 01ac FFF7FEFF 		bl	sin
 2561              	.LVL496:
 2562 01b0 31A3     		adr	r3, .L34+32
 2563 01b2 D3E90023 		ldrd	r2, [r3]
 2564 01b6 FFF7FEFF 		bl	__aeabi_dmul
 2565              	.LVL497:
 2566 01ba FFF7FEFF 		bl	__aeabi_d2f
 2567              	.LVL498:
 251:math/pprz_geodetic_float.c ****     phi0 = 2 * atan (pow((1 + sin_phi) / (1. - sin_phi), e/2.) * exp_l) - M_PI_2;
 2568              		.loc 1 251 0
 2569 01be 4FF07E51 		mov	r1, #1065353216
 2570 01c2 0190     		str	r0, [sp, #4]
 2571 01c4 FFF7FEFF 		bl	__aeabi_fadd
 2572              	.LVL499:
 2573 01c8 FFF7FEFF 		bl	__aeabi_f2d
 2574              	.LVL500:
 2575 01cc 0446     		mov	r4, r0
 2576 01ce 0198     		ldr	r0, [sp, #4]
 2577 01d0 0D46     		mov	r5, r1
 2578 01d2 FFF7FEFF 		bl	__aeabi_f2d
 2579              	.LVL501:
 2580 01d6 0246     		mov	r2, r0
 2581 01d8 0B46     		mov	r3, r1
 2582 01da 0020     		movs	r0, #0
 2583 01dc 2C49     		ldr	r1, .L34+56
 2584 01de FFF7FEFF 		bl	__aeabi_dsub
 2585              	.LVL502:
 2586 01e2 0246     		mov	r2, r0
 2587 01e4 0B46     		mov	r3, r1
 2588 01e6 2046     		mov	r0, r4
 2589 01e8 2946     		mov	r1, r5
 2590 01ea FFF7FEFF 		bl	__aeabi_ddiv
 2591              	.LVL503:
 2592 01ee 24A3     		adr	r3, .L34+40
 2593 01f0 D3E90023 		ldrd	r2, [r3]
 2594 01f4 FFF7FEFF 		bl	pow
 2595              	.LVL504:
 2596 01f8 3246     		mov	r2, r6
 2597 01fa 3B46     		mov	r3, r7
 2598 01fc FFF7FEFF 		bl	__aeabi_dmul
 2599              	.LVL505:
 2600 0200 FFF7FEFF 		bl	atan
 2601              	.LVL506:
 2602 0204 0246     		mov	r2, r0
 2603 0206 0B46     		mov	r3, r1
 2604 0208 FFF7FEFF 		bl	__aeabi_dadd
 2605              	.LVL507:
 2606 020c 18A3     		adr	r3, .L34+24
 2607 020e D3E90023 		ldrd	r2, [r3]
 2608 0212 FFF7FEFF 		bl	__aeabi_dsub
 2609              	.LVL508:
 2610 0216 FFF7FEFF 		bl	__aeabi_d2f
 2611              	.LVL509:
 2612 021a 0BF1FF3B 		add	fp, fp, #-1
 2613              	.LBE50:
 253:math/pprz_geodetic_float.c ****   } while (max_iter && fabs(phi_ - phi0) > epsilon);
 2614              		.loc 1 253 0
 2615 021e 1BF0FF0B 		ands	fp, fp, #255
 2616              	.LBB51:
 251:math/pprz_geodetic_float.c ****     phi0 = 2 * atan (pow((1 + sin_phi) / (1. - sin_phi), e/2.) * exp_l) - M_PI_2;
 2617              		.loc 1 251 0
 2618 0222 0446     		mov	r4, r0
 2619              	.LVL510:
 2620              	.LBE51:
 253:math/pprz_geodetic_float.c ****   } while (max_iter && fabs(phi_ - phi0) > epsilon);
 2621              		.loc 1 253 0
 2622 0224 08D1     		bne	.L29
 2623              	.LVL511:
 2624              	.L31:
 2625              	.LBE49:
 2626              	.LBE48:
 301:math/pprz_geodetic_float.c ****   lla->lat = inverse_isometric_latitude_f(il, E, 1e-8);
 302:math/pprz_geodetic_float.c **** 
 303:math/pprz_geodetic_float.c ****   // copy alt above reference ellipsoid
 304:math/pprz_geodetic_float.c ****   lla->alt = utm->alt;
 2627              		.loc 1 304 0
 2628 0226 D8F80810 		ldr	r1, [r8, #8]	@ float
 301:math/pprz_geodetic_float.c ****   lla->lat = inverse_isometric_latitude_f(il, E, 1e-8);
 2629              		.loc 1 301 0
 2630 022a CAF80440 		str	r4, [sl, #4]	@ float
 2631              		.loc 1 304 0
 2632 022e CAF80810 		str	r1, [sl, #8]	@ float
 305:math/pprz_geodetic_float.c **** }
 2633              		.loc 1 305 0
 2634 0232 09B0     		add	sp, sp, #36
 2635 0234 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 2636              	.LVL512:
 2637              	.L29:
 2638              	.LBB53:
 2639              	.LBB52:
 253:math/pprz_geodetic_float.c ****   } while (max_iter && fabs(phi_ - phi0) > epsilon);
 2640              		.loc 1 253 0
 2641 0238 4846     		mov	r0, r9
 2642              	.LVL513:
 2643 023a 2146     		mov	r1, r4
 2644 023c FFF7FEFF 		bl	__aeabi_fsub
 2645              	.LVL514:
 2646 0240 1449     		ldr	r1, .L34+60
 2647 0242 20F00040 		bic	r0, r0, #-2147483648
 251:math/pprz_geodetic_float.c ****     phi0 = 2 * atan (pow((1 + sin_phi) / (1. - sin_phi), e/2.) * exp_l) - M_PI_2;
 2648              		.loc 1 251 0
 2649 0246 A146     		mov	r9, r4
 2650              	.LVL515:
 253:math/pprz_geodetic_float.c ****   } while (max_iter && fabs(phi_ - phi0) > epsilon);
 2651              		.loc 1 253 0
 2652 0248 FFF7FEFF 		bl	__aeabi_fcmpgt
 2653              	.LVL516:
 2654 024c 0028     		cmp	r0, #0
 2655 024e AAD1     		bne	.L30
 2656 0250 E9E7     		b	.L31
 2657              	.L35:
 2658 0252 00BFAFF3 		.align	3
 2658      0080
 2659              	.L34:
 2660 0258 00000000 		.word	0
 2661 025c 80841E41 		.word	1092519040
 2662 0260 00000060 		.word	1610612736
 2663 0264 5016853E 		.word	1048909392
 2664 0268 399D52A2 		.word	2723323193
 2665 026c 46DF913F 		.word	1066524486
 2666 0270 182D4454 		.word	1413754136
 2667 0274 FB21F93F 		.word	1073291771
 2668 0278 00000040 		.word	1073741824
 2669 027c 1AF2B43F 		.word	1068823066
 2670 0280 00000040 		.word	1073741824
 2671 0284 1AF2A43F 		.word	1067774490
 2672 0288 83B22834 		.word	875082371
 2673 028c 419B5B3A 		.word	979082049
 2674 0290 0000F03F 		.word	1072693248
 2675 0294 77CC2B32 		.word	841731191
 2676              	.LBE52:
 2677              	.LBE53:
 2678              		.cfi_endproc
 2679              	.LFE20:
 2681              		.section	.rodata.serie_coeff_proj_mercator,"a",%progbits
 2682              		.align	2
 2683              		.set	.LANCHOR0,. + 0
 2686              	serie_coeff_proj_mercator:
 2687 0000 2E927F3F 		.word	1065325102
 2688 0004 063D5B3A 		.word	979057926
 2689 0008 CBE54B35 		.word	894166475
 2690 000c 8A53A430 		.word	816075658
 2691 0010 19A5292C 		.word	740926745
 2692              		.text
 2693              	.Letext0:
 2694              		.file 2 "math/pprz_algebra_float.h"
 2695              		.file 3 "math/pprz_geodetic_float.h"
 2696              		.file 4 "math/pprz_algebra_double.h"
 2697              		.file 5 "math/pprz_geodetic_double.h"
 2698              		.file 6 "./math/pprz_geodetic_utm.h"
 2699              		.file 7 "/opt/local/bin/../lib/gcc/arm-none-eabi/4.7.3/../../../../arm-none-eabi/include/math.h"
 2700              		.file 8 "/opt/local/bin/../lib/gcc/arm-none-eabi/4.7.3/../../../../arm-none-eabi/include/stdint.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 pprz_geodetic_float.c
/var/tmp//ccFoVcmw.s:23     .text.isometric_latitude_fast_f:0000000000000000 $t
/var/tmp//ccFoVcmw.s:27     .text.isometric_latitude_fast_f:0000000000000000 isometric_latitude_fast_f
/var/tmp//ccFoVcmw.s:62     .text.isometric_latitude_fast_f:0000000000000028 $d
/var/tmp//ccFoVcmw.s:72     .text.enu_of_ecef_point_f:0000000000000000 $t
/var/tmp//ccFoVcmw.s:77     .text.enu_of_ecef_point_f:0000000000000000 enu_of_ecef_point_f
/var/tmp//ccFoVcmw.s:204    .text.ned_of_ecef_point_f:0000000000000000 $t
/var/tmp//ccFoVcmw.s:209    .text.ned_of_ecef_point_f:0000000000000000 ned_of_ecef_point_f
/var/tmp//ccFoVcmw.s:246    .text.enu_of_ecef_vect_f:0000000000000000 $t
/var/tmp//ccFoVcmw.s:251    .text.enu_of_ecef_vect_f:0000000000000000 enu_of_ecef_vect_f
/var/tmp//ccFoVcmw.s:353    .text.ned_of_ecef_vect_f:0000000000000000 $t
/var/tmp//ccFoVcmw.s:358    .text.ned_of_ecef_vect_f:0000000000000000 ned_of_ecef_vect_f
/var/tmp//ccFoVcmw.s:395    .text.ecef_of_enu_point_f:0000000000000000 $t
/var/tmp//ccFoVcmw.s:400    .text.ecef_of_enu_point_f:0000000000000000 ecef_of_enu_point_f
/var/tmp//ccFoVcmw.s:630    .text.ecef_of_ned_point_f:0000000000000000 $t
/var/tmp//ccFoVcmw.s:635    .text.ecef_of_ned_point_f:0000000000000000 ecef_of_ned_point_f
/var/tmp//ccFoVcmw.s:673    .text.ecef_of_enu_vect_f:0000000000000000 $t
/var/tmp//ccFoVcmw.s:678    .text.ecef_of_enu_vect_f:0000000000000000 ecef_of_enu_vect_f
/var/tmp//ccFoVcmw.s:899    .text.ecef_of_ned_vect_f:0000000000000000 $t
/var/tmp//ccFoVcmw.s:904    .text.ecef_of_ned_vect_f:0000000000000000 ecef_of_ned_vect_f
/var/tmp//ccFoVcmw.s:943    .text.lla_of_ecef_f:0000000000000000 $t
/var/tmp//ccFoVcmw.s:948    .text.lla_of_ecef_f:0000000000000000 lla_of_ecef_f
/var/tmp//ccFoVcmw.s:1314   .text.lla_of_ecef_f:0000000000000250 $d
/var/tmp//ccFoVcmw.s:1331   .text.ltp_def_from_ecef_f:0000000000000000 $t
/var/tmp//ccFoVcmw.s:1336   .text.ltp_def_from_ecef_f:0000000000000000 ltp_def_from_ecef_f
/var/tmp//ccFoVcmw.s:1457   .text.ecef_of_lla_f:0000000000000000 $t
/var/tmp//ccFoVcmw.s:1462   .text.ecef_of_lla_f:0000000000000000 ecef_of_lla_f
/var/tmp//ccFoVcmw.s:1608   .text.ecef_of_lla_f:00000000000000c0 $d
/var/tmp//ccFoVcmw.s:1616   .text.ned_of_lla_point_f:0000000000000000 $t
/var/tmp//ccFoVcmw.s:1621   .text.ned_of_lla_point_f:0000000000000000 ned_of_lla_point_f
/var/tmp//ccFoVcmw.s:1660   .text.enu_of_lla_point_f:0000000000000000 $t
/var/tmp//ccFoVcmw.s:1665   .text.enu_of_lla_point_f:0000000000000000 enu_of_lla_point_f
/var/tmp//ccFoVcmw.s:1704   .text.ltp_def_from_lla_f:0000000000000000 $t
/var/tmp//ccFoVcmw.s:1709   .text.ltp_def_from_lla_f:0000000000000000 ltp_def_from_lla_f
/var/tmp//ccFoVcmw.s:1833   .text.utm_of_lla_f:0000000000000000 $t
/var/tmp//ccFoVcmw.s:1838   .text.utm_of_lla_f:0000000000000000 utm_of_lla_f
/var/tmp//ccFoVcmw.s:2249   .text.utm_of_lla_f:0000000000000250 $d
/var/tmp//ccFoVcmw.s:2269   .text.lla_of_utm_f:0000000000000000 $t
/var/tmp//ccFoVcmw.s:2274   .text.lla_of_utm_f:0000000000000000 lla_of_utm_f
/var/tmp//ccFoVcmw.s:2660   .text.lla_of_utm_f:0000000000000258 $d
/var/tmp//ccFoVcmw.s:2682   .rodata.serie_coeff_proj_mercator:0000000000000000 $d
/var/tmp//ccFoVcmw.s:2686   .rodata.serie_coeff_proj_mercator:0000000000000000 serie_coeff_proj_mercator
                     .debug_frame:0000000000000010 $d
/var/tmp//ccFoVcmw.s:71     .text.isometric_latitude_fast_f:0000000000000034 $t
/var/tmp//ccFoVcmw.s:1330   .text.lla_of_ecef_f:0000000000000284 $t
/var/tmp//ccFoVcmw.s:2268   .text.utm_of_lla_f:000000000000028c $t

UNDEFINED SYMBOLS
__aeabi_f2d
__aeabi_dmul
__aeabi_dadd
__aeabi_d2f
tan
log
__aeabi_fsub
__aeabi_fmul
__aeabi_fadd
__aeabi_fdiv
sqrtf
powf
atanf
atan2f
sinf
cosf
__aeabi_i2d
__aeabi_dsub
__aeabi_ddiv
__aeabi_i2f
sin
cosh
asin
sinh
cos
atan
exp
__aeabi_fcmpgt
pow
